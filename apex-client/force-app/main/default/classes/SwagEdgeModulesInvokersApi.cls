/*
 * EMS API Documentation
 * Enterprise Mobility Services API\r\n\r\n  [Learn about EMS](https://www.embarcadero.com/products/rad-studio/enterprise-mobility-services)\r\n\r\n  EMS (Enterprise Mobility Services) offers a Mobile Enterprise Application Platform (MEAP)\r\n\r\n  TurnKey Middleware for Interconnected Distributed Apps
 *
 * OpenAPI spec version: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

public class SwagEdgeModulesInvokersApi {
    SwagClient client;

    public SwagEdgeModulesInvokersApi(SwagClient client) {
        this.client = client;
    }

    public SwagEdgeModulesInvokersApi() {
        this.client = new SwagClient();
    }

    public SwagClient getClient() {
        return this.client;
    }

    /**
     * Invoke Resource Delete Method
     * Used to invoke the DELETE method of the resource from an existing EMS EdgeModule.
     * @param mname Is the EMS EdgeModule name (required)
     * @param rname Is the unique EMS EdgeModule Resource name (required)
     * @param xEmbarcaderoApplicationId  (optional)
     * @param xEmbarcaderoAppSecret  (optional)
     * @param xEmbarcaderoMasterSecret  (optional)
     * @throws Swagger.ApiException if fails to make API call
     */
    public void deleteResourceEndpoint(Map<String, Object> params) {
        client.assertNotNull(params.get('mname'), 'mname');
        client.assertNotNull(params.get('rname'), 'rname');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        client.invoke(
            'DELETE', '/edgemodules/{mname}/{rname}', '',
            query, form,
            new Map<String, Object>{
                'mname' => (String) params.get('mname'),
                'rname' => (String) params.get('rname')
            },
            new Map<String, Object>{
                'X-Embarcadero-Application-Id' => (String) params.get('xEmbarcaderoApplicationId'),
                'X-Embarcadero-App-Secret' => (String) params.get('xEmbarcaderoAppSecret'),
                'X-Embarcadero-Master-Secret' => (String) params.get('xEmbarcaderoMasterSecret')
            },
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String>(),
            null
        );
    }
    /**
     * Invoke Resource/* Delete Method
     * Used to invoke the DELETE method of the resource from an existing EMS EdgeModule.
     * @param mname Is the EMS EdgeModule name (required)
     * @param rname Is the unique EMS EdgeModule Resource name (required)
     * @param wildcard Is the Wild card part of the URL (required)
     * @param xEmbarcaderoApplicationId  (optional)
     * @param xEmbarcaderoAppSecret  (optional)
     * @param xEmbarcaderoMasterSecret  (optional)
     * @throws Swagger.ApiException if fails to make API call
     */
    public void deleteResourceEndpointItem(Map<String, Object> params) {
        client.assertNotNull(params.get('mname'), 'mname');
        client.assertNotNull(params.get('rname'), 'rname');
        client.assertNotNull(params.get('wildcard'), 'wildcard');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        client.invoke(
            'DELETE', '/edgemodules/{mname}/{rname}/{wildcard}', '',
            query, form,
            new Map<String, Object>{
                'mname' => (String) params.get('mname'),
                'rname' => (String) params.get('rname'),
                'wildcard' => (String) params.get('wildcard')
            },
            new Map<String, Object>{
                'X-Embarcadero-Application-Id' => (String) params.get('xEmbarcaderoApplicationId'),
                'X-Embarcadero-App-Secret' => (String) params.get('xEmbarcaderoAppSecret'),
                'X-Embarcadero-Master-Secret' => (String) params.get('xEmbarcaderoMasterSecret')
            },
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String>(),
            null
        );
    }
    /**
     * Invoke Resource Get Method
     * Used to invoke the GET method of the resource from an existing EMS EdgeModule.
     * @param mname Is the EMS EdgeModule name (required)
     * @param rname Is the unique EMS EdgeModule Resource name (required)
     * @param xEmbarcaderoApplicationId  (optional)
     * @param xEmbarcaderoAppSecret  (optional)
     * @param xEmbarcaderoMasterSecret  (optional)
     * @throws Swagger.ApiException if fails to make API call
     */
    public void getResourceEndpoint(Map<String, Object> params) {
        client.assertNotNull(params.get('mname'), 'mname');
        client.assertNotNull(params.get('rname'), 'rname');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        client.invoke(
            'GET', '/edgemodules/{mname}/{rname}', '',
            query, form,
            new Map<String, Object>{
                'mname' => (String) params.get('mname'),
                'rname' => (String) params.get('rname')
            },
            new Map<String, Object>{
                'X-Embarcadero-Application-Id' => (String) params.get('xEmbarcaderoApplicationId'),
                'X-Embarcadero-App-Secret' => (String) params.get('xEmbarcaderoAppSecret'),
                'X-Embarcadero-Master-Secret' => (String) params.get('xEmbarcaderoMasterSecret')
            },
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String>(),
            null
        );
    }
    /**
     * Invoke Resource/* Get Method
     * Used to invoke the GET method of the resource from an existing EMS EdgeModule.
     * @param mname Is the EMS EdgeModule name (required)
     * @param rname Is the unique EMS EdgeModule Resource name (required)
     * @param wildcard Is the Wild card part of the URL (required)
     * @param xEmbarcaderoApplicationId  (optional)
     * @param xEmbarcaderoAppSecret  (optional)
     * @param xEmbarcaderoMasterSecret  (optional)
     * @throws Swagger.ApiException if fails to make API call
     */
    public void getResourceEndpointItem(Map<String, Object> params) {
        client.assertNotNull(params.get('mname'), 'mname');
        client.assertNotNull(params.get('rname'), 'rname');
        client.assertNotNull(params.get('wildcard'), 'wildcard');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        client.invoke(
            'GET', '/edgemodules/{mname}/{rname}/{wildcard}', '',
            query, form,
            new Map<String, Object>{
                'mname' => (String) params.get('mname'),
                'rname' => (String) params.get('rname'),
                'wildcard' => (String) params.get('wildcard')
            },
            new Map<String, Object>{
                'X-Embarcadero-Application-Id' => (String) params.get('xEmbarcaderoApplicationId'),
                'X-Embarcadero-App-Secret' => (String) params.get('xEmbarcaderoAppSecret'),
                'X-Embarcadero-Master-Secret' => (String) params.get('xEmbarcaderoMasterSecret')
            },
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String>(),
            null
        );
    }
    /**
     * Invoke Resource Patch Method
     * Used to invoke the PATCH method of the resource from an existing EMS EdgeModule.
     * @param mname Is the EMS EdgeModule name (required)
     * @param rname Is the unique EMS EdgeModule Resource name (required)
     * @param body Body Object (required)
     * @param xEmbarcaderoApplicationId  (optional)
     * @param xEmbarcaderoAppSecret  (optional)
     * @param xEmbarcaderoMasterSecret  (optional)
     * @throws Swagger.ApiException if fails to make API call
     */
    public void patchResourceEndpoint(Map<String, Object> params) {
        client.assertNotNull(params.get('mname'), 'mname');
        client.assertNotNull(params.get('rname'), 'rname');
        client.assertNotNull(params.get('body'), 'body');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        client.invoke(
            'PATCH', '/edgemodules/{mname}/{rname}',
            (Object) params.get('body'),
            query, form,
            new Map<String, Object>{
                'mname' => (String) params.get('mname'),
                'rname' => (String) params.get('rname')
            },
            new Map<String, Object>{
                'X-Embarcadero-Application-Id' => (String) params.get('xEmbarcaderoApplicationId'),
                'X-Embarcadero-App-Secret' => (String) params.get('xEmbarcaderoAppSecret'),
                'X-Embarcadero-Master-Secret' => (String) params.get('xEmbarcaderoMasterSecret')
            },
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String>(),
            null
        );
    }
    /**
     * Invoke Resource/* Patch Method
     * Used to invoke the PATCH method of the resource from an existing EMS EdgeModule.
     * @param mname Is the EMS EdgeModule name (required)
     * @param rname Is the unique EMS EdgeModule Resource name (required)
     * @param wildcard Is the Wild card part of the URL (required)
     * @param body Body Object (required)
     * @param xEmbarcaderoApplicationId  (optional)
     * @param xEmbarcaderoAppSecret  (optional)
     * @param xEmbarcaderoMasterSecret  (optional)
     * @throws Swagger.ApiException if fails to make API call
     */
    public void patchResourceEndpointItem(Map<String, Object> params) {
        client.assertNotNull(params.get('mname'), 'mname');
        client.assertNotNull(params.get('rname'), 'rname');
        client.assertNotNull(params.get('wildcard'), 'wildcard');
        client.assertNotNull(params.get('body'), 'body');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        client.invoke(
            'PATCH', '/edgemodules/{mname}/{rname}/{wildcard}',
            (Object) params.get('body'),
            query, form,
            new Map<String, Object>{
                'mname' => (String) params.get('mname'),
                'rname' => (String) params.get('rname'),
                'wildcard' => (String) params.get('wildcard')
            },
            new Map<String, Object>{
                'X-Embarcadero-Application-Id' => (String) params.get('xEmbarcaderoApplicationId'),
                'X-Embarcadero-App-Secret' => (String) params.get('xEmbarcaderoAppSecret'),
                'X-Embarcadero-Master-Secret' => (String) params.get('xEmbarcaderoMasterSecret')
            },
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String>(),
            null
        );
    }
    /**
     * Invoke Resource Post Method
     * Used to invoke the POST method of the resource from an existing EMS EdgeModule.
     * @param mname Is the EMS EdgeModule name (required)
     * @param rname Is the unique EMS EdgeModule Resource name (required)
     * @param body Body Object (required)
     * @param xEmbarcaderoApplicationId  (optional)
     * @param xEmbarcaderoAppSecret  (optional)
     * @param xEmbarcaderoMasterSecret  (optional)
     * @throws Swagger.ApiException if fails to make API call
     */
    public void postResourceEndpoint(Map<String, Object> params) {
        client.assertNotNull(params.get('mname'), 'mname');
        client.assertNotNull(params.get('rname'), 'rname');
        client.assertNotNull(params.get('body'), 'body');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        client.invoke(
            'POST', '/edgemodules/{mname}/{rname}',
            (Object) params.get('body'),
            query, form,
            new Map<String, Object>{
                'mname' => (String) params.get('mname'),
                'rname' => (String) params.get('rname')
            },
            new Map<String, Object>{
                'X-Embarcadero-Application-Id' => (String) params.get('xEmbarcaderoApplicationId'),
                'X-Embarcadero-App-Secret' => (String) params.get('xEmbarcaderoAppSecret'),
                'X-Embarcadero-Master-Secret' => (String) params.get('xEmbarcaderoMasterSecret')
            },
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String>(),
            null
        );
    }
    /**
     * Invoke Resource/* Post Method
     * Used to invoke the POST method of the resource from an existing EMS EdgeModule.
     * @param mname Is the EMS EdgeModule name (required)
     * @param rname Is the unique EMS EdgeModule Resource name (required)
     * @param wildcard Is the Wild card part of the URL (required)
     * @param body Body Object (required)
     * @param xEmbarcaderoApplicationId  (optional)
     * @param xEmbarcaderoAppSecret  (optional)
     * @param xEmbarcaderoMasterSecret  (optional)
     * @throws Swagger.ApiException if fails to make API call
     */
    public void postResourceEndpointItem(Map<String, Object> params) {
        client.assertNotNull(params.get('mname'), 'mname');
        client.assertNotNull(params.get('rname'), 'rname');
        client.assertNotNull(params.get('wildcard'), 'wildcard');
        client.assertNotNull(params.get('body'), 'body');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        client.invoke(
            'POST', '/edgemodules/{mname}/{rname}/{wildcard}',
            (Object) params.get('body'),
            query, form,
            new Map<String, Object>{
                'mname' => (String) params.get('mname'),
                'rname' => (String) params.get('rname'),
                'wildcard' => (String) params.get('wildcard')
            },
            new Map<String, Object>{
                'X-Embarcadero-Application-Id' => (String) params.get('xEmbarcaderoApplicationId'),
                'X-Embarcadero-App-Secret' => (String) params.get('xEmbarcaderoAppSecret'),
                'X-Embarcadero-Master-Secret' => (String) params.get('xEmbarcaderoMasterSecret')
            },
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String>(),
            null
        );
    }
    /**
     * Invoke Resource Put Method
     * Used to invoke the PUT method of the resource from an existing EMS EdgeModule.
     * @param mname Is the EMS EdgeModule name (required)
     * @param rname Is the unique EMS EdgeModule Resource name (required)
     * @param body Body Object (required)
     * @param xEmbarcaderoApplicationId  (optional)
     * @param xEmbarcaderoAppSecret  (optional)
     * @param xEmbarcaderoMasterSecret  (optional)
     * @throws Swagger.ApiException if fails to make API call
     */
    public void putResourceEndpoint(Map<String, Object> params) {
        client.assertNotNull(params.get('mname'), 'mname');
        client.assertNotNull(params.get('rname'), 'rname');
        client.assertNotNull(params.get('body'), 'body');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        client.invoke(
            'PUT', '/edgemodules/{mname}/{rname}',
            (Object) params.get('body'),
            query, form,
            new Map<String, Object>{
                'mname' => (String) params.get('mname'),
                'rname' => (String) params.get('rname')
            },
            new Map<String, Object>{
                'X-Embarcadero-Application-Id' => (String) params.get('xEmbarcaderoApplicationId'),
                'X-Embarcadero-App-Secret' => (String) params.get('xEmbarcaderoAppSecret'),
                'X-Embarcadero-Master-Secret' => (String) params.get('xEmbarcaderoMasterSecret')
            },
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String>(),
            null
        );
    }
    /**
     * Invoke Resource/* Put Method
     * Used to invoke the PUT method of the resource from an existing EMS EdgeModule.
     * @param mname Is the EMS EdgeModule name (required)
     * @param rname Is the unique EMS EdgeModule Resource name (required)
     * @param wildcard Is the Wild card part of the URL (required)
     * @param body Body Object (required)
     * @param xEmbarcaderoApplicationId  (optional)
     * @param xEmbarcaderoAppSecret  (optional)
     * @param xEmbarcaderoMasterSecret  (optional)
     * @throws Swagger.ApiException if fails to make API call
     */
    public void putResourceEndpointItem(Map<String, Object> params) {
        client.assertNotNull(params.get('mname'), 'mname');
        client.assertNotNull(params.get('rname'), 'rname');
        client.assertNotNull(params.get('wildcard'), 'wildcard');
        client.assertNotNull(params.get('body'), 'body');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        client.invoke(
            'PUT', '/edgemodules/{mname}/{rname}/{wildcard}',
            (Object) params.get('body'),
            query, form,
            new Map<String, Object>{
                'mname' => (String) params.get('mname'),
                'rname' => (String) params.get('rname'),
                'wildcard' => (String) params.get('wildcard')
            },
            new Map<String, Object>{
                'X-Embarcadero-Application-Id' => (String) params.get('xEmbarcaderoApplicationId'),
                'X-Embarcadero-App-Secret' => (String) params.get('xEmbarcaderoAppSecret'),
                'X-Embarcadero-Master-Secret' => (String) params.get('xEmbarcaderoMasterSecret')
            },
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String>(),
            null
        );
    }
}
