/*
 * EMS API Documentation
 * Enterprise Mobility Services API\r\n\r\n  [Learn about EMS](https://www.embarcadero.com/products/rad-studio/enterprise-mobility-services)\r\n\r\n  EMS (Enterprise Mobility Services) offers a Mobile Enterprise Application Platform (MEAP)\r\n\r\n  TurnKey Middleware for Interconnected Distributed Apps
 *
 * OpenAPI spec version: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

public class SwagInstallationsApi {
    SwagClient client;

    public SwagInstallationsApi(SwagClient client) {
        this.client = client;
    }

    public SwagInstallationsApi() {
        this.client = new SwagClient();
    }

    public SwagClient getClient() {
        return this.client;
    }

    /**
     * Add Installation
     *  |\r\n    Used to add a new &#x60;Installation&#x60; object to the EMS database.
     * @param body Object to sign up a new EMS User in the EMS Server (required)
     * @param xEmbarcaderoApplicationId  (optional)
     * @param xEmbarcaderoAppSecret  (optional)
     * @param xEmbarcaderoMasterSecret  (optional)
     * @return SwagInstallationAddedObject
     * @throws Swagger.ApiException if fails to make API call
     */
    public SwagInstallationAddedObject addInstallation(Map<String, Object> params) {
        client.assertNotNull(params.get('body'), 'body');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        return (SwagInstallationAddedObject) client.invoke(
            'POST', '/installations',
            (SwagInstallationAddObject) params.get('body'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>{
                'X-Embarcadero-Application-Id' => (String) params.get('xEmbarcaderoApplicationId'),
                'X-Embarcadero-App-Secret' => (String) params.get('xEmbarcaderoAppSecret'),
                'X-Embarcadero-Master-Secret' => (String) params.get('xEmbarcaderoMasterSecret')
            },
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String>(),
            SwagInstallationAddedObject.class
        );
    }
    /**
     * Delete Installation
     *  |\r\n    Used to delete an &#x60;Installation&#x60;. **id** is the unique EMS Installation identifier (IID) in the EMS database.
     * @param id A Installation ID (required)
     * @param xEmbarcaderoApplicationId  (optional)
     * @param xEmbarcaderoAppSecret  (optional)
     * @param xEmbarcaderoMasterSecret  (optional)
     * @throws Swagger.ApiException if fails to make API call
     */
    public void deleteInstallation(Map<String, Object> params) {
        client.assertNotNull(params.get('id'), 'id');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        client.invoke(
            'DELETE', '/installations/{id}', '',
            query, form,
            new Map<String, Object>{
                'id' => (String) params.get('id')
            },
            new Map<String, Object>{
                'X-Embarcadero-Application-Id' => (String) params.get('xEmbarcaderoApplicationId'),
                'X-Embarcadero-App-Secret' => (String) params.get('xEmbarcaderoAppSecret'),
                'X-Embarcadero-Master-Secret' => (String) params.get('xEmbarcaderoMasterSecret')
            },
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String>(),
            null
        );
    }
    /**
     * Get Installation Channels
     *  |\r\n     Used to retrieve the available channels to which the device has subscribed. **id** is the unique EMS Installation identifier (InstallationID) in the EMS database.
     * @param xEmbarcaderoApplicationId  (optional)
     * @param xEmbarcaderoAppSecret  (optional)
     * @param xEmbarcaderoMasterSecret  (optional)
     * @return List<String>
     * @throws Swagger.ApiException if fails to make API call
     */
    public List<String> getChannels(Map<String, Object> params) {
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        return (List<String>) client.invoke(
            'GET', '/installations/channels', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>{
                'X-Embarcadero-Application-Id' => (String) params.get('xEmbarcaderoApplicationId'),
                'X-Embarcadero-App-Secret' => (String) params.get('xEmbarcaderoAppSecret'),
                'X-Embarcadero-Master-Secret' => (String) params.get('xEmbarcaderoMasterSecret')
            },
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String>(),
            List<String>.class
        );
    }
    /**
     * Get Installation
     *  |\r\n    Used to retrieve all data from a specific &#x60;Installation&#x60; (registered device). **id** is the unique EMS Installation identifier (InstallationID) in the EMS database.
     * @param id A Installation ID (required)
     * @param xEmbarcaderoApplicationId  (optional)
     * @param xEmbarcaderoAppSecret  (optional)
     * @param xEmbarcaderoMasterSecret  (optional)
     * @return SwagInstallationObject
     * @throws Swagger.ApiException if fails to make API call
     */
    public SwagInstallationObject getInstallation(Map<String, Object> params) {
        client.assertNotNull(params.get('id'), 'id');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        return (SwagInstallationObject) client.invoke(
            'GET', '/installations/{id}', '',
            query, form,
            new Map<String, Object>{
                'id' => (String) params.get('id')
            },
            new Map<String, Object>{
                'X-Embarcadero-Application-Id' => (String) params.get('xEmbarcaderoApplicationId'),
                'X-Embarcadero-App-Secret' => (String) params.get('xEmbarcaderoAppSecret'),
                'X-Embarcadero-Master-Secret' => (String) params.get('xEmbarcaderoMasterSecret')
            },
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String>(),
            SwagInstallationObject.class
        );
    }
    /**
     * Get Fields
     *  |\r\n    Used to retrieve all the &#x60;field names&#x60; of the EMS Installation (including the custom fields).
     * @param xEmbarcaderoApplicationId  (optional)
     * @param xEmbarcaderoAppSecret  (optional)
     * @param xEmbarcaderoMasterSecret  (optional)
     * @return List<SwagFieldInstallationObject>
     * @throws Swagger.ApiException if fails to make API call
     */
    public List<SwagFieldInstallationObject> getInstallationFields(Map<String, Object> params) {
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        return (List<SwagFieldInstallationObject>) client.invoke(
            'GET', '/installations/fields', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>{
                'X-Embarcadero-Application-Id' => (String) params.get('xEmbarcaderoApplicationId'),
                'X-Embarcadero-App-Secret' => (String) params.get('xEmbarcaderoAppSecret'),
                'X-Embarcadero-Master-Secret' => (String) params.get('xEmbarcaderoMasterSecret')
            },
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String>(),
            List<SwagFieldInstallationObject>.class
        );
    }
    /**
     * Get Installations
     *  |\r\n    Used to retrieve all data from &#x60;Installation&#x60;.\r\n    Optional query param of **skip, limit, order, where** determines \r\n    size of returned array, filtered and order by.
     * @param xEmbarcaderoApplicationId  (optional)
     * @param xEmbarcaderoAppSecret  (optional)
     * @param xEmbarcaderoMasterSecret  (optional)
     * @param skip users skipped (optional)
     * @param r_limit maximum number of results to return (optional)
     * @param order order ascending or descending (asc, desc) (optional)
     * @param r_where filter operators (lt, lte, gt, gte, eq, neq, like, nlike) (optional)
     * @return List<SwagInstallationObject>
     * @throws Swagger.ApiException if fails to make API call
     */
    public List<SwagInstallationObject> getInstallations(Map<String, Object> params) {
        List<Swagger.Param> query = new List<Swagger.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('skip', (Double) params.get('skip')));
        query.addAll(client.makeParam('limit', (Double) params.get('r_limit')));
        query.addAll(client.makeParam('order', (Double) params.get('order')));
        query.addAll(client.makeParam('where', (String) params.get('r_where')));

        List<Swagger.Param> form = new List<Swagger.Param>();

        return (List<SwagInstallationObject>) client.invoke(
            'GET', '/installations', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>{
                'X-Embarcadero-Application-Id' => (String) params.get('xEmbarcaderoApplicationId'),
                'X-Embarcadero-App-Secret' => (String) params.get('xEmbarcaderoAppSecret'),
                'X-Embarcadero-Master-Secret' => (String) params.get('xEmbarcaderoMasterSecret')
            },
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String>(),
            List<SwagInstallationObject>.class
        );
    }
    /**
     * Update Installation
     *  |\r\n    Used to update an &#x60;Installation&#x60;. **id** is the unique EMS Installation identifier (IID) in the EMS database.
     * @param id A Installation ID (required)
     * @param body Installation fields to update (required)
     * @param xEmbarcaderoApplicationId  (optional)
     * @param xEmbarcaderoAppSecret  (optional)
     * @param xEmbarcaderoMasterSecret  (optional)
     * @return SwagUpdatedInstallationObject
     * @throws Swagger.ApiException if fails to make API call
     */
    public SwagUpdatedInstallationObject updateInstallation(Map<String, Object> params) {
        client.assertNotNull(params.get('id'), 'id');
        client.assertNotNull(params.get('body'), 'body');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        return (SwagUpdatedInstallationObject) client.invoke(
            'PUT', '/installations/{id}',
            (SwagUpdateInstallationObject) params.get('body'),
            query, form,
            new Map<String, Object>{
                'id' => (String) params.get('id')
            },
            new Map<String, Object>{
                'X-Embarcadero-Application-Id' => (String) params.get('xEmbarcaderoApplicationId'),
                'X-Embarcadero-App-Secret' => (String) params.get('xEmbarcaderoAppSecret'),
                'X-Embarcadero-Master-Secret' => (String) params.get('xEmbarcaderoMasterSecret')
            },
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String>(),
            SwagUpdatedInstallationObject.class
        );
    }
}
