--  EMS API Documentation
--  Enterprise Mobility Services API      [Learn about EMS](https://www.embarcadero.com/products/rad_studio/enterprise_mobility_services)      EMS (Enterprise Mobility Services) offers a Mobile Enterprise Application Platform (MEAP)      TurnKey Middleware for Interconnected Distributed Apps
--
--  OpenAPI spec version: 0.0.0
--  
--
--  NOTE: This package is auto generated by the swagger code generator 2.4.5.
--  https://github.com/swagger-api/swagger-codegen.git
--  Do not edit the class manually.
with Swagger.Streams;
package body .Clients is

   --  Get API EndPoints
   --  |
   --      Used to retrieve all the API EndPoints.
   procedure A_P_I
      (Client : in out Client_Type;
       X_Embarcadero_Application_Id : in Swagger.Nullable_UString;
       X_Embarcadero_App_Secret : in Swagger.Nullable_UString;
       X_Embarcadero_Master_Secret : in Swagger.Nullable_UString) is
      URI   : Swagger.Clients.URI_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Set_Path ("/api");
      Client.Call (Swagger.Clients.GET, URI);
   end A_P_I;

   --  Get JSON
   --  Get API in JSON format
   procedure Get_A_P_I_J_S_O_N_Format
      (Client : in out Client_Type;
       X_Embarcadero_Application_Id : in Swagger.Nullable_UString;
       X_Embarcadero_App_Secret : in Swagger.Nullable_UString;
       X_Embarcadero_Master_Secret : in Swagger.Nullable_UString) is
      URI   : Swagger.Clients.URI_Type;
   begin


      URI.Set_Path ("/api/apidoc.json");
      Client.Call (Swagger.Clients.GET, URI);
   end Get_A_P_I_J_S_O_N_Format;

   --  Get YAML
   --  Get API in YAML format
   procedure Get_A_P_I_Y_A_M_L_Format
      (Client : in out Client_Type;
       X_Embarcadero_Application_Id : in Swagger.Nullable_UString;
       X_Embarcadero_App_Secret : in Swagger.Nullable_UString;
       X_Embarcadero_Master_Secret : in Swagger.Nullable_UString) is
      URI   : Swagger.Clients.URI_Type;
   begin


      URI.Set_Path ("/api/apidoc.yaml");
      Client.Call (Swagger.Clients.GET, URI);
   end Get_A_P_I_Y_A_M_L_Format;

   --  Get API EndPoint
   --  |
   --      Used to retrieve an EndPoint for the API EndPoints.
   procedure Get_A_P_I_Y_A_M_L_Format_End_Point
      (Client : in out Client_Type;
       Item : in Swagger.UString;
       X_Embarcadero_Application_Id : in Swagger.Nullable_UString;
       X_Embarcadero_App_Secret : in Swagger.Nullable_UString;
       X_Embarcadero_Master_Secret : in Swagger.Nullable_UString) is
      URI   : Swagger.Clients.URI_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Set_Path ("/api/{item}/apidoc.yaml");
      URI.Set_Path_Param ("item", Item);
      Client.Call (Swagger.Clients.GET, URI);
   end Get_A_P_I_Y_A_M_L_Format_End_Point;

   --  Get Module
   --  |
   --      Used to retrieve all data from `EdgeModule`.
   --      Optional query param of **skip, limit, order, where** determines 
   --      size of returned array, filtered and order by.
   procedure Get_Module
      (Client : in out Client_Type;
       Mname : in Swagger.UString;
       X_Embarcadero_Application_Id : in Swagger.Nullable_UString;
       X_Embarcadero_App_Secret : in Swagger.Nullable_UString;
       X_Embarcadero_Master_Secret : in Swagger.Nullable_UString;
       Result : out .Models.EdgeModuleObject_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Set_Path ("/edgemodules/{mname}");
      URI.Set_Path_Param ("mname", Mname);
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Get_Module;

   --  Get EdgeModule Resource
   --  |
   --      Used to retrieve all data from a resource of an EdgeModule. **mname** is the unique EMS EdgeModule identifier in the EMS database. **resourcename** is the name of the resource.
   procedure Get_Module_Resource
      (Client : in out Client_Type;
       Mname : in Swagger.UString;
       Name : in Swagger.UString;
       X_Embarcadero_Application_Id : in Swagger.Nullable_UString;
       X_Embarcadero_App_Secret : in Swagger.Nullable_UString;
       X_Embarcadero_Master_Secret : in Swagger.Nullable_UString;
       Result : out .Models.EdgeModuleResourceObject_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Set_Path ("/edgemodules/{mname}/resources/{name}");
      URI.Set_Path_Param ("mname", Mname);
      URI.Set_Path_Param ("name", Name);
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Get_Module_Resource;

   --  Get EdgeModule Resources
   --  |
   --      Used to retrieve all data from the resources of an EdgeModule.
   procedure Get_Module_Resources
      (Client : in out Client_Type;
       Mname : in Swagger.UString;
       X_Embarcadero_Application_Id : in Swagger.Nullable_UString;
       X_Embarcadero_App_Secret : in Swagger.Nullable_UString;
       X_Embarcadero_Master_Secret : in Swagger.Nullable_UString;
       Result : out .Models.EdgeModuleResourceObject_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Set_Path ("/edgemodules/{mname}/resources");
      URI.Set_Path_Param ("mname", Mname);
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Get_Module_Resources;

   --  Get Module
   --  |
   --      Used to retrieve all data from `EdgeModule`.
   --      Optional query param of **skip, limit, order, where** determines 
   --      size of returned array, filtered and order by.
   procedure Get_Modules
      (Client : in out Client_Type;
       X_Embarcadero_Application_Id : in Swagger.Nullable_UString;
       X_Embarcadero_App_Secret : in Swagger.Nullable_UString;
       X_Embarcadero_Master_Secret : in Swagger.Nullable_UString;
       Result : out .Models.EdgeModuleObject_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Set_Path ("/edgemodules");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Get_Modules;

   --  Get Fields
   --  |
   --      Used to retrieve all the `field names` of the EMS EdgeModule (including the custom fields).
   procedure Get_Modules_Fields
      (Client : in out Client_Type;
       X_Embarcadero_Application_Id : in Swagger.Nullable_UString;
       X_Embarcadero_App_Secret : in Swagger.Nullable_UString;
       X_Embarcadero_Master_Secret : in Swagger.Nullable_UString;
       Result : out .Models.FieldsEdgeModuleObject_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Set_Path ("/edgemodules/fields");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Get_Modules_Fields;

   --  Get EdgeModules Resources
   --  |
   --      Used to retrieve all data from the resources of all EdgeModules.
   procedure Get_Resources
      (Client : in out Client_Type;
       X_Embarcadero_Application_Id : in Swagger.Nullable_UString;
       X_Embarcadero_App_Secret : in Swagger.Nullable_UString;
       X_Embarcadero_Master_Secret : in Swagger.Nullable_UString;
       Result : out .Models.EdgeModuleResourceObject_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Set_Path ("/edgemodules/resources");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Get_Resources;

   --  Get Resource Fields
   --  |
   --      Used to retrieve the `field names` of all the resources of the EMS EdgeModule (including the custom fields).
   procedure Get_Resources_Fields
      (Client : in out Client_Type;
       X_Embarcadero_Application_Id : in Swagger.Nullable_UString;
       X_Embarcadero_App_Secret : in Swagger.Nullable_UString;
       X_Embarcadero_Master_Secret : in Swagger.Nullable_UString;
       Result : out .Models.FieldsEdgeModuleObject_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Set_Path ("/edgemodules/resources/fields");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Get_Resources_Fields;

   --  Add Module
   --  |
   --      Used to add a new `EdgeModule` object to the EMS database.
   procedure Register_Module
      (Client : in out Client_Type;
       P_Body : in .Models.EdgeModuleAddObject_Type;
       X_Embarcadero_Application_Id : in Swagger.Nullable_UString;
       X_Embarcadero_App_Secret : in Swagger.Nullable_UString;
       X_Embarcadero_Master_Secret : in Swagger.Nullable_UString;
       Result : out .Models.EdgeModuleAddedObject_Type) is
      URI   : Swagger.Clients.URI_Type;
      Req   : Swagger.Clients.Request_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));
      Client.Initialize (Req, (1 => Swagger.Clients.APPLICATION_JSON));
      .Models.Serialize (Req.Stream, "", P_Body);

      URI.Set_Path ("/edgemodules");
      Client.Call (Swagger.Clients.POST, URI, Req, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Register_Module;

   --  Add Module Resource
   --  |
   --      Used to register a new resource from an EMS EdgeModule. **mname** is the unique EMS EdgeModule identifier in the EMS database.
   procedure Register_Module_Resource
      (Client : in out Client_Type;
       Mname : in Swagger.UString;
       P_Body : in .Models.EdgeModuleResourceAddObject_Type;
       X_Embarcadero_Application_Id : in Swagger.Nullable_UString;
       X_Embarcadero_App_Secret : in Swagger.Nullable_UString;
       X_Embarcadero_Master_Secret : in Swagger.Nullable_UString;
       Result : out .Models.EdgeModuleResourceAddedObject_Type) is
      URI   : Swagger.Clients.URI_Type;
      Req   : Swagger.Clients.Request_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));
      Client.Initialize (Req, (1 => Swagger.Clients.APPLICATION_JSON));
      .Models.Serialize (Req.Stream, "", P_Body);

      URI.Set_Path ("/edgemodules/{mname}/resources");
      URI.Set_Path_Param ("mname", Mname);
      Client.Call (Swagger.Clients.POST, URI, Req, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Register_Module_Resource;

   --  Delete Module
   --  |
   --      Used to delete an `EdgeModule Resource`. **mname** is the unique EMS EdgeModule identifier (MID) in the EMS database. **resourcename** is the name of the resource.
   procedure Unregister_Module
      (Client : in out Client_Type;
       Mname : in Swagger.UString;
       X_Embarcadero_Application_Id : in Swagger.Nullable_UString;
       X_Embarcadero_App_Secret : in Swagger.Nullable_UString;
       X_Embarcadero_Master_Secret : in Swagger.Nullable_UString) is
      URI   : Swagger.Clients.URI_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Set_Path ("/edgemodules/{mname}");
      URI.Set_Path_Param ("mname", Mname);
      Client.Call (Swagger.Clients.DELETE, URI);
   end Unregister_Module;

   --  Delete Module Resource
   --  |
   --      Used to delete an `EdgeModule Resource`. **mname** is the unique EMS EdgeModule identifier (MID) in the EMS database. **resourcename** is the name of the resource.
   procedure Unregister_Module_Resource
      (Client : in out Client_Type;
       Mname : in Swagger.UString;
       Name : in Swagger.UString;
       X_Embarcadero_Application_Id : in Swagger.Nullable_UString;
       X_Embarcadero_App_Secret : in Swagger.Nullable_UString;
       X_Embarcadero_Master_Secret : in Swagger.Nullable_UString) is
      URI   : Swagger.Clients.URI_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Set_Path ("/edgemodules/{mname}/resources/{name}");
      URI.Set_Path_Param ("mname", Mname);
      URI.Set_Path_Param ("name", Name);
      Client.Call (Swagger.Clients.DELETE, URI);
   end Unregister_Module_Resource;

   --  Update Module
   --  |
   --      Used to update an `EdgeModule`. **mname** is the unique EMS EdgeModule identifier (MID) in the EMS database.
   procedure Update_Module
      (Client : in out Client_Type;
       Mname : in Swagger.UString;
       P_Body : in .Models.EdgeModuleUpdateObject_Type;
       X_Embarcadero_Application_Id : in Swagger.Nullable_UString;
       X_Embarcadero_App_Secret : in Swagger.Nullable_UString;
       X_Embarcadero_Master_Secret : in Swagger.Nullable_UString;
       Result : out .Models.EdgeModuleUpdatedObject_Type) is
      URI   : Swagger.Clients.URI_Type;
      Req   : Swagger.Clients.Request_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));
      Client.Initialize (Req, (1 => Swagger.Clients.APPLICATION_JSON));
      .Models.Serialize (Req.Stream, "", P_Body);

      URI.Set_Path ("/edgemodules/{mname}");
      URI.Set_Path_Param ("mname", Mname);
      Client.Call (Swagger.Clients.PUT, URI, Req, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Update_Module;

   --  Update Module Resource
   --  |
   --      Used to update an `EdgeModule`. **mname** is the unique EMS EdgeModule identifier (MID) in the EMS database.
   procedure Update_Module_Resource
      (Client : in out Client_Type;
       Mname : in Swagger.UString;
       Name : in Swagger.UString;
       P_Body : in .Models.EdgeModuleResourceUpdateObject_Type;
       X_Embarcadero_Application_Id : in Swagger.Nullable_UString;
       X_Embarcadero_App_Secret : in Swagger.Nullable_UString;
       X_Embarcadero_Master_Secret : in Swagger.Nullable_UString;
       Result : out .Models.EdgeModuleResourceUpdatedObject_Type) is
      URI   : Swagger.Clients.URI_Type;
      Req   : Swagger.Clients.Request_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));
      Client.Initialize (Req, (1 => Swagger.Clients.APPLICATION_JSON));
      .Models.Serialize (Req.Stream, "", P_Body);

      URI.Set_Path ("/edgemodules/{mname}/resources/{name}");
      URI.Set_Path_Param ("mname", Mname);
      URI.Set_Path_Param ("name", Name);
      Client.Call (Swagger.Clients.PUT, URI, Req, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Update_Module_Resource;

   --  Invoke Resource Delete Method
   --  Used to invoke the DELETE method of the resource from an existing EMS EdgeModule.
   procedure Delete_Resource_Endpoint
      (Client : in out Client_Type;
       Mname : in Swagger.UString;
       Rname : in Swagger.UString;
       X_Embarcadero_Application_Id : in Swagger.Nullable_UString;
       X_Embarcadero_App_Secret : in Swagger.Nullable_UString;
       X_Embarcadero_Master_Secret : in Swagger.Nullable_UString) is
      URI   : Swagger.Clients.URI_Type;
   begin


      URI.Set_Path ("/edgemodules/{mname}/{rname}");
      URI.Set_Path_Param ("mname", Mname);
      URI.Set_Path_Param ("rname", Rname);
      Client.Call (Swagger.Clients.DELETE, URI);
   end Delete_Resource_Endpoint;

   --  Invoke Resource/_* Delete Method
   --  Used to invoke the DELETE method of the resource from an existing EMS EdgeModule.
   procedure Delete_Resource_Endpoint_Item
      (Client : in out Client_Type;
       Mname : in Swagger.UString;
       Rname : in Swagger.UString;
       Wildcard : in Swagger.UString;
       X_Embarcadero_Application_Id : in Swagger.Nullable_UString;
       X_Embarcadero_App_Secret : in Swagger.Nullable_UString;
       X_Embarcadero_Master_Secret : in Swagger.Nullable_UString) is
      URI   : Swagger.Clients.URI_Type;
   begin


      URI.Set_Path ("/edgemodules/{mname}/{rname}/{wildcard}");
      URI.Set_Path_Param ("mname", Mname);
      URI.Set_Path_Param ("rname", Rname);
      URI.Set_Path_Param ("wildcard", Wildcard);
      Client.Call (Swagger.Clients.DELETE, URI);
   end Delete_Resource_Endpoint_Item;

   --  Invoke Resource Get Method
   --  Used to invoke the GET method of the resource from an existing EMS EdgeModule.
   procedure Get_Resource_Endpoint
      (Client : in out Client_Type;
       Mname : in Swagger.UString;
       Rname : in Swagger.UString;
       X_Embarcadero_Application_Id : in Swagger.Nullable_UString;
       X_Embarcadero_App_Secret : in Swagger.Nullable_UString;
       X_Embarcadero_Master_Secret : in Swagger.Nullable_UString) is
      URI   : Swagger.Clients.URI_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Set_Path ("/edgemodules/{mname}/{rname}");
      URI.Set_Path_Param ("mname", Mname);
      URI.Set_Path_Param ("rname", Rname);
      Client.Call (Swagger.Clients.GET, URI);
   end Get_Resource_Endpoint;

   --  Invoke Resource/_* Get Method
   --  Used to invoke the GET method of the resource from an existing EMS EdgeModule.
   procedure Get_Resource_Endpoint_Item
      (Client : in out Client_Type;
       Mname : in Swagger.UString;
       Rname : in Swagger.UString;
       Wildcard : in Swagger.UString;
       X_Embarcadero_Application_Id : in Swagger.Nullable_UString;
       X_Embarcadero_App_Secret : in Swagger.Nullable_UString;
       X_Embarcadero_Master_Secret : in Swagger.Nullable_UString) is
      URI   : Swagger.Clients.URI_Type;
   begin


      URI.Set_Path ("/edgemodules/{mname}/{rname}/{wildcard}");
      URI.Set_Path_Param ("mname", Mname);
      URI.Set_Path_Param ("rname", Rname);
      URI.Set_Path_Param ("wildcard", Wildcard);
      Client.Call (Swagger.Clients.GET, URI);
   end Get_Resource_Endpoint_Item;

   --  Invoke Resource Patch Method
   --  Used to invoke the PATCH method of the resource from an existing EMS EdgeModule.
   procedure Patch_Resource_Endpoint
      (Client : in out Client_Type;
       Mname : in Swagger.UString;
       Rname : in Swagger.UString;
       P_Body : in .Models.Swagger.Object;
       X_Embarcadero_Application_Id : in Swagger.Nullable_UString;
       X_Embarcadero_App_Secret : in Swagger.Nullable_UString;
       X_Embarcadero_Master_Secret : in Swagger.Nullable_UString) is
      URI   : Swagger.Clients.URI_Type;
      Req   : Swagger.Clients.Request_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));
      Client.Initialize (Req, (1 => Swagger.Clients.APPLICATION_JSON));
      .Models.Serialize (Req.Stream, "", P_Body);

      URI.Set_Path ("/edgemodules/{mname}/{rname}");
      URI.Set_Path_Param ("mname", Mname);
      URI.Set_Path_Param ("rname", Rname);
      Client.Call (Swagger.Clients.PATCH, URI, Req);
   end Patch_Resource_Endpoint;

   --  Invoke Resource/_* Patch Method
   --  Used to invoke the PATCH method of the resource from an existing EMS EdgeModule.
   procedure Patch_Resource_Endpoint_Item
      (Client : in out Client_Type;
       Mname : in Swagger.UString;
       Rname : in Swagger.UString;
       Wildcard : in Swagger.UString;
       P_Body : in .Models.Swagger.Object;
       X_Embarcadero_Application_Id : in Swagger.Nullable_UString;
       X_Embarcadero_App_Secret : in Swagger.Nullable_UString;
       X_Embarcadero_Master_Secret : in Swagger.Nullable_UString) is
      URI   : Swagger.Clients.URI_Type;
      Req   : Swagger.Clients.Request_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));
      Client.Initialize (Req, (1 => Swagger.Clients.APPLICATION_JSON));
      .Models.Serialize (Req.Stream, "", P_Body);

      URI.Set_Path ("/edgemodules/{mname}/{rname}/{wildcard}");
      URI.Set_Path_Param ("mname", Mname);
      URI.Set_Path_Param ("rname", Rname);
      URI.Set_Path_Param ("wildcard", Wildcard);
      Client.Call (Swagger.Clients.PATCH, URI, Req);
   end Patch_Resource_Endpoint_Item;

   --  Invoke Resource Post Method
   --  Used to invoke the POST method of the resource from an existing EMS EdgeModule.
   procedure Post_Resource_Endpoint
      (Client : in out Client_Type;
       Mname : in Swagger.UString;
       Rname : in Swagger.UString;
       P_Body : in .Models.Swagger.Object;
       X_Embarcadero_Application_Id : in Swagger.Nullable_UString;
       X_Embarcadero_App_Secret : in Swagger.Nullable_UString;
       X_Embarcadero_Master_Secret : in Swagger.Nullable_UString) is
      URI   : Swagger.Clients.URI_Type;
      Req   : Swagger.Clients.Request_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));
      Client.Initialize (Req, (1 => Swagger.Clients.APPLICATION_JSON));
      .Models.Serialize (Req.Stream, "", P_Body);

      URI.Set_Path ("/edgemodules/{mname}/{rname}");
      URI.Set_Path_Param ("mname", Mname);
      URI.Set_Path_Param ("rname", Rname);
      Client.Call (Swagger.Clients.POST, URI, Req);
   end Post_Resource_Endpoint;

   --  Invoke Resource/_* Post Method
   --  Used to invoke the POST method of the resource from an existing EMS EdgeModule.
   procedure Post_Resource_Endpoint_Item
      (Client : in out Client_Type;
       Mname : in Swagger.UString;
       Rname : in Swagger.UString;
       Wildcard : in Swagger.UString;
       P_Body : in .Models.Swagger.Object;
       X_Embarcadero_Application_Id : in Swagger.Nullable_UString;
       X_Embarcadero_App_Secret : in Swagger.Nullable_UString;
       X_Embarcadero_Master_Secret : in Swagger.Nullable_UString) is
      URI   : Swagger.Clients.URI_Type;
      Req   : Swagger.Clients.Request_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));
      Client.Initialize (Req, (1 => Swagger.Clients.APPLICATION_JSON));
      .Models.Serialize (Req.Stream, "", P_Body);

      URI.Set_Path ("/edgemodules/{mname}/{rname}/{wildcard}");
      URI.Set_Path_Param ("mname", Mname);
      URI.Set_Path_Param ("rname", Rname);
      URI.Set_Path_Param ("wildcard", Wildcard);
      Client.Call (Swagger.Clients.POST, URI, Req);
   end Post_Resource_Endpoint_Item;

   --  Invoke Resource Put Method
   --  Used to invoke the PUT method of the resource from an existing EMS EdgeModule.
   procedure Put_Resource_Endpoint
      (Client : in out Client_Type;
       Mname : in Swagger.UString;
       Rname : in Swagger.UString;
       P_Body : in .Models.Swagger.Object;
       X_Embarcadero_Application_Id : in Swagger.Nullable_UString;
       X_Embarcadero_App_Secret : in Swagger.Nullable_UString;
       X_Embarcadero_Master_Secret : in Swagger.Nullable_UString) is
      URI   : Swagger.Clients.URI_Type;
      Req   : Swagger.Clients.Request_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));
      Client.Initialize (Req, (1 => Swagger.Clients.APPLICATION_JSON));
      .Models.Serialize (Req.Stream, "", P_Body);

      URI.Set_Path ("/edgemodules/{mname}/{rname}");
      URI.Set_Path_Param ("mname", Mname);
      URI.Set_Path_Param ("rname", Rname);
      Client.Call (Swagger.Clients.PUT, URI, Req);
   end Put_Resource_Endpoint;

   --  Invoke Resource/_* Put Method
   --  Used to invoke the PUT method of the resource from an existing EMS EdgeModule.
   procedure Put_Resource_Endpoint_Item
      (Client : in out Client_Type;
       Mname : in Swagger.UString;
       Rname : in Swagger.UString;
       Wildcard : in Swagger.UString;
       P_Body : in .Models.Swagger.Object;
       X_Embarcadero_Application_Id : in Swagger.Nullable_UString;
       X_Embarcadero_App_Secret : in Swagger.Nullable_UString;
       X_Embarcadero_Master_Secret : in Swagger.Nullable_UString) is
      URI   : Swagger.Clients.URI_Type;
      Req   : Swagger.Clients.Request_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));
      Client.Initialize (Req, (1 => Swagger.Clients.APPLICATION_JSON));
      .Models.Serialize (Req.Stream, "", P_Body);

      URI.Set_Path ("/edgemodules/{mname}/{rname}/{wildcard}");
      URI.Set_Path_Param ("mname", Mname);
      URI.Set_Path_Param ("rname", Rname);
      URI.Set_Path_Param ("wildcard", Wildcard);
      Client.Call (Swagger.Clients.PUT, URI, Req);
   end Put_Resource_Endpoint_Item;

   --  Add Group
   --  |
   --      Used to add a new `Group` object to the EMS database.
   procedure Add_Group
      (Client : in out Client_Type;
       P_Body : in .Models.GroupAddObject_Type;
       X_Embarcadero_Application_Id : in Swagger.Nullable_UString;
       X_Embarcadero_App_Secret : in Swagger.Nullable_UString;
       X_Embarcadero_Master_Secret : in Swagger.Nullable_UString) is
      URI   : Swagger.Clients.URI_Type;
      Req   : Swagger.Clients.Request_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));
      Client.Initialize (Req, (1 => Swagger.Clients.APPLICATION_JSON));
      .Models.Serialize (Req.Stream, "", P_Body);

      URI.Set_Path ("/groups");
      Client.Call (Swagger.Clients.POST, URI, Req);
   end Add_Group;

   --  Delete Group
   --  |
   --      Used to delete a `Group`. **item** is the unique EMS Group name in the EMS database.
   procedure Delete_Group
      (Client : in out Client_Type;
       Item : in Swagger.UString;
       X_Embarcadero_Application_Id : in Swagger.Nullable_UString;
       X_Embarcadero_App_Secret : in Swagger.Nullable_UString;
       X_Embarcadero_Master_Secret : in Swagger.Nullable_UString) is
      URI   : Swagger.Clients.URI_Type;
   begin


      URI.Set_Path ("/groups/{item}");
      URI.Set_Path_Param ("item", Item);
      Client.Call (Swagger.Clients.DELETE, URI);
   end Delete_Group;

   --  Get Group
   --  |
   --      Used to retrieve all data from a `Group`. **item** is the unique EMS Group name in the EMS database.
   procedure Get_Group
      (Client : in out Client_Type;
       Item : in Swagger.UString;
       X_Embarcadero_Application_Id : in Swagger.Nullable_UString;
       X_Embarcadero_App_Secret : in Swagger.Nullable_UString;
       X_Embarcadero_Master_Secret : in Swagger.Nullable_UString;
       Result : out .Models.GroupObject_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Set_Path ("/groups/{item}");
      URI.Set_Path_Param ("item", Item);
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Get_Group;

   --  Get Fields
   --  |
   --      Used to retrieve all the `field names` of the EMS Group (including the custom fields).
   procedure Get_Group_Fields
      (Client : in out Client_Type;
       X_Embarcadero_Application_Id : in Swagger.Nullable_UString;
       X_Embarcadero_App_Secret : in Swagger.Nullable_UString;
       X_Embarcadero_Master_Secret : in Swagger.Nullable_UString;
       Result : out .Models.FieldGroupObject_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Set_Path ("/groups/fields");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Get_Group_Fields;

   --  Get Groups
   --  |
   --      Used to retrieve all data from `Groups`.
   --      Optional query param of **skip, limit, order, where** determines 
   --      size of returned array, filtered and order by.
   procedure Get_Groups
      (Client : in out Client_Type;
       X_Embarcadero_Application_Id : in Swagger.Nullable_UString;
       X_Embarcadero_App_Secret : in Swagger.Nullable_UString;
       X_Embarcadero_Master_Secret : in Swagger.Nullable_UString;
       Skip : in ;
       Limit : in ;
       Order : in ;
       Where : in Swagger.Nullable_UString;
       Result : out .Models.GroupObject_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("skip", Skip);
      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("order", Order);
      URI.Add_Param ("where", Where);
      URI.Set_Path ("/groups");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Get_Groups;

   --  Update Group
   --  |
   --      Used to update a `Group`. **item** is the unique EMS Group name in the EMS database.
   procedure Update_Group
      (Client : in out Client_Type;
       Item : in Swagger.UString;
       P_Body : in .Models.UpdateGroupObject_Type;
       X_Embarcadero_Application_Id : in Swagger.Nullable_UString;
       X_Embarcadero_App_Secret : in Swagger.Nullable_UString;
       X_Embarcadero_Master_Secret : in Swagger.Nullable_UString;
       Result : out .Models.UpdatedGroupObject_Type) is
      URI   : Swagger.Clients.URI_Type;
      Req   : Swagger.Clients.Request_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));
      Client.Initialize (Req, (1 => Swagger.Clients.APPLICATION_JSON));
      .Models.Serialize (Req.Stream, "", P_Body);

      URI.Set_Path ("/groups/{item}");
      URI.Set_Path_Param ("item", Item);
      Client.Call (Swagger.Clients.PUT, URI, Req, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Update_Group;

   --  Add Installation
   --  |
   --      Used to add a new `Installation` object to the EMS database.
   procedure Add_Installation
      (Client : in out Client_Type;
       P_Body : in .Models.InstallationAddObject_Type;
       X_Embarcadero_Application_Id : in Swagger.Nullable_UString;
       X_Embarcadero_App_Secret : in Swagger.Nullable_UString;
       X_Embarcadero_Master_Secret : in Swagger.Nullable_UString;
       Result : out .Models.InstallationAddedObject_Type) is
      URI   : Swagger.Clients.URI_Type;
      Req   : Swagger.Clients.Request_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));
      Client.Initialize (Req, (1 => Swagger.Clients.APPLICATION_JSON));
      .Models.Serialize (Req.Stream, "", P_Body);

      URI.Set_Path ("/installations");
      Client.Call (Swagger.Clients.POST, URI, Req, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Add_Installation;

   --  Delete Installation
   --  |
   --      Used to delete an `Installation`. **id** is the unique EMS Installation identifier (IID) in the EMS database.
   procedure Delete_Installation
      (Client : in out Client_Type;
       Id : in Swagger.UString;
       X_Embarcadero_Application_Id : in Swagger.Nullable_UString;
       X_Embarcadero_App_Secret : in Swagger.Nullable_UString;
       X_Embarcadero_Master_Secret : in Swagger.Nullable_UString) is
      URI   : Swagger.Clients.URI_Type;
   begin


      URI.Set_Path ("/installations/{id}");
      URI.Set_Path_Param ("id", Id);
      Client.Call (Swagger.Clients.DELETE, URI);
   end Delete_Installation;

   --  Get Installation Channels
   --  |
   --       Used to retrieve the available channels to which the device has subscribed. **id** is the unique EMS Installation identifier (InstallationID) in the EMS database.
   procedure Get_Channels
      (Client : in out Client_Type;
       X_Embarcadero_Application_Id : in Swagger.Nullable_UString;
       X_Embarcadero_App_Secret : in Swagger.Nullable_UString;
       X_Embarcadero_Master_Secret : in Swagger.Nullable_UString;
       Result : out .Models.ChannelName_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Set_Path ("/installations/channels");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Get_Channels;

   --  Get Installation
   --  |
   --      Used to retrieve all data from a specific `Installation` (registered device). **id** is the unique EMS Installation identifier (InstallationID) in the EMS database.
   procedure Get_Installation
      (Client : in out Client_Type;
       Id : in Swagger.UString;
       X_Embarcadero_Application_Id : in Swagger.Nullable_UString;
       X_Embarcadero_App_Secret : in Swagger.Nullable_UString;
       X_Embarcadero_Master_Secret : in Swagger.Nullable_UString;
       Result : out .Models.InstallationObject_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Set_Path ("/installations/{id}");
      URI.Set_Path_Param ("id", Id);
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Get_Installation;

   --  Get Fields
   --  |
   --      Used to retrieve all the `field names` of the EMS Installation (including the custom fields).
   procedure Get_Installation_Fields
      (Client : in out Client_Type;
       X_Embarcadero_Application_Id : in Swagger.Nullable_UString;
       X_Embarcadero_App_Secret : in Swagger.Nullable_UString;
       X_Embarcadero_Master_Secret : in Swagger.Nullable_UString;
       Result : out .Models.FieldInstallationObject_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Set_Path ("/installations/fields");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Get_Installation_Fields;

   --  Get Installations
   --  |
   --      Used to retrieve all data from `Installation`.
   --      Optional query param of **skip, limit, order, where** determines 
   --      size of returned array, filtered and order by.
   procedure Get_Installations
      (Client : in out Client_Type;
       X_Embarcadero_Application_Id : in Swagger.Nullable_UString;
       X_Embarcadero_App_Secret : in Swagger.Nullable_UString;
       X_Embarcadero_Master_Secret : in Swagger.Nullable_UString;
       Skip : in ;
       Limit : in ;
       Order : in ;
       Where : in Swagger.Nullable_UString;
       Result : out .Models.InstallationObject_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("skip", Skip);
      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("order", Order);
      URI.Add_Param ("where", Where);
      URI.Set_Path ("/installations");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Get_Installations;

   --  Update Installation
   --  |
   --      Used to update an `Installation`. **id** is the unique EMS Installation identifier (IID) in the EMS database.
   procedure Update_Installation
      (Client : in out Client_Type;
       Id : in Swagger.UString;
       P_Body : in .Models.UpdateInstallationObject_Type;
       X_Embarcadero_Application_Id : in Swagger.Nullable_UString;
       X_Embarcadero_App_Secret : in Swagger.Nullable_UString;
       X_Embarcadero_Master_Secret : in Swagger.Nullable_UString;
       Result : out .Models.UpdatedInstallationObject_Type) is
      URI   : Swagger.Clients.URI_Type;
      Req   : Swagger.Clients.Request_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));
      Client.Initialize (Req, (1 => Swagger.Clients.APPLICATION_JSON));
      .Models.Serialize (Req.Stream, "", P_Body);

      URI.Set_Path ("/installations/{id}");
      URI.Set_Path_Param ("id", Id);
      Client.Call (Swagger.Clients.PUT, URI, Req, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Update_Installation;

   --  Send Push
   --  Used to send a push notification message to a registered device
   procedure Send
      (Client : in out Client_Type;
       P_Body : in .Models.PushObject_Type;
       X_Embarcadero_Application_Id : in Swagger.Nullable_UString;
       X_Embarcadero_App_Secret : in Swagger.Nullable_UString;
       X_Embarcadero_Master_Secret : in Swagger.Nullable_UString) is
      URI   : Swagger.Clients.URI_Type;
      Req   : Swagger.Clients.Request_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));
      Client.Initialize (Req, (1 => Swagger.Clients.APPLICATION_JSON));
      .Models.Serialize (Req.Stream, "", P_Body);

      URI.Set_Path ("/push");
      Client.Call (Swagger.Clients.POST, URI, Req);
   end Send;

   --  Add User
   --  |
   --      Used to add a new `User` object to the EMS database.
   procedure Add_User
      (Client : in out Client_Type;
       P_Body : in .Models.UserCredentialsObject_Type;
       X_Embarcadero_Application_Id : in Swagger.Nullable_UString;
       X_Embarcadero_App_Secret : in Swagger.Nullable_UString;
       X_Embarcadero_Master_Secret : in Swagger.Nullable_UString;
       Result : out .Models.UseridObject_Type) is
      URI   : Swagger.Clients.URI_Type;
      Req   : Swagger.Clients.Request_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));
      Client.Initialize (Req, (1 => Swagger.Clients.APPLICATION_JSON));
      .Models.Serialize (Req.Stream, "", P_Body);

      URI.Set_Path ("/users");
      Client.Call (Swagger.Clients.POST, URI, Req, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Add_User;

   --  Delete User
   --  |
   --      Used to delete a `User`. **id** is the unique EMS User identifier (UID) in the EMS database.
   procedure Delete_User
      (Client : in out Client_Type;
       Id : in Swagger.UString;
       X_Embarcadero_Application_Id : in Swagger.Nullable_UString;
       X_Embarcadero_App_Secret : in Swagger.Nullable_UString;
       X_Embarcadero_Master_Secret : in Swagger.Nullable_UString) is
      URI   : Swagger.Clients.URI_Type;
   begin


      URI.Set_Path ("/users/{id}");
      URI.Set_Path_Param ("id", Id);
      Client.Call (Swagger.Clients.DELETE, URI);
   end Delete_User;

   --  Get User
   --  |
   --      Used to retrieve all data from a `User`. **id** is the unique EMS User identifier (UID) in the EMS database.
   procedure Get_User
      (Client : in out Client_Type;
       Id : in Swagger.UString;
       X_Embarcadero_Application_Id : in Swagger.Nullable_UString;
       X_Embarcadero_App_Secret : in Swagger.Nullable_UString;
       X_Embarcadero_Master_Secret : in Swagger.Nullable_UString;
       Result : out .Models.UserObject_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Set_Path ("/users/{id}");
      URI.Set_Path_Param ("id", Id);
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Get_User;

   --  Get Fields
   --  |
   --      Used to retrieve all the `field names` of the EMS Users (including the custom fields).
   procedure Get_User_Fields
      (Client : in out Client_Type;
       X_Embarcadero_Application_Id : in Swagger.Nullable_UString;
       X_Embarcadero_App_Secret : in Swagger.Nullable_UString;
       X_Embarcadero_Master_Secret : in Swagger.Nullable_UString;
       Result : out .Models.FieldObject_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Set_Path ("/users/fields");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Get_User_Fields;

   --  Get User Groups
   --  |
   --      Used to retrieve the EMS Groups the EMS User belongs to. **id** is the unique EMS User identifier (UID) in the EMS database.
   procedure Get_User_Groups
      (Client : in out Client_Type;
       Id : in Swagger.UString;
       X_Embarcadero_Application_Id : in Swagger.Nullable_UString;
       X_Embarcadero_App_Secret : in Swagger.Nullable_UString;
       X_Embarcadero_Master_Secret : in Swagger.Nullable_UString;
       Result : out .Models.GroupName_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Set_Path ("/users/{id}/groups");
      URI.Set_Path_Param ("id", Id);
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Get_User_Groups;

   --  Get Users
   --  |
   --      Used to retrieve all data from `Users`.
   --      Optional query param of **skip, limit, order, where** determines 
   --      size of returned array, filtered and order by.
   procedure Get_Users
      (Client : in out Client_Type;
       X_Embarcadero_Application_Id : in Swagger.Nullable_UString;
       X_Embarcadero_App_Secret : in Swagger.Nullable_UString;
       X_Embarcadero_Master_Secret : in Swagger.Nullable_UString;
       Skip : in ;
       Limit : in ;
       Order : in ;
       Where : in Swagger.Nullable_UString;
       Result : out .Models.UserObject_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("skip", Skip);
      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("order", Order);
      URI.Add_Param ("where", Where);
      URI.Set_Path ("/users");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Get_Users;

   --  Log In
   --  |
   --      Logs in to the EMS Server with a specific EMS User.
   procedure Login_User
      (Client : in out Client_Type;
       P_Body : in .Models.UserCredentialsObject_Type;
       X_Embarcadero_Application_Id : in Swagger.Nullable_UString;
       X_Embarcadero_App_Secret : in Swagger.Nullable_UString;
       X_Embarcadero_Master_Secret : in Swagger.Nullable_UString;
       Result : out .Models.UserTokenObject_Type) is
      URI   : Swagger.Clients.URI_Type;
      Req   : Swagger.Clients.Request_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));
      Client.Initialize (Req, (1 => Swagger.Clients.APPLICATION_JSON));
      .Models.Serialize (Req.Stream, "", P_Body);

      URI.Set_Path ("/users/login");
      Client.Call (Swagger.Clients.POST, URI, Req, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Login_User;

   --  sPostLogoutSummaryTitle
   --  sPostLogoutSummaryDesc
   procedure Logout_User
      (Client : in out Client_Type;
       X_Embarcadero_Application_Id : in Swagger.Nullable_UString;
       X_Embarcadero_App_Secret : in Swagger.Nullable_UString;
       X_Embarcadero_Master_Secret : in Swagger.Nullable_UString) is
      URI   : Swagger.Clients.URI_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Set_Path ("/users/logout");
      Client.Call (Swagger.Clients.POST, URI);
   end Logout_User;

   --  Sign Up  User
   --  |
   --      Signs up to the EMS Server with an appropriate EMS User.
   procedure Signup_User
      (Client : in out Client_Type;
       P_Body : in .Models.UserCredentialsObject_Type;
       X_Embarcadero_Application_Id : in Swagger.Nullable_UString;
       X_Embarcadero_App_Secret : in Swagger.Nullable_UString;
       X_Embarcadero_Master_Secret : in Swagger.Nullable_UString;
       Result : out .Models.UserSignUpResponseObject_Type) is
      URI   : Swagger.Clients.URI_Type;
      Req   : Swagger.Clients.Request_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));
      Client.Initialize (Req, (1 => Swagger.Clients.APPLICATION_JSON));
      .Models.Serialize (Req.Stream, "", P_Body);

      URI.Set_Path ("/users/signup");
      Client.Call (Swagger.Clients.POST, URI, Req, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Signup_User;

   --  Update User
   --  |
   --      Used to update a `User`. **id** is the unique EMS User identifier (UID) in the EMS database.
   procedure Update_User
      (Client : in out Client_Type;
       Id : in Swagger.UString;
       P_Body : in .Models.UpdateObject_Type;
       X_Embarcadero_Application_Id : in Swagger.Nullable_UString;
       X_Embarcadero_App_Secret : in Swagger.Nullable_UString;
       X_Embarcadero_Master_Secret : in Swagger.Nullable_UString;
       Result : out .Models.UpdatedObject_Type) is
      URI   : Swagger.Clients.URI_Type;
      Req   : Swagger.Clients.Request_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));
      Client.Initialize (Req, (1 => Swagger.Clients.APPLICATION_JSON));
      .Models.Serialize (Req.Stream, "", P_Body);

      URI.Set_Path ("/users/{id}");
      URI.Set_Path_Param ("id", Id);
      Client.Call (Swagger.Clients.PUT, URI, Req, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Update_User;

   --  Get version
   --  |
   --      Used to retrieve the `Version` of the EMS Server.
   procedure Get_Version
      (Client : in out Client_Type;
       X_Embarcadero_Application_Id : in Swagger.Nullable_UString;
       X_Embarcadero_App_Secret : in Swagger.Nullable_UString;
       X_Embarcadero_Master_Secret : in Swagger.Nullable_UString;
       Result : out .Models.VersionObject_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Set_Path ("/version");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Get_Version;
end .Clients;
