{-
   EMS API Documentation
   Enterprise Mobility Services API      [Learn about EMS](https://www.embarcadero.com/products/rad-studio/enterprise-mobility-services)      EMS (Enterprise Mobility Services) offers a Mobile Enterprise Application Platform (MEAP)      TurnKey Middleware for Interconnected Distributed Apps

   OpenAPI spec version: 0.0.0
   

   NOTE: This file is auto generated by the swagger code generator program.
   https://github.com/swagger-api/swagger-codegen.git
   Do not edit this file manually.
-}


module Request.Installations exposing (addInstallation, deleteInstallation, getChannels, getInstallation, getInstallationFields, getInstallations, updateInstallation)

import Data.ChannelName exposing (ChannelName, channelNameDecoder)
import Data.InstallationAddedObject exposing (InstallationAddedObject, installationAddedObjectDecoder)
import Data.InstallationObject exposing (InstallationObject, installationObjectDecoder)
import Data.UpdatedInstallationObject exposing (UpdatedInstallationObject, updatedInstallationObjectDecoder)
import Data.UpdateInstallationObject exposing (UpdateInstallationObject, updateInstallationObjectEncoder)
import Data.FieldInstallationObject exposing (FieldInstallationObject, fieldInstallationObjectDecoder)
import Data.InstallationAddObject exposing (InstallationAddObject, installationAddObjectEncoder)
import Http
import Json.Decode as Decode


basePath : String
basePath =
    "http://localhost:8080"


{-
    |      Used to add a new &#x60;Installation&#x60; object to the EMS database.
-}
addInstallation : InstallationAddObject -> Http.Request InstallationAddedObject
addInstallation model =
    { method = "POST"
    , url = basePath ++ "/installations"
    , headers = []
    , body = Http.jsonBody <| installationAddObjectEncoder model
    , expect = Http.expectJson installationAddedObjectDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
    |      Used to delete an &#x60;Installation&#x60;. **id** is the unique EMS Installation identifier (IID) in the EMS database.
-}
deleteInstallation : String -> Http.Request ()
deleteInstallation id =
    { method = "DELETE"
    , url = basePath ++ "/installations/" ++ id
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectStringResponse (\_ -> Ok ())
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
    |       Used to retrieve the available channels to which the device has subscribed. **id** is the unique EMS Installation identifier (InstallationID) in the EMS database.
-}
getChannels : Http.Request (List ChannelName)
getChannels =
    { method = "GET"
    , url = basePath ++ "/installations/channels"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson (Decode.list channelNameDecoder)
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
    |      Used to retrieve all data from a specific &#x60;Installation&#x60; (registered device). **id** is the unique EMS Installation identifier (InstallationID) in the EMS database.
-}
getInstallation : String -> Http.Request InstallationObject
getInstallation id =
    { method = "GET"
    , url = basePath ++ "/installations/" ++ id
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson installationObjectDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
    |      Used to retrieve all the &#x60;field names&#x60; of the EMS Installation (including the custom fields).
-}
getInstallationFields : Http.Request (List FieldInstallationObject)
getInstallationFields =
    { method = "GET"
    , url = basePath ++ "/installations/fields"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson (Decode.list fieldInstallationObjectDecoder)
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
    |      Used to retrieve all data from &#x60;Installation&#x60;.      Optional query param of **skip, limit, order, where** determines       size of returned array, filtered and order by.
-}
getInstallations : Http.Request (List InstallationObject)
getInstallations =
    { method = "GET"
    , url = basePath ++ "/installations"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson (Decode.list installationObjectDecoder)
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
    |      Used to update an &#x60;Installation&#x60;. **id** is the unique EMS Installation identifier (IID) in the EMS database.
-}
updateInstallation : String -> UpdateInstallationObject -> Http.Request UpdatedInstallationObject
updateInstallation id model =
    { method = "PUT"
    , url = basePath ++ "/installations/" ++ id
    , headers = []
    , body = Http.jsonBody <| updateInstallationObjectEncoder model
    , expect = Http.expectJson updatedInstallationObjectDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


