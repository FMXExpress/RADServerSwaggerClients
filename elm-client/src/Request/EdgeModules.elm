{-
   EMS API Documentation
   Enterprise Mobility Services API      [Learn about EMS](https://www.embarcadero.com/products/rad-studio/enterprise-mobility-services)      EMS (Enterprise Mobility Services) offers a Mobile Enterprise Application Platform (MEAP)      TurnKey Middleware for Interconnected Distributed Apps

   OpenAPI spec version: 0.0.0
   

   NOTE: This file is auto generated by the swagger code generator program.
   https://github.com/swagger-api/swagger-codegen.git
   Do not edit this file manually.
-}


module Request.EdgeModules exposing (getModule, getModuleResource, getModuleResources, getModules, getModulesFields, getResources, getResourcesFields, registerModule, registerModuleResource, unregisterModule, unregisterModuleResource, updateModule, updateModuleResource)

import Data.EdgeModuleResourceUpdateObject exposing (EdgeModuleResourceUpdateObject, edgeModuleResourceUpdateObjectEncoder)
import Data.FieldsEdgeModuleObject exposing (FieldsEdgeModuleObject, fieldsEdgeModuleObjectDecoder)
import Data.EdgeModuleAddObject exposing (EdgeModuleAddObject, edgeModuleAddObjectEncoder)
import Data.EdgeModuleResourceAddObject exposing (EdgeModuleResourceAddObject, edgeModuleResourceAddObjectEncoder)
import Data.EdgeModuleResourceObject exposing (EdgeModuleResourceObject, edgeModuleResourceObjectDecoder)
import Data.EdgeModuleObject exposing (EdgeModuleObject, edgeModuleObjectDecoder)
import Data.EdgeModuleUpdatedObject exposing (EdgeModuleUpdatedObject, edgeModuleUpdatedObjectDecoder)
import Data.EdgeModuleResourceUpdatedObject exposing (EdgeModuleResourceUpdatedObject, edgeModuleResourceUpdatedObjectDecoder)
import Data.EdgeModuleUpdateObject exposing (EdgeModuleUpdateObject, edgeModuleUpdateObjectEncoder)
import Data.EdgeModuleAddedObject exposing (EdgeModuleAddedObject, edgeModuleAddedObjectDecoder)
import Data.EdgeModuleResourceAddedObject exposing (EdgeModuleResourceAddedObject, edgeModuleResourceAddedObjectDecoder)
import Http
import Json.Decode as Decode


basePath : String
basePath =
    "http://localhost:8080"


{-
    |      Used to retrieve all data from &#x60;EdgeModule&#x60;.      Optional query param of **skip, limit, order, where** determines       size of returned array, filtered and order by.
-}
getModule : String -> Http.Request EdgeModuleObject
getModule mname =
    { method = "GET"
    , url = basePath ++ "/edgemodules/" ++ mname
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson edgeModuleObjectDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
    |      Used to retrieve all data from a resource of an EdgeModule. **mname** is the unique EMS EdgeModule identifier in the EMS database. **resourcename** is the name of the resource.
-}
getModuleResource : String -> String -> Http.Request EdgeModuleResourceObject
getModuleResource mname name =
    { method = "GET"
    , url = basePath ++ "/edgemodules/" ++ mname ++ "/resources/" ++ name
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson edgeModuleResourceObjectDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
    |      Used to retrieve all data from the resources of an EdgeModule.
-}
getModuleResources : String -> Http.Request (List EdgeModuleResourceObject)
getModuleResources mname =
    { method = "GET"
    , url = basePath ++ "/edgemodules/" ++ mname ++ "/resources"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson (Decode.list edgeModuleResourceObjectDecoder)
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
    |      Used to retrieve all data from &#x60;EdgeModule&#x60;.      Optional query param of **skip, limit, order, where** determines       size of returned array, filtered and order by.
-}
getModules : Http.Request (List EdgeModuleObject)
getModules =
    { method = "GET"
    , url = basePath ++ "/edgemodules"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson (Decode.list edgeModuleObjectDecoder)
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
    |      Used to retrieve all the &#x60;field names&#x60; of the EMS EdgeModule (including the custom fields).
-}
getModulesFields : Http.Request FieldsEdgeModuleObject
getModulesFields =
    { method = "GET"
    , url = basePath ++ "/edgemodules/fields"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson fieldsEdgeModuleObjectDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
    |      Used to retrieve all data from the resources of all EdgeModules.
-}
getResources : Http.Request (List EdgeModuleResourceObject)
getResources =
    { method = "GET"
    , url = basePath ++ "/edgemodules/resources"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson (Decode.list edgeModuleResourceObjectDecoder)
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
    |      Used to retrieve the &#x60;field names&#x60; of all the resources of the EMS EdgeModule (including the custom fields).
-}
getResourcesFields : Http.Request FieldsEdgeModuleObject
getResourcesFields =
    { method = "GET"
    , url = basePath ++ "/edgemodules/resources/fields"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson fieldsEdgeModuleObjectDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
    |      Used to add a new &#x60;EdgeModule&#x60; object to the EMS database.
-}
registerModule : EdgeModuleAddObject -> Http.Request EdgeModuleAddedObject
registerModule model =
    { method = "POST"
    , url = basePath ++ "/edgemodules"
    , headers = []
    , body = Http.jsonBody <| edgeModuleAddObjectEncoder model
    , expect = Http.expectJson edgeModuleAddedObjectDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
    |      Used to register a new resource from an EMS EdgeModule. **mname** is the unique EMS EdgeModule identifier in the EMS database.
-}
registerModuleResource : String -> EdgeModuleResourceAddObject -> Http.Request EdgeModuleResourceAddedObject
registerModuleResource mname model =
    { method = "POST"
    , url = basePath ++ "/edgemodules/" ++ mname ++ "/resources"
    , headers = []
    , body = Http.jsonBody <| edgeModuleResourceAddObjectEncoder model
    , expect = Http.expectJson edgeModuleResourceAddedObjectDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
    |      Used to delete an &#x60;EdgeModule Resource&#x60;. **mname** is the unique EMS EdgeModule identifier (MID) in the EMS database. **resourcename** is the name of the resource.
-}
unregisterModule : String -> Http.Request ()
unregisterModule mname =
    { method = "DELETE"
    , url = basePath ++ "/edgemodules/" ++ mname
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectStringResponse (\_ -> Ok ())
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
    |      Used to delete an &#x60;EdgeModule Resource&#x60;. **mname** is the unique EMS EdgeModule identifier (MID) in the EMS database. **resourcename** is the name of the resource.
-}
unregisterModuleResource : String -> String -> Http.Request ()
unregisterModuleResource mname name =
    { method = "DELETE"
    , url = basePath ++ "/edgemodules/" ++ mname ++ "/resources/" ++ name
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectStringResponse (\_ -> Ok ())
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
    |      Used to update an &#x60;EdgeModule&#x60;. **mname** is the unique EMS EdgeModule identifier (MID) in the EMS database.
-}
updateModule : String -> EdgeModuleUpdateObject -> Http.Request EdgeModuleUpdatedObject
updateModule mname model =
    { method = "PUT"
    , url = basePath ++ "/edgemodules/" ++ mname
    , headers = []
    , body = Http.jsonBody <| edgeModuleUpdateObjectEncoder model
    , expect = Http.expectJson edgeModuleUpdatedObjectDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
    |      Used to update an &#x60;EdgeModule&#x60;. **mname** is the unique EMS EdgeModule identifier (MID) in the EMS database.
-}
updateModuleResource : String -> String -> EdgeModuleResourceUpdateObject -> Http.Request EdgeModuleResourceUpdatedObject
updateModuleResource mname name model =
    { method = "PUT"
    , url = basePath ++ "/edgemodules/" ++ mname ++ "/resources/" ++ name
    , headers = []
    , body = Http.jsonBody <| edgeModuleResourceUpdateObjectEncoder model
    , expect = Http.expectJson edgeModuleResourceUpdatedObjectDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


