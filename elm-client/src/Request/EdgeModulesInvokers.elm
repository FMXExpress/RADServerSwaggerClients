{-
   EMS API Documentation
   Enterprise Mobility Services API      [Learn about EMS](https://www.embarcadero.com/products/rad-studio/enterprise-mobility-services)      EMS (Enterprise Mobility Services) offers a Mobile Enterprise Application Platform (MEAP)      TurnKey Middleware for Interconnected Distributed Apps

   OpenAPI spec version: 0.0.0
   

   NOTE: This file is auto generated by the swagger code generator program.
   https://github.com/swagger-api/swagger-codegen.git
   Do not edit this file manually.
-}


module Request.EdgeModulesInvokers exposing (deleteResourceEndpoint, deleteResourceEndpointItem, getResourceEndpoint, getResourceEndpointItem, patchResourceEndpoint, patchResourceEndpointItem, postResourceEndpoint, postResourceEndpointItem, putResourceEndpoint, putResourceEndpointItem)

import Data.Object exposing (Object, objectEncoder)
import Http
import Json.Decode as Decode


basePath : String
basePath =
    "http://localhost:8080"


{-
   Used to invoke the DELETE method of the resource from an existing EMS EdgeModule.
-}
deleteResourceEndpoint : String -> String -> Http.Request ()
deleteResourceEndpoint mname rname =
    { method = "DELETE"
    , url = basePath ++ "/edgemodules/" ++ mname ++ "/" ++ rname
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectStringResponse (\_ -> Ok ())
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   Used to invoke the DELETE method of the resource from an existing EMS EdgeModule.
-}
deleteResourceEndpointItem : String -> String -> String -> Http.Request ()
deleteResourceEndpointItem mname rname wildcard =
    { method = "DELETE"
    , url = basePath ++ "/edgemodules/" ++ mname ++ "/" ++ rname ++ "/" ++ wildcard
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectStringResponse (\_ -> Ok ())
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   Used to invoke the GET method of the resource from an existing EMS EdgeModule.
-}
getResourceEndpoint : String -> String -> Http.Request ()
getResourceEndpoint mname rname =
    { method = "GET"
    , url = basePath ++ "/edgemodules/" ++ mname ++ "/" ++ rname
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectStringResponse (\_ -> Ok ())
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   Used to invoke the GET method of the resource from an existing EMS EdgeModule.
-}
getResourceEndpointItem : String -> String -> String -> Http.Request ()
getResourceEndpointItem mname rname wildcard =
    { method = "GET"
    , url = basePath ++ "/edgemodules/" ++ mname ++ "/" ++ rname ++ "/" ++ wildcard
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectStringResponse (\_ -> Ok ())
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   Used to invoke the PATCH method of the resource from an existing EMS EdgeModule.
-}
patchResourceEndpoint : String -> String -> Object -> Http.Request ()
patchResourceEndpoint mname rname model =
    { method = "PATCH"
    , url = basePath ++ "/edgemodules/" ++ mname ++ "/" ++ rname
    , headers = []
    , body = Http.jsonBody <| objectEncoder model
    , expect = Http.expectStringResponse (\_ -> Ok ())
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   Used to invoke the PATCH method of the resource from an existing EMS EdgeModule.
-}
patchResourceEndpointItem : String -> String -> String -> Object -> Http.Request ()
patchResourceEndpointItem mname rname wildcard model =
    { method = "PATCH"
    , url = basePath ++ "/edgemodules/" ++ mname ++ "/" ++ rname ++ "/" ++ wildcard
    , headers = []
    , body = Http.jsonBody <| objectEncoder model
    , expect = Http.expectStringResponse (\_ -> Ok ())
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   Used to invoke the POST method of the resource from an existing EMS EdgeModule.
-}
postResourceEndpoint : String -> String -> Object -> Http.Request ()
postResourceEndpoint mname rname model =
    { method = "POST"
    , url = basePath ++ "/edgemodules/" ++ mname ++ "/" ++ rname
    , headers = []
    , body = Http.jsonBody <| objectEncoder model
    , expect = Http.expectStringResponse (\_ -> Ok ())
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   Used to invoke the POST method of the resource from an existing EMS EdgeModule.
-}
postResourceEndpointItem : String -> String -> String -> Object -> Http.Request ()
postResourceEndpointItem mname rname wildcard model =
    { method = "POST"
    , url = basePath ++ "/edgemodules/" ++ mname ++ "/" ++ rname ++ "/" ++ wildcard
    , headers = []
    , body = Http.jsonBody <| objectEncoder model
    , expect = Http.expectStringResponse (\_ -> Ok ())
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   Used to invoke the PUT method of the resource from an existing EMS EdgeModule.
-}
putResourceEndpoint : String -> String -> Object -> Http.Request ()
putResourceEndpoint mname rname model =
    { method = "PUT"
    , url = basePath ++ "/edgemodules/" ++ mname ++ "/" ++ rname
    , headers = []
    , body = Http.jsonBody <| objectEncoder model
    , expect = Http.expectStringResponse (\_ -> Ok ())
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   Used to invoke the PUT method of the resource from an existing EMS EdgeModule.
-}
putResourceEndpointItem : String -> String -> String -> Object -> Http.Request ()
putResourceEndpointItem mname rname wildcard model =
    { method = "PUT"
    , url = basePath ++ "/edgemodules/" ++ mname ++ "/" ++ rname ++ "/" ++ wildcard
    , headers = []
    , body = Http.jsonBody <| objectEncoder model
    , expect = Http.expectStringResponse (\_ -> Ok ())
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


