//
// EdgeModulesInvokersAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class EdgeModulesInvokersAPI: APIBase {
    /**
     Invoke Resource Delete Method
     - parameter mname: (path) Is the EMS EdgeModule name 
     - parameter rname: (path) Is the unique EMS EdgeModule Resource name 
     - parameter xEmbarcaderoApplicationId: (header)  (optional)
     - parameter xEmbarcaderoAppSecret: (header)  (optional)
     - parameter xEmbarcaderoMasterSecret: (header)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteResourceEndpoint(mname: String, rname: String, xEmbarcaderoApplicationId: String? = nil, xEmbarcaderoAppSecret: String? = nil, xEmbarcaderoMasterSecret: String? = nil, completion: @escaping ((_ error: ErrorResponse?) -> Void)) {
        deleteResourceEndpointWithRequestBuilder(mname: mname, rname: rname, xEmbarcaderoApplicationId: xEmbarcaderoApplicationId, xEmbarcaderoAppSecret: xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret: xEmbarcaderoMasterSecret).execute { (response, error) -> Void in
            completion(error)
        }
    }


    /**
     Invoke Resource Delete Method
     - DELETE /edgemodules/{mname}/{rname}
     - Used to invoke the DELETE method of the resource from an existing EMS EdgeModule.

     - parameter mname: (path) Is the EMS EdgeModule name 
     - parameter rname: (path) Is the unique EMS EdgeModule Resource name 
     - parameter xEmbarcaderoApplicationId: (header)  (optional)
     - parameter xEmbarcaderoAppSecret: (header)  (optional)
     - parameter xEmbarcaderoMasterSecret: (header)  (optional)
     - returns: RequestBuilder<Void> 
     */
    open class func deleteResourceEndpointWithRequestBuilder(mname: String, rname: String, xEmbarcaderoApplicationId: String? = nil, xEmbarcaderoAppSecret: String? = nil, xEmbarcaderoMasterSecret: String? = nil) -> RequestBuilder<Void> {
        var path = "/edgemodules/{mname}/{rname}"
        let mnamePreEscape = "\(mname)"
        let mnamePostEscape = mnamePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{mname}", with: mnamePostEscape, options: .literal, range: nil)
        let rnamePreEscape = "\(rname)"
        let rnamePostEscape = rnamePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{rname}", with: rnamePostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "X-Embarcadero-Application-Id": xEmbarcaderoApplicationId,
            "X-Embarcadero-App-Secret": xEmbarcaderoAppSecret,
            "X-Embarcadero-Master-Secret": xEmbarcaderoMasterSecret
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**
     Invoke Resource/_* Delete Method
     - parameter mname: (path) Is the EMS EdgeModule name 
     - parameter rname: (path) Is the unique EMS EdgeModule Resource name 
     - parameter wildcard: (path) Is the Wild card part of the URL 
     - parameter xEmbarcaderoApplicationId: (header)  (optional)
     - parameter xEmbarcaderoAppSecret: (header)  (optional)
     - parameter xEmbarcaderoMasterSecret: (header)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteResourceEndpointItem(mname: String, rname: String, wildcard: String, xEmbarcaderoApplicationId: String? = nil, xEmbarcaderoAppSecret: String? = nil, xEmbarcaderoMasterSecret: String? = nil, completion: @escaping ((_ error: ErrorResponse?) -> Void)) {
        deleteResourceEndpointItemWithRequestBuilder(mname: mname, rname: rname, wildcard: wildcard, xEmbarcaderoApplicationId: xEmbarcaderoApplicationId, xEmbarcaderoAppSecret: xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret: xEmbarcaderoMasterSecret).execute { (response, error) -> Void in
            completion(error)
        }
    }


    /**
     Invoke Resource/_* Delete Method
     - DELETE /edgemodules/{mname}/{rname}/{wildcard}
     - Used to invoke the DELETE method of the resource from an existing EMS EdgeModule.

     - parameter mname: (path) Is the EMS EdgeModule name 
     - parameter rname: (path) Is the unique EMS EdgeModule Resource name 
     - parameter wildcard: (path) Is the Wild card part of the URL 
     - parameter xEmbarcaderoApplicationId: (header)  (optional)
     - parameter xEmbarcaderoAppSecret: (header)  (optional)
     - parameter xEmbarcaderoMasterSecret: (header)  (optional)
     - returns: RequestBuilder<Void> 
     */
    open class func deleteResourceEndpointItemWithRequestBuilder(mname: String, rname: String, wildcard: String, xEmbarcaderoApplicationId: String? = nil, xEmbarcaderoAppSecret: String? = nil, xEmbarcaderoMasterSecret: String? = nil) -> RequestBuilder<Void> {
        var path = "/edgemodules/{mname}/{rname}/{wildcard}"
        let mnamePreEscape = "\(mname)"
        let mnamePostEscape = mnamePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{mname}", with: mnamePostEscape, options: .literal, range: nil)
        let rnamePreEscape = "\(rname)"
        let rnamePostEscape = rnamePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{rname}", with: rnamePostEscape, options: .literal, range: nil)
        let wildcardPreEscape = "\(wildcard)"
        let wildcardPostEscape = wildcardPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{wildcard}", with: wildcardPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "X-Embarcadero-Application-Id": xEmbarcaderoApplicationId,
            "X-Embarcadero-App-Secret": xEmbarcaderoAppSecret,
            "X-Embarcadero-Master-Secret": xEmbarcaderoMasterSecret
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**
     Invoke Resource Get Method
     - parameter mname: (path) Is the EMS EdgeModule name 
     - parameter rname: (path) Is the unique EMS EdgeModule Resource name 
     - parameter xEmbarcaderoApplicationId: (header)  (optional)
     - parameter xEmbarcaderoAppSecret: (header)  (optional)
     - parameter xEmbarcaderoMasterSecret: (header)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getResourceEndpoint(mname: String, rname: String, xEmbarcaderoApplicationId: String? = nil, xEmbarcaderoAppSecret: String? = nil, xEmbarcaderoMasterSecret: String? = nil, completion: @escaping ((_ error: ErrorResponse?) -> Void)) {
        getResourceEndpointWithRequestBuilder(mname: mname, rname: rname, xEmbarcaderoApplicationId: xEmbarcaderoApplicationId, xEmbarcaderoAppSecret: xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret: xEmbarcaderoMasterSecret).execute { (response, error) -> Void in
            completion(error)
        }
    }


    /**
     Invoke Resource Get Method
     - GET /edgemodules/{mname}/{rname}
     - Used to invoke the GET method of the resource from an existing EMS EdgeModule.

     - parameter mname: (path) Is the EMS EdgeModule name 
     - parameter rname: (path) Is the unique EMS EdgeModule Resource name 
     - parameter xEmbarcaderoApplicationId: (header)  (optional)
     - parameter xEmbarcaderoAppSecret: (header)  (optional)
     - parameter xEmbarcaderoMasterSecret: (header)  (optional)
     - returns: RequestBuilder<Void> 
     */
    open class func getResourceEndpointWithRequestBuilder(mname: String, rname: String, xEmbarcaderoApplicationId: String? = nil, xEmbarcaderoAppSecret: String? = nil, xEmbarcaderoMasterSecret: String? = nil) -> RequestBuilder<Void> {
        var path = "/edgemodules/{mname}/{rname}"
        let mnamePreEscape = "\(mname)"
        let mnamePostEscape = mnamePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{mname}", with: mnamePostEscape, options: .literal, range: nil)
        let rnamePreEscape = "\(rname)"
        let rnamePostEscape = rnamePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{rname}", with: rnamePostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "X-Embarcadero-Application-Id": xEmbarcaderoApplicationId,
            "X-Embarcadero-App-Secret": xEmbarcaderoAppSecret,
            "X-Embarcadero-Master-Secret": xEmbarcaderoMasterSecret
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**
     Invoke Resource/_* Get Method
     - parameter mname: (path) Is the EMS EdgeModule name 
     - parameter rname: (path) Is the unique EMS EdgeModule Resource name 
     - parameter wildcard: (path) Is the Wild card part of the URL 
     - parameter xEmbarcaderoApplicationId: (header)  (optional)
     - parameter xEmbarcaderoAppSecret: (header)  (optional)
     - parameter xEmbarcaderoMasterSecret: (header)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getResourceEndpointItem(mname: String, rname: String, wildcard: String, xEmbarcaderoApplicationId: String? = nil, xEmbarcaderoAppSecret: String? = nil, xEmbarcaderoMasterSecret: String? = nil, completion: @escaping ((_ error: ErrorResponse?) -> Void)) {
        getResourceEndpointItemWithRequestBuilder(mname: mname, rname: rname, wildcard: wildcard, xEmbarcaderoApplicationId: xEmbarcaderoApplicationId, xEmbarcaderoAppSecret: xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret: xEmbarcaderoMasterSecret).execute { (response, error) -> Void in
            completion(error)
        }
    }


    /**
     Invoke Resource/_* Get Method
     - GET /edgemodules/{mname}/{rname}/{wildcard}
     - Used to invoke the GET method of the resource from an existing EMS EdgeModule.

     - parameter mname: (path) Is the EMS EdgeModule name 
     - parameter rname: (path) Is the unique EMS EdgeModule Resource name 
     - parameter wildcard: (path) Is the Wild card part of the URL 
     - parameter xEmbarcaderoApplicationId: (header)  (optional)
     - parameter xEmbarcaderoAppSecret: (header)  (optional)
     - parameter xEmbarcaderoMasterSecret: (header)  (optional)
     - returns: RequestBuilder<Void> 
     */
    open class func getResourceEndpointItemWithRequestBuilder(mname: String, rname: String, wildcard: String, xEmbarcaderoApplicationId: String? = nil, xEmbarcaderoAppSecret: String? = nil, xEmbarcaderoMasterSecret: String? = nil) -> RequestBuilder<Void> {
        var path = "/edgemodules/{mname}/{rname}/{wildcard}"
        let mnamePreEscape = "\(mname)"
        let mnamePostEscape = mnamePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{mname}", with: mnamePostEscape, options: .literal, range: nil)
        let rnamePreEscape = "\(rname)"
        let rnamePostEscape = rnamePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{rname}", with: rnamePostEscape, options: .literal, range: nil)
        let wildcardPreEscape = "\(wildcard)"
        let wildcardPostEscape = wildcardPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{wildcard}", with: wildcardPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "X-Embarcadero-Application-Id": xEmbarcaderoApplicationId,
            "X-Embarcadero-App-Secret": xEmbarcaderoAppSecret,
            "X-Embarcadero-Master-Secret": xEmbarcaderoMasterSecret
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**
     Invoke Resource Patch Method
     - parameter mname: (path) Is the EMS EdgeModule name 
     - parameter rname: (path) Is the unique EMS EdgeModule Resource name 
     - parameter body: (body) Body Object 
     - parameter xEmbarcaderoApplicationId: (header)  (optional)
     - parameter xEmbarcaderoAppSecret: (header)  (optional)
     - parameter xEmbarcaderoMasterSecret: (header)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func patchResourceEndpoint(mname: String, rname: String, body: Any, xEmbarcaderoApplicationId: String? = nil, xEmbarcaderoAppSecret: String? = nil, xEmbarcaderoMasterSecret: String? = nil, completion: @escaping ((_ error: ErrorResponse?) -> Void)) {
        patchResourceEndpointWithRequestBuilder(mname: mname, rname: rname, body: body, xEmbarcaderoApplicationId: xEmbarcaderoApplicationId, xEmbarcaderoAppSecret: xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret: xEmbarcaderoMasterSecret).execute { (response, error) -> Void in
            completion(error)
        }
    }


    /**
     Invoke Resource Patch Method
     - PATCH /edgemodules/{mname}/{rname}
     - Used to invoke the PATCH method of the resource from an existing EMS EdgeModule.

     - parameter mname: (path) Is the EMS EdgeModule name 
     - parameter rname: (path) Is the unique EMS EdgeModule Resource name 
     - parameter body: (body) Body Object 
     - parameter xEmbarcaderoApplicationId: (header)  (optional)
     - parameter xEmbarcaderoAppSecret: (header)  (optional)
     - parameter xEmbarcaderoMasterSecret: (header)  (optional)
     - returns: RequestBuilder<Void> 
     */
    open class func patchResourceEndpointWithRequestBuilder(mname: String, rname: String, body: Any, xEmbarcaderoApplicationId: String? = nil, xEmbarcaderoAppSecret: String? = nil, xEmbarcaderoMasterSecret: String? = nil) -> RequestBuilder<Void> {
        var path = "/edgemodules/{mname}/{rname}"
        let mnamePreEscape = "\(mname)"
        let mnamePostEscape = mnamePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{mname}", with: mnamePostEscape, options: .literal, range: nil)
        let rnamePreEscape = "\(rname)"
        let rnamePostEscape = rnamePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{rname}", with: rnamePostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = body.encodeToJSON()

        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "X-Embarcadero-Application-Id": xEmbarcaderoApplicationId,
            "X-Embarcadero-App-Secret": xEmbarcaderoAppSecret,
            "X-Embarcadero-Master-Secret": xEmbarcaderoMasterSecret
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true, headers: headerParameters)
    }

    /**
     Invoke Resource/_* Patch Method
     - parameter mname: (path) Is the EMS EdgeModule name 
     - parameter rname: (path) Is the unique EMS EdgeModule Resource name 
     - parameter wildcard: (path) Is the Wild card part of the URL 
     - parameter body: (body) Body Object 
     - parameter xEmbarcaderoApplicationId: (header)  (optional)
     - parameter xEmbarcaderoAppSecret: (header)  (optional)
     - parameter xEmbarcaderoMasterSecret: (header)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func patchResourceEndpointItem(mname: String, rname: String, wildcard: String, body: Any, xEmbarcaderoApplicationId: String? = nil, xEmbarcaderoAppSecret: String? = nil, xEmbarcaderoMasterSecret: String? = nil, completion: @escaping ((_ error: ErrorResponse?) -> Void)) {
        patchResourceEndpointItemWithRequestBuilder(mname: mname, rname: rname, wildcard: wildcard, body: body, xEmbarcaderoApplicationId: xEmbarcaderoApplicationId, xEmbarcaderoAppSecret: xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret: xEmbarcaderoMasterSecret).execute { (response, error) -> Void in
            completion(error)
        }
    }


    /**
     Invoke Resource/_* Patch Method
     - PATCH /edgemodules/{mname}/{rname}/{wildcard}
     - Used to invoke the PATCH method of the resource from an existing EMS EdgeModule.

     - parameter mname: (path) Is the EMS EdgeModule name 
     - parameter rname: (path) Is the unique EMS EdgeModule Resource name 
     - parameter wildcard: (path) Is the Wild card part of the URL 
     - parameter body: (body) Body Object 
     - parameter xEmbarcaderoApplicationId: (header)  (optional)
     - parameter xEmbarcaderoAppSecret: (header)  (optional)
     - parameter xEmbarcaderoMasterSecret: (header)  (optional)
     - returns: RequestBuilder<Void> 
     */
    open class func patchResourceEndpointItemWithRequestBuilder(mname: String, rname: String, wildcard: String, body: Any, xEmbarcaderoApplicationId: String? = nil, xEmbarcaderoAppSecret: String? = nil, xEmbarcaderoMasterSecret: String? = nil) -> RequestBuilder<Void> {
        var path = "/edgemodules/{mname}/{rname}/{wildcard}"
        let mnamePreEscape = "\(mname)"
        let mnamePostEscape = mnamePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{mname}", with: mnamePostEscape, options: .literal, range: nil)
        let rnamePreEscape = "\(rname)"
        let rnamePostEscape = rnamePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{rname}", with: rnamePostEscape, options: .literal, range: nil)
        let wildcardPreEscape = "\(wildcard)"
        let wildcardPostEscape = wildcardPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{wildcard}", with: wildcardPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = body.encodeToJSON()

        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "X-Embarcadero-Application-Id": xEmbarcaderoApplicationId,
            "X-Embarcadero-App-Secret": xEmbarcaderoAppSecret,
            "X-Embarcadero-Master-Secret": xEmbarcaderoMasterSecret
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true, headers: headerParameters)
    }

    /**
     Invoke Resource Post Method
     - parameter mname: (path) Is the EMS EdgeModule name 
     - parameter rname: (path) Is the unique EMS EdgeModule Resource name 
     - parameter body: (body) Body Object 
     - parameter xEmbarcaderoApplicationId: (header)  (optional)
     - parameter xEmbarcaderoAppSecret: (header)  (optional)
     - parameter xEmbarcaderoMasterSecret: (header)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postResourceEndpoint(mname: String, rname: String, body: Any, xEmbarcaderoApplicationId: String? = nil, xEmbarcaderoAppSecret: String? = nil, xEmbarcaderoMasterSecret: String? = nil, completion: @escaping ((_ error: ErrorResponse?) -> Void)) {
        postResourceEndpointWithRequestBuilder(mname: mname, rname: rname, body: body, xEmbarcaderoApplicationId: xEmbarcaderoApplicationId, xEmbarcaderoAppSecret: xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret: xEmbarcaderoMasterSecret).execute { (response, error) -> Void in
            completion(error)
        }
    }


    /**
     Invoke Resource Post Method
     - POST /edgemodules/{mname}/{rname}
     - Used to invoke the POST method of the resource from an existing EMS EdgeModule.

     - parameter mname: (path) Is the EMS EdgeModule name 
     - parameter rname: (path) Is the unique EMS EdgeModule Resource name 
     - parameter body: (body) Body Object 
     - parameter xEmbarcaderoApplicationId: (header)  (optional)
     - parameter xEmbarcaderoAppSecret: (header)  (optional)
     - parameter xEmbarcaderoMasterSecret: (header)  (optional)
     - returns: RequestBuilder<Void> 
     */
    open class func postResourceEndpointWithRequestBuilder(mname: String, rname: String, body: Any, xEmbarcaderoApplicationId: String? = nil, xEmbarcaderoAppSecret: String? = nil, xEmbarcaderoMasterSecret: String? = nil) -> RequestBuilder<Void> {
        var path = "/edgemodules/{mname}/{rname}"
        let mnamePreEscape = "\(mname)"
        let mnamePostEscape = mnamePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{mname}", with: mnamePostEscape, options: .literal, range: nil)
        let rnamePreEscape = "\(rname)"
        let rnamePostEscape = rnamePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{rname}", with: rnamePostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = body.encodeToJSON()

        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "X-Embarcadero-Application-Id": xEmbarcaderoApplicationId,
            "X-Embarcadero-App-Secret": xEmbarcaderoAppSecret,
            "X-Embarcadero-Master-Secret": xEmbarcaderoMasterSecret
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true, headers: headerParameters)
    }

    /**
     Invoke Resource/_* Post Method
     - parameter mname: (path) Is the EMS EdgeModule name 
     - parameter rname: (path) Is the unique EMS EdgeModule Resource name 
     - parameter wildcard: (path) Is the Wild card part of the URL 
     - parameter body: (body) Body Object 
     - parameter xEmbarcaderoApplicationId: (header)  (optional)
     - parameter xEmbarcaderoAppSecret: (header)  (optional)
     - parameter xEmbarcaderoMasterSecret: (header)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postResourceEndpointItem(mname: String, rname: String, wildcard: String, body: Any, xEmbarcaderoApplicationId: String? = nil, xEmbarcaderoAppSecret: String? = nil, xEmbarcaderoMasterSecret: String? = nil, completion: @escaping ((_ error: ErrorResponse?) -> Void)) {
        postResourceEndpointItemWithRequestBuilder(mname: mname, rname: rname, wildcard: wildcard, body: body, xEmbarcaderoApplicationId: xEmbarcaderoApplicationId, xEmbarcaderoAppSecret: xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret: xEmbarcaderoMasterSecret).execute { (response, error) -> Void in
            completion(error)
        }
    }


    /**
     Invoke Resource/_* Post Method
     - POST /edgemodules/{mname}/{rname}/{wildcard}
     - Used to invoke the POST method of the resource from an existing EMS EdgeModule.

     - parameter mname: (path) Is the EMS EdgeModule name 
     - parameter rname: (path) Is the unique EMS EdgeModule Resource name 
     - parameter wildcard: (path) Is the Wild card part of the URL 
     - parameter body: (body) Body Object 
     - parameter xEmbarcaderoApplicationId: (header)  (optional)
     - parameter xEmbarcaderoAppSecret: (header)  (optional)
     - parameter xEmbarcaderoMasterSecret: (header)  (optional)
     - returns: RequestBuilder<Void> 
     */
    open class func postResourceEndpointItemWithRequestBuilder(mname: String, rname: String, wildcard: String, body: Any, xEmbarcaderoApplicationId: String? = nil, xEmbarcaderoAppSecret: String? = nil, xEmbarcaderoMasterSecret: String? = nil) -> RequestBuilder<Void> {
        var path = "/edgemodules/{mname}/{rname}/{wildcard}"
        let mnamePreEscape = "\(mname)"
        let mnamePostEscape = mnamePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{mname}", with: mnamePostEscape, options: .literal, range: nil)
        let rnamePreEscape = "\(rname)"
        let rnamePostEscape = rnamePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{rname}", with: rnamePostEscape, options: .literal, range: nil)
        let wildcardPreEscape = "\(wildcard)"
        let wildcardPostEscape = wildcardPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{wildcard}", with: wildcardPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = body.encodeToJSON()

        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "X-Embarcadero-Application-Id": xEmbarcaderoApplicationId,
            "X-Embarcadero-App-Secret": xEmbarcaderoAppSecret,
            "X-Embarcadero-Master-Secret": xEmbarcaderoMasterSecret
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true, headers: headerParameters)
    }

    /**
     Invoke Resource Put Method
     - parameter mname: (path) Is the EMS EdgeModule name 
     - parameter rname: (path) Is the unique EMS EdgeModule Resource name 
     - parameter body: (body) Body Object 
     - parameter xEmbarcaderoApplicationId: (header)  (optional)
     - parameter xEmbarcaderoAppSecret: (header)  (optional)
     - parameter xEmbarcaderoMasterSecret: (header)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func putResourceEndpoint(mname: String, rname: String, body: Any, xEmbarcaderoApplicationId: String? = nil, xEmbarcaderoAppSecret: String? = nil, xEmbarcaderoMasterSecret: String? = nil, completion: @escaping ((_ error: ErrorResponse?) -> Void)) {
        putResourceEndpointWithRequestBuilder(mname: mname, rname: rname, body: body, xEmbarcaderoApplicationId: xEmbarcaderoApplicationId, xEmbarcaderoAppSecret: xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret: xEmbarcaderoMasterSecret).execute { (response, error) -> Void in
            completion(error)
        }
    }


    /**
     Invoke Resource Put Method
     - PUT /edgemodules/{mname}/{rname}
     - Used to invoke the PUT method of the resource from an existing EMS EdgeModule.

     - parameter mname: (path) Is the EMS EdgeModule name 
     - parameter rname: (path) Is the unique EMS EdgeModule Resource name 
     - parameter body: (body) Body Object 
     - parameter xEmbarcaderoApplicationId: (header)  (optional)
     - parameter xEmbarcaderoAppSecret: (header)  (optional)
     - parameter xEmbarcaderoMasterSecret: (header)  (optional)
     - returns: RequestBuilder<Void> 
     */
    open class func putResourceEndpointWithRequestBuilder(mname: String, rname: String, body: Any, xEmbarcaderoApplicationId: String? = nil, xEmbarcaderoAppSecret: String? = nil, xEmbarcaderoMasterSecret: String? = nil) -> RequestBuilder<Void> {
        var path = "/edgemodules/{mname}/{rname}"
        let mnamePreEscape = "\(mname)"
        let mnamePostEscape = mnamePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{mname}", with: mnamePostEscape, options: .literal, range: nil)
        let rnamePreEscape = "\(rname)"
        let rnamePostEscape = rnamePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{rname}", with: rnamePostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = body.encodeToJSON()

        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "X-Embarcadero-Application-Id": xEmbarcaderoApplicationId,
            "X-Embarcadero-App-Secret": xEmbarcaderoAppSecret,
            "X-Embarcadero-Master-Secret": xEmbarcaderoMasterSecret
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true, headers: headerParameters)
    }

    /**
     Invoke Resource/_* Put Method
     - parameter mname: (path) Is the EMS EdgeModule name 
     - parameter rname: (path) Is the unique EMS EdgeModule Resource name 
     - parameter wildcard: (path) Is the Wild card part of the URL 
     - parameter body: (body) Body Object 
     - parameter xEmbarcaderoApplicationId: (header)  (optional)
     - parameter xEmbarcaderoAppSecret: (header)  (optional)
     - parameter xEmbarcaderoMasterSecret: (header)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func putResourceEndpointItem(mname: String, rname: String, wildcard: String, body: Any, xEmbarcaderoApplicationId: String? = nil, xEmbarcaderoAppSecret: String? = nil, xEmbarcaderoMasterSecret: String? = nil, completion: @escaping ((_ error: ErrorResponse?) -> Void)) {
        putResourceEndpointItemWithRequestBuilder(mname: mname, rname: rname, wildcard: wildcard, body: body, xEmbarcaderoApplicationId: xEmbarcaderoApplicationId, xEmbarcaderoAppSecret: xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret: xEmbarcaderoMasterSecret).execute { (response, error) -> Void in
            completion(error)
        }
    }


    /**
     Invoke Resource/_* Put Method
     - PUT /edgemodules/{mname}/{rname}/{wildcard}
     - Used to invoke the PUT method of the resource from an existing EMS EdgeModule.

     - parameter mname: (path) Is the EMS EdgeModule name 
     - parameter rname: (path) Is the unique EMS EdgeModule Resource name 
     - parameter wildcard: (path) Is the Wild card part of the URL 
     - parameter body: (body) Body Object 
     - parameter xEmbarcaderoApplicationId: (header)  (optional)
     - parameter xEmbarcaderoAppSecret: (header)  (optional)
     - parameter xEmbarcaderoMasterSecret: (header)  (optional)
     - returns: RequestBuilder<Void> 
     */
    open class func putResourceEndpointItemWithRequestBuilder(mname: String, rname: String, wildcard: String, body: Any, xEmbarcaderoApplicationId: String? = nil, xEmbarcaderoAppSecret: String? = nil, xEmbarcaderoMasterSecret: String? = nil) -> RequestBuilder<Void> {
        var path = "/edgemodules/{mname}/{rname}/{wildcard}"
        let mnamePreEscape = "\(mname)"
        let mnamePostEscape = mnamePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{mname}", with: mnamePostEscape, options: .literal, range: nil)
        let rnamePreEscape = "\(rname)"
        let rnamePostEscape = rnamePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{rname}", with: rnamePostEscape, options: .literal, range: nil)
        let wildcardPreEscape = "\(wildcard)"
        let wildcardPostEscape = wildcardPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{wildcard}", with: wildcardPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = body.encodeToJSON()

        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "X-Embarcadero-Application-Id": xEmbarcaderoApplicationId,
            "X-Embarcadero-App-Secret": xEmbarcaderoAppSecret,
            "X-Embarcadero-Master-Secret": xEmbarcaderoMasterSecret
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true, headers: headerParameters)
    }

}
