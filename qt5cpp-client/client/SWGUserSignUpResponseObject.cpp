/**
 * EMS API Documentation
 * Enterprise Mobility Services API      [Learn about EMS](https://www.embarcadero.com/products/rad-studio/enterprise-mobility-services)      EMS (Enterprise Mobility Services) offers a Mobile Enterprise Application Platform (MEAP)      TurnKey Middleware for Interconnected Distributed Apps
 *
 * OpenAPI spec version: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "SWGUserSignUpResponseObject.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {

SWGUserSignUpResponseObject::SWGUserSignUpResponseObject(QString json) {
    init();
    this->fromJson(json);
}

SWGUserSignUpResponseObject::SWGUserSignUpResponseObject() {
    init();
}

SWGUserSignUpResponseObject::~SWGUserSignUpResponseObject() {
    this->cleanup();
}

void
SWGUserSignUpResponseObject::init() {
    _id = new QString("");
    m__id_isSet = false;
    session_token = new QString("");
    m_session_token_isSet = false;
}

void
SWGUserSignUpResponseObject::cleanup() {
    if(_id != nullptr) { 
        delete _id;
    }
    if(session_token != nullptr) { 
        delete session_token;
    }
}

SWGUserSignUpResponseObject*
SWGUserSignUpResponseObject::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGUserSignUpResponseObject::fromJsonObject(QJsonObject pJson) {
    ::Swagger::setValue(&_id, pJson["_id"], "QString", "QString");
    
    ::Swagger::setValue(&session_token, pJson["sessionToken"], "QString", "QString");
    
}

QString
SWGUserSignUpResponseObject::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
SWGUserSignUpResponseObject::asJsonObject() {
    QJsonObject obj;
    if(_id != nullptr && *_id != QString("")){
        toJsonValue(QString("_id"), _id, obj, QString("QString"));
    }
    if(session_token != nullptr && *session_token != QString("")){
        toJsonValue(QString("sessionToken"), session_token, obj, QString("QString"));
    }

    return obj;
}

QString*
SWGUserSignUpResponseObject::getId() {
    return _id;
}
void
SWGUserSignUpResponseObject::setId(QString* _id) {
    this->_id = _id;
    this->m__id_isSet = true;
}

QString*
SWGUserSignUpResponseObject::getSessionToken() {
    return session_token;
}
void
SWGUserSignUpResponseObject::setSessionToken(QString* session_token) {
    this->session_token = session_token;
    this->m_session_token_isSet = true;
}


bool
SWGUserSignUpResponseObject::isSet(){
    bool isObjectUpdated = false;
    do{
        if(_id != nullptr && *_id != QString("")){ isObjectUpdated = true; break;}
        if(session_token != nullptr && *session_token != QString("")){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

