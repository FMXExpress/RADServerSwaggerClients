/**
 * EMS API Documentation
 * Enterprise Mobility Services API      [Learn about EMS](https://www.embarcadero.com/products/rad-studio/enterprise-mobility-services)      EMS (Enterprise Mobility Services) offers a Mobile Enterprise Application Platform (MEAP)      TurnKey Middleware for Interconnected Distributed Apps
 *
 * OpenAPI spec version: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "SWGGroupAddObject.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {

SWGGroupAddObject::SWGGroupAddObject(QString json) {
    init();
    this->fromJson(json);
}

SWGGroupAddObject::SWGGroupAddObject() {
    init();
}

SWGGroupAddObject::~SWGGroupAddObject() {
    this->cleanup();
}

void
SWGGroupAddObject::init() {
    groupname = new QString("");
    m_groupname_isSet = false;
}

void
SWGGroupAddObject::cleanup() {
    if(groupname != nullptr) { 
        delete groupname;
    }
}

SWGGroupAddObject*
SWGGroupAddObject::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGGroupAddObject::fromJsonObject(QJsonObject pJson) {
    ::Swagger::setValue(&groupname, pJson["groupname"], "QString", "QString");
    
}

QString
SWGGroupAddObject::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
SWGGroupAddObject::asJsonObject() {
    QJsonObject obj;
    if(groupname != nullptr && *groupname != QString("")){
        toJsonValue(QString("groupname"), groupname, obj, QString("QString"));
    }

    return obj;
}

QString*
SWGGroupAddObject::getGroupname() {
    return groupname;
}
void
SWGGroupAddObject::setGroupname(QString* groupname) {
    this->groupname = groupname;
    this->m_groupname_isSet = true;
}


bool
SWGGroupAddObject::isSet(){
    bool isObjectUpdated = false;
    do{
        if(groupname != nullptr && *groupname != QString("")){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

