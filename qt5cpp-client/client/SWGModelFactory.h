/**
 * EMS API Documentation
 * Enterprise Mobility Services API      [Learn about EMS](https://www.embarcadero.com/products/rad-studio/enterprise-mobility-services)      EMS (Enterprise Mobility Services) offers a Mobile Enterprise Application Platform (MEAP)      TurnKey Middleware for Interconnected Distributed Apps
 *
 * OpenAPI spec version: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

#ifndef ModelFactory_H_
#define ModelFactory_H_

#include "SWGObject.h"

#include "SWGChannelName.h"
#include "SWGEdgeModuleAddObject.h"
#include "SWGEdgeModuleAddedObject.h"
#include "SWGEdgeModuleObject.h"
#include "SWGEdgeModuleResourceAddObject.h"
#include "SWGEdgeModuleResourceAddedObject.h"
#include "SWGEdgeModuleResourceObject.h"
#include "SWGEdgeModuleResourceUpdateObject.h"
#include "SWGEdgeModuleResourceUpdatedObject.h"
#include "SWGEdgeModuleUpdateObject.h"
#include "SWGEdgeModuleUpdatedObject.h"
#include "SWGFieldGroupObject.h"
#include "SWGFieldInstallationObject.h"
#include "SWGFieldObject.h"
#include "SWGFieldObject_fields.h"
#include "SWGFieldsEdgeModuleObject.h"
#include "SWGGroupAddObject.h"
#include "SWGGroupName.h"
#include "SWGGroupObject.h"
#include "SWGInstallationAddObject.h"
#include "SWGInstallationAddedObject.h"
#include "SWGInstallationObject.h"
#include "SWGPushDataObject.h"
#include "SWGPushDataObject_aps.h"
#include "SWGPushDataObject_extras.h"
#include "SWGPushDataObject_gcm.h"
#include "SWGPushObject.h"
#include "SWGPushWhereObject.h"
#include "SWGPushWhereObject_deviceToken.h"
#include "SWGUpdateGroupObject.h"
#include "SWGUpdateInstallationObject.h"
#include "SWGUpdateObject.h"
#include "SWGUpdatedGroupObject.h"
#include "SWGUpdatedInstallationObject.h"
#include "SWGUpdatedObject.h"
#include "SWGUserCredentialsObject.h"
#include "SWGUserObject.h"
#include "SWGUserSignUpResponseObject.h"
#include "SWGUserTokenObject.h"
#include "SWGUseridObject.h"
#include "SWGVersionObject.h"
#include "SWG_metaEdgeModuleObject.h"
#include "SWG_metaGroupObject.h"
#include "SWG_metaInstallationObject.h"
#include "SWG_metaObject.h"

namespace Swagger {

  inline void* create(QString type) {
    if(QString("SWGChannelName").compare(type) == 0) {
      return new SWGChannelName();
    }
    if(QString("SWGEdgeModuleAddObject").compare(type) == 0) {
      return new SWGEdgeModuleAddObject();
    }
    if(QString("SWGEdgeModuleAddedObject").compare(type) == 0) {
      return new SWGEdgeModuleAddedObject();
    }
    if(QString("SWGEdgeModuleObject").compare(type) == 0) {
      return new SWGEdgeModuleObject();
    }
    if(QString("SWGEdgeModuleResourceAddObject").compare(type) == 0) {
      return new SWGEdgeModuleResourceAddObject();
    }
    if(QString("SWGEdgeModuleResourceAddedObject").compare(type) == 0) {
      return new SWGEdgeModuleResourceAddedObject();
    }
    if(QString("SWGEdgeModuleResourceObject").compare(type) == 0) {
      return new SWGEdgeModuleResourceObject();
    }
    if(QString("SWGEdgeModuleResourceUpdateObject").compare(type) == 0) {
      return new SWGEdgeModuleResourceUpdateObject();
    }
    if(QString("SWGEdgeModuleResourceUpdatedObject").compare(type) == 0) {
      return new SWGEdgeModuleResourceUpdatedObject();
    }
    if(QString("SWGEdgeModuleUpdateObject").compare(type) == 0) {
      return new SWGEdgeModuleUpdateObject();
    }
    if(QString("SWGEdgeModuleUpdatedObject").compare(type) == 0) {
      return new SWGEdgeModuleUpdatedObject();
    }
    if(QString("SWGFieldGroupObject").compare(type) == 0) {
      return new SWGFieldGroupObject();
    }
    if(QString("SWGFieldInstallationObject").compare(type) == 0) {
      return new SWGFieldInstallationObject();
    }
    if(QString("SWGFieldObject").compare(type) == 0) {
      return new SWGFieldObject();
    }
    if(QString("SWGFieldObject_fields").compare(type) == 0) {
      return new SWGFieldObject_fields();
    }
    if(QString("SWGFieldsEdgeModuleObject").compare(type) == 0) {
      return new SWGFieldsEdgeModuleObject();
    }
    if(QString("SWGGroupAddObject").compare(type) == 0) {
      return new SWGGroupAddObject();
    }
    if(QString("SWGGroupName").compare(type) == 0) {
      return new SWGGroupName();
    }
    if(QString("SWGGroupObject").compare(type) == 0) {
      return new SWGGroupObject();
    }
    if(QString("SWGInstallationAddObject").compare(type) == 0) {
      return new SWGInstallationAddObject();
    }
    if(QString("SWGInstallationAddedObject").compare(type) == 0) {
      return new SWGInstallationAddedObject();
    }
    if(QString("SWGInstallationObject").compare(type) == 0) {
      return new SWGInstallationObject();
    }
    if(QString("SWGPushDataObject").compare(type) == 0) {
      return new SWGPushDataObject();
    }
    if(QString("SWGPushDataObject_aps").compare(type) == 0) {
      return new SWGPushDataObject_aps();
    }
    if(QString("SWGPushDataObject_extras").compare(type) == 0) {
      return new SWGPushDataObject_extras();
    }
    if(QString("SWGPushDataObject_gcm").compare(type) == 0) {
      return new SWGPushDataObject_gcm();
    }
    if(QString("SWGPushObject").compare(type) == 0) {
      return new SWGPushObject();
    }
    if(QString("SWGPushWhereObject").compare(type) == 0) {
      return new SWGPushWhereObject();
    }
    if(QString("SWGPushWhereObject_deviceToken").compare(type) == 0) {
      return new SWGPushWhereObject_deviceToken();
    }
    if(QString("SWGUpdateGroupObject").compare(type) == 0) {
      return new SWGUpdateGroupObject();
    }
    if(QString("SWGUpdateInstallationObject").compare(type) == 0) {
      return new SWGUpdateInstallationObject();
    }
    if(QString("SWGUpdateObject").compare(type) == 0) {
      return new SWGUpdateObject();
    }
    if(QString("SWGUpdatedGroupObject").compare(type) == 0) {
      return new SWGUpdatedGroupObject();
    }
    if(QString("SWGUpdatedInstallationObject").compare(type) == 0) {
      return new SWGUpdatedInstallationObject();
    }
    if(QString("SWGUpdatedObject").compare(type) == 0) {
      return new SWGUpdatedObject();
    }
    if(QString("SWGUserCredentialsObject").compare(type) == 0) {
      return new SWGUserCredentialsObject();
    }
    if(QString("SWGUserObject").compare(type) == 0) {
      return new SWGUserObject();
    }
    if(QString("SWGUserSignUpResponseObject").compare(type) == 0) {
      return new SWGUserSignUpResponseObject();
    }
    if(QString("SWGUserTokenObject").compare(type) == 0) {
      return new SWGUserTokenObject();
    }
    if(QString("SWGUseridObject").compare(type) == 0) {
      return new SWGUseridObject();
    }
    if(QString("SWGVersionObject").compare(type) == 0) {
      return new SWGVersionObject();
    }
    if(QString("SWG_metaEdgeModuleObject").compare(type) == 0) {
      return new SWG_metaEdgeModuleObject();
    }
    if(QString("SWG_metaGroupObject").compare(type) == 0) {
      return new SWG_metaGroupObject();
    }
    if(QString("SWG_metaInstallationObject").compare(type) == 0) {
      return new SWG_metaInstallationObject();
    }
    if(QString("SWG_metaObject").compare(type) == 0) {
      return new SWG_metaObject();
    }
    
    return nullptr;
  }

  inline void* create(QString json, QString type) {
    if(type.startsWith("QString")) {
      return new QString();
    }    
    auto val = static_cast<SWGObject*>(create(type));
    if(val != nullptr) {
      return val->fromJson(json);
    }
    return nullptr;
  }

}

#endif /* ModelFactory_H_ */
