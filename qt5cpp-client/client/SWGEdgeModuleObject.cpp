/**
 * EMS API Documentation
 * Enterprise Mobility Services API      [Learn about EMS](https://www.embarcadero.com/products/rad-studio/enterprise-mobility-services)      EMS (Enterprise Mobility Services) offers a Mobile Enterprise Application Platform (MEAP)      TurnKey Middleware for Interconnected Distributed Apps
 *
 * OpenAPI spec version: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "SWGEdgeModuleObject.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {

SWGEdgeModuleObject::SWGEdgeModuleObject(QString json) {
    init();
    this->fromJson(json);
}

SWGEdgeModuleObject::SWGEdgeModuleObject() {
    init();
}

SWGEdgeModuleObject::~SWGEdgeModuleObject() {
    this->cleanup();
}

void
SWGEdgeModuleObject::init() {
    modulename = new QString("");
    m_modulename_isSet = false;
    _id = new QString("");
    m__id_isSet = false;
    protocol = new QString("");
    m_protocol_isSet = false;
    protocolprops = new QString("");
    m_protocolprops_isSet = false;
    _meta = new SWG_metaEdgeModuleObject();
    m__meta_isSet = false;
}

void
SWGEdgeModuleObject::cleanup() {
    if(modulename != nullptr) { 
        delete modulename;
    }
    if(_id != nullptr) { 
        delete _id;
    }
    if(protocol != nullptr) { 
        delete protocol;
    }
    if(protocolprops != nullptr) { 
        delete protocolprops;
    }
    if(_meta != nullptr) { 
        delete _meta;
    }
}

SWGEdgeModuleObject*
SWGEdgeModuleObject::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGEdgeModuleObject::fromJsonObject(QJsonObject pJson) {
    ::Swagger::setValue(&modulename, pJson["modulename"], "QString", "QString");
    
    ::Swagger::setValue(&_id, pJson["_id"], "QString", "QString");
    
    ::Swagger::setValue(&protocol, pJson["protocol"], "QString", "QString");
    
    ::Swagger::setValue(&protocolprops, pJson["protocolprops"], "QString", "QString");
    
    ::Swagger::setValue(&_meta, pJson["_meta"], "SWG_metaEdgeModuleObject", "SWG_metaEdgeModuleObject");
    
}

QString
SWGEdgeModuleObject::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
SWGEdgeModuleObject::asJsonObject() {
    QJsonObject obj;
    if(modulename != nullptr && *modulename != QString("")){
        toJsonValue(QString("modulename"), modulename, obj, QString("QString"));
    }
    if(_id != nullptr && *_id != QString("")){
        toJsonValue(QString("_id"), _id, obj, QString("QString"));
    }
    if(protocol != nullptr && *protocol != QString("")){
        toJsonValue(QString("protocol"), protocol, obj, QString("QString"));
    }
    if(protocolprops != nullptr && *protocolprops != QString("")){
        toJsonValue(QString("protocolprops"), protocolprops, obj, QString("QString"));
    }
    if((_meta != nullptr) && (_meta->isSet())){
        toJsonValue(QString("_meta"), _meta, obj, QString("SWG_metaEdgeModuleObject"));
    }

    return obj;
}

QString*
SWGEdgeModuleObject::getModulename() {
    return modulename;
}
void
SWGEdgeModuleObject::setModulename(QString* modulename) {
    this->modulename = modulename;
    this->m_modulename_isSet = true;
}

QString*
SWGEdgeModuleObject::getId() {
    return _id;
}
void
SWGEdgeModuleObject::setId(QString* _id) {
    this->_id = _id;
    this->m__id_isSet = true;
}

QString*
SWGEdgeModuleObject::getProtocol() {
    return protocol;
}
void
SWGEdgeModuleObject::setProtocol(QString* protocol) {
    this->protocol = protocol;
    this->m_protocol_isSet = true;
}

QString*
SWGEdgeModuleObject::getProtocolprops() {
    return protocolprops;
}
void
SWGEdgeModuleObject::setProtocolprops(QString* protocolprops) {
    this->protocolprops = protocolprops;
    this->m_protocolprops_isSet = true;
}

SWG_metaEdgeModuleObject*
SWGEdgeModuleObject::getMeta() {
    return _meta;
}
void
SWGEdgeModuleObject::setMeta(SWG_metaEdgeModuleObject* _meta) {
    this->_meta = _meta;
    this->m__meta_isSet = true;
}


bool
SWGEdgeModuleObject::isSet(){
    bool isObjectUpdated = false;
    do{
        if(modulename != nullptr && *modulename != QString("")){ isObjectUpdated = true; break;}
        if(_id != nullptr && *_id != QString("")){ isObjectUpdated = true; break;}
        if(protocol != nullptr && *protocol != QString("")){ isObjectUpdated = true; break;}
        if(protocolprops != nullptr && *protocolprops != QString("")){ isObjectUpdated = true; break;}
        if(_meta != nullptr && _meta->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

