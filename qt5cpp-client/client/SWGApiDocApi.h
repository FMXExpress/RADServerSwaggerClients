/**
 * EMS API Documentation
 * Enterprise Mobility Services API      [Learn about EMS](https://www.embarcadero.com/products/rad-studio/enterprise-mobility-services)      EMS (Enterprise Mobility Services) offers a Mobile Enterprise Application Platform (MEAP)      TurnKey Middleware for Interconnected Distributed Apps
 *
 * OpenAPI spec version: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

#ifndef _SWG_SWGApiDocApi_H_
#define _SWG_SWGApiDocApi_H_

#include "SWGHttpRequest.h"

#include <QString>

#include <QObject>

namespace Swagger {

class SWGApiDocApi: public QObject {
    Q_OBJECT

public:
    SWGApiDocApi();
    SWGApiDocApi(QString host, QString basePath);
    ~SWGApiDocApi();

    QString host;
    QString basePath;
    QMap<QString, QString> defaultHeaders;

    void aPI(QString* x_embarcadero_application_id, QString* x_embarcadero_app_secret, QString* x_embarcadero_master_secret);
    void getAPIJSONFormat(QString* x_embarcadero_application_id, QString* x_embarcadero_app_secret, QString* x_embarcadero_master_secret);
    void getAPIYAMLFormat(QString* x_embarcadero_application_id, QString* x_embarcadero_app_secret, QString* x_embarcadero_master_secret);
    void getAPIYAMLFormat_EndPoint(QString* item, QString* x_embarcadero_application_id, QString* x_embarcadero_app_secret, QString* x_embarcadero_master_secret);
    
private:
    void aPICallback (SWGHttpRequestWorker * worker);
    void getAPIJSONFormatCallback (SWGHttpRequestWorker * worker);
    void getAPIYAMLFormatCallback (SWGHttpRequestWorker * worker);
    void getAPIYAMLFormat_EndPointCallback (SWGHttpRequestWorker * worker);
    
signals:
    void aPISignal();
    void getAPIJSONFormatSignal();
    void getAPIYAMLFormatSignal();
    void getAPIYAMLFormat_EndPointSignal();
    
    void aPISignalE(QNetworkReply::NetworkError error_type, QString& error_str);
    void getAPIJSONFormatSignalE(QNetworkReply::NetworkError error_type, QString& error_str);
    void getAPIYAMLFormatSignalE(QNetworkReply::NetworkError error_type, QString& error_str);
    void getAPIYAMLFormat_EndPointSignalE(QNetworkReply::NetworkError error_type, QString& error_str);
    
    void aPISignalEFull(SWGHttpRequestWorker* worker, QNetworkReply::NetworkError error_type, QString& error_str);
    void getAPIJSONFormatSignalEFull(SWGHttpRequestWorker* worker, QNetworkReply::NetworkError error_type, QString& error_str);
    void getAPIYAMLFormatSignalEFull(SWGHttpRequestWorker* worker, QNetworkReply::NetworkError error_type, QString& error_str);
    void getAPIYAMLFormat_EndPointSignalEFull(SWGHttpRequestWorker* worker, QNetworkReply::NetworkError error_type, QString& error_str);
    
};

}
#endif
