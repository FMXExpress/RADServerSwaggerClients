/*
 * EMS API Documentation
 * Enterprise Mobility Services API      [Learn about EMS](https://www.embarcadero.com/products/rad-studio/enterprise-mobility-services)      EMS (Enterprise Mobility Services) offers a Mobile Enterprise Application Platform (MEAP)      TurnKey Middleware for Interconnected Distributed Apps
 *
 * OpenAPI spec version: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiCallback;
import io.swagger.client.ApiClient;
import io.swagger.client.ApiException;
import io.swagger.client.ApiResponse;
import io.swagger.client.Configuration;
import io.swagger.client.Pair;
import io.swagger.client.ProgressRequestBody;
import io.swagger.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;



import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class EdgeModulesInvokersApi {
    private ApiClient apiClient;

    public EdgeModulesInvokersApi() {
        this(Configuration.getDefaultApiClient());
    }

    public EdgeModulesInvokersApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for deleteResourceEndpoint
     * @param mname Is the EMS EdgeModule name (required)
     * @param rname Is the unique EMS EdgeModule Resource name (required)
     * @param xEmbarcaderoApplicationId  (optional)
     * @param xEmbarcaderoAppSecret  (optional)
     * @param xEmbarcaderoMasterSecret  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call deleteResourceEndpointCall(String mname, String rname, String xEmbarcaderoApplicationId, String xEmbarcaderoAppSecret, String xEmbarcaderoMasterSecret, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/edgemodules/{mname}/{rname}"
            .replaceAll("\\{" + "mname" + "\\}", apiClient.escapeString(mname.toString()))
            .replaceAll("\\{" + "rname" + "\\}", apiClient.escapeString(rname.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (xEmbarcaderoApplicationId != null)
        localVarHeaderParams.put("X-Embarcadero-Application-Id", apiClient.parameterToString(xEmbarcaderoApplicationId));
        if (xEmbarcaderoAppSecret != null)
        localVarHeaderParams.put("X-Embarcadero-App-Secret", apiClient.parameterToString(xEmbarcaderoAppSecret));
        if (xEmbarcaderoMasterSecret != null)
        localVarHeaderParams.put("X-Embarcadero-Master-Secret", apiClient.parameterToString(xEmbarcaderoMasterSecret));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call deleteResourceEndpointValidateBeforeCall(String mname, String rname, String xEmbarcaderoApplicationId, String xEmbarcaderoAppSecret, String xEmbarcaderoMasterSecret, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'mname' is set
        if (mname == null) {
            throw new ApiException("Missing the required parameter 'mname' when calling deleteResourceEndpoint(Async)");
        }
        
        // verify the required parameter 'rname' is set
        if (rname == null) {
            throw new ApiException("Missing the required parameter 'rname' when calling deleteResourceEndpoint(Async)");
        }
        

        com.squareup.okhttp.Call call = deleteResourceEndpointCall(mname, rname, xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Invoke Resource Delete Method
     * Used to invoke the DELETE method of the resource from an existing EMS EdgeModule.
     * @param mname Is the EMS EdgeModule name (required)
     * @param rname Is the unique EMS EdgeModule Resource name (required)
     * @param xEmbarcaderoApplicationId  (optional)
     * @param xEmbarcaderoAppSecret  (optional)
     * @param xEmbarcaderoMasterSecret  (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void deleteResourceEndpoint(String mname, String rname, String xEmbarcaderoApplicationId, String xEmbarcaderoAppSecret, String xEmbarcaderoMasterSecret) throws ApiException {
        deleteResourceEndpointWithHttpInfo(mname, rname, xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret);
    }

    /**
     * Invoke Resource Delete Method
     * Used to invoke the DELETE method of the resource from an existing EMS EdgeModule.
     * @param mname Is the EMS EdgeModule name (required)
     * @param rname Is the unique EMS EdgeModule Resource name (required)
     * @param xEmbarcaderoApplicationId  (optional)
     * @param xEmbarcaderoAppSecret  (optional)
     * @param xEmbarcaderoMasterSecret  (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> deleteResourceEndpointWithHttpInfo(String mname, String rname, String xEmbarcaderoApplicationId, String xEmbarcaderoAppSecret, String xEmbarcaderoMasterSecret) throws ApiException {
        com.squareup.okhttp.Call call = deleteResourceEndpointValidateBeforeCall(mname, rname, xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret, null, null);
        return apiClient.execute(call);
    }

    /**
     * Invoke Resource Delete Method (asynchronously)
     * Used to invoke the DELETE method of the resource from an existing EMS EdgeModule.
     * @param mname Is the EMS EdgeModule name (required)
     * @param rname Is the unique EMS EdgeModule Resource name (required)
     * @param xEmbarcaderoApplicationId  (optional)
     * @param xEmbarcaderoAppSecret  (optional)
     * @param xEmbarcaderoMasterSecret  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call deleteResourceEndpointAsync(String mname, String rname, String xEmbarcaderoApplicationId, String xEmbarcaderoAppSecret, String xEmbarcaderoMasterSecret, final ApiCallback<Void> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = deleteResourceEndpointValidateBeforeCall(mname, rname, xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret, progressListener, progressRequestListener);
        apiClient.executeAsync(call, callback);
        return call;
    }
    /**
     * Build call for deleteResourceEndpointItem
     * @param mname Is the EMS EdgeModule name (required)
     * @param rname Is the unique EMS EdgeModule Resource name (required)
     * @param wildcard Is the Wild card part of the URL (required)
     * @param xEmbarcaderoApplicationId  (optional)
     * @param xEmbarcaderoAppSecret  (optional)
     * @param xEmbarcaderoMasterSecret  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call deleteResourceEndpointItemCall(String mname, String rname, String wildcard, String xEmbarcaderoApplicationId, String xEmbarcaderoAppSecret, String xEmbarcaderoMasterSecret, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/edgemodules/{mname}/{rname}/{wildcard}"
            .replaceAll("\\{" + "mname" + "\\}", apiClient.escapeString(mname.toString()))
            .replaceAll("\\{" + "rname" + "\\}", apiClient.escapeString(rname.toString()))
            .replaceAll("\\{" + "wildcard" + "\\}", apiClient.escapeString(wildcard.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (xEmbarcaderoApplicationId != null)
        localVarHeaderParams.put("X-Embarcadero-Application-Id", apiClient.parameterToString(xEmbarcaderoApplicationId));
        if (xEmbarcaderoAppSecret != null)
        localVarHeaderParams.put("X-Embarcadero-App-Secret", apiClient.parameterToString(xEmbarcaderoAppSecret));
        if (xEmbarcaderoMasterSecret != null)
        localVarHeaderParams.put("X-Embarcadero-Master-Secret", apiClient.parameterToString(xEmbarcaderoMasterSecret));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call deleteResourceEndpointItemValidateBeforeCall(String mname, String rname, String wildcard, String xEmbarcaderoApplicationId, String xEmbarcaderoAppSecret, String xEmbarcaderoMasterSecret, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'mname' is set
        if (mname == null) {
            throw new ApiException("Missing the required parameter 'mname' when calling deleteResourceEndpointItem(Async)");
        }
        
        // verify the required parameter 'rname' is set
        if (rname == null) {
            throw new ApiException("Missing the required parameter 'rname' when calling deleteResourceEndpointItem(Async)");
        }
        
        // verify the required parameter 'wildcard' is set
        if (wildcard == null) {
            throw new ApiException("Missing the required parameter 'wildcard' when calling deleteResourceEndpointItem(Async)");
        }
        

        com.squareup.okhttp.Call call = deleteResourceEndpointItemCall(mname, rname, wildcard, xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Invoke Resource/_* Delete Method
     * Used to invoke the DELETE method of the resource from an existing EMS EdgeModule.
     * @param mname Is the EMS EdgeModule name (required)
     * @param rname Is the unique EMS EdgeModule Resource name (required)
     * @param wildcard Is the Wild card part of the URL (required)
     * @param xEmbarcaderoApplicationId  (optional)
     * @param xEmbarcaderoAppSecret  (optional)
     * @param xEmbarcaderoMasterSecret  (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void deleteResourceEndpointItem(String mname, String rname, String wildcard, String xEmbarcaderoApplicationId, String xEmbarcaderoAppSecret, String xEmbarcaderoMasterSecret) throws ApiException {
        deleteResourceEndpointItemWithHttpInfo(mname, rname, wildcard, xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret);
    }

    /**
     * Invoke Resource/_* Delete Method
     * Used to invoke the DELETE method of the resource from an existing EMS EdgeModule.
     * @param mname Is the EMS EdgeModule name (required)
     * @param rname Is the unique EMS EdgeModule Resource name (required)
     * @param wildcard Is the Wild card part of the URL (required)
     * @param xEmbarcaderoApplicationId  (optional)
     * @param xEmbarcaderoAppSecret  (optional)
     * @param xEmbarcaderoMasterSecret  (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> deleteResourceEndpointItemWithHttpInfo(String mname, String rname, String wildcard, String xEmbarcaderoApplicationId, String xEmbarcaderoAppSecret, String xEmbarcaderoMasterSecret) throws ApiException {
        com.squareup.okhttp.Call call = deleteResourceEndpointItemValidateBeforeCall(mname, rname, wildcard, xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret, null, null);
        return apiClient.execute(call);
    }

    /**
     * Invoke Resource/_* Delete Method (asynchronously)
     * Used to invoke the DELETE method of the resource from an existing EMS EdgeModule.
     * @param mname Is the EMS EdgeModule name (required)
     * @param rname Is the unique EMS EdgeModule Resource name (required)
     * @param wildcard Is the Wild card part of the URL (required)
     * @param xEmbarcaderoApplicationId  (optional)
     * @param xEmbarcaderoAppSecret  (optional)
     * @param xEmbarcaderoMasterSecret  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call deleteResourceEndpointItemAsync(String mname, String rname, String wildcard, String xEmbarcaderoApplicationId, String xEmbarcaderoAppSecret, String xEmbarcaderoMasterSecret, final ApiCallback<Void> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = deleteResourceEndpointItemValidateBeforeCall(mname, rname, wildcard, xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret, progressListener, progressRequestListener);
        apiClient.executeAsync(call, callback);
        return call;
    }
    /**
     * Build call for getResourceEndpoint
     * @param mname Is the EMS EdgeModule name (required)
     * @param rname Is the unique EMS EdgeModule Resource name (required)
     * @param xEmbarcaderoApplicationId  (optional)
     * @param xEmbarcaderoAppSecret  (optional)
     * @param xEmbarcaderoMasterSecret  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getResourceEndpointCall(String mname, String rname, String xEmbarcaderoApplicationId, String xEmbarcaderoAppSecret, String xEmbarcaderoMasterSecret, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/edgemodules/{mname}/{rname}"
            .replaceAll("\\{" + "mname" + "\\}", apiClient.escapeString(mname.toString()))
            .replaceAll("\\{" + "rname" + "\\}", apiClient.escapeString(rname.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (xEmbarcaderoApplicationId != null)
        localVarHeaderParams.put("X-Embarcadero-Application-Id", apiClient.parameterToString(xEmbarcaderoApplicationId));
        if (xEmbarcaderoAppSecret != null)
        localVarHeaderParams.put("X-Embarcadero-App-Secret", apiClient.parameterToString(xEmbarcaderoAppSecret));
        if (xEmbarcaderoMasterSecret != null)
        localVarHeaderParams.put("X-Embarcadero-Master-Secret", apiClient.parameterToString(xEmbarcaderoMasterSecret));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getResourceEndpointValidateBeforeCall(String mname, String rname, String xEmbarcaderoApplicationId, String xEmbarcaderoAppSecret, String xEmbarcaderoMasterSecret, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'mname' is set
        if (mname == null) {
            throw new ApiException("Missing the required parameter 'mname' when calling getResourceEndpoint(Async)");
        }
        
        // verify the required parameter 'rname' is set
        if (rname == null) {
            throw new ApiException("Missing the required parameter 'rname' when calling getResourceEndpoint(Async)");
        }
        

        com.squareup.okhttp.Call call = getResourceEndpointCall(mname, rname, xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Invoke Resource Get Method
     * Used to invoke the GET method of the resource from an existing EMS EdgeModule.
     * @param mname Is the EMS EdgeModule name (required)
     * @param rname Is the unique EMS EdgeModule Resource name (required)
     * @param xEmbarcaderoApplicationId  (optional)
     * @param xEmbarcaderoAppSecret  (optional)
     * @param xEmbarcaderoMasterSecret  (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void getResourceEndpoint(String mname, String rname, String xEmbarcaderoApplicationId, String xEmbarcaderoAppSecret, String xEmbarcaderoMasterSecret) throws ApiException {
        getResourceEndpointWithHttpInfo(mname, rname, xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret);
    }

    /**
     * Invoke Resource Get Method
     * Used to invoke the GET method of the resource from an existing EMS EdgeModule.
     * @param mname Is the EMS EdgeModule name (required)
     * @param rname Is the unique EMS EdgeModule Resource name (required)
     * @param xEmbarcaderoApplicationId  (optional)
     * @param xEmbarcaderoAppSecret  (optional)
     * @param xEmbarcaderoMasterSecret  (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> getResourceEndpointWithHttpInfo(String mname, String rname, String xEmbarcaderoApplicationId, String xEmbarcaderoAppSecret, String xEmbarcaderoMasterSecret) throws ApiException {
        com.squareup.okhttp.Call call = getResourceEndpointValidateBeforeCall(mname, rname, xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret, null, null);
        return apiClient.execute(call);
    }

    /**
     * Invoke Resource Get Method (asynchronously)
     * Used to invoke the GET method of the resource from an existing EMS EdgeModule.
     * @param mname Is the EMS EdgeModule name (required)
     * @param rname Is the unique EMS EdgeModule Resource name (required)
     * @param xEmbarcaderoApplicationId  (optional)
     * @param xEmbarcaderoAppSecret  (optional)
     * @param xEmbarcaderoMasterSecret  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getResourceEndpointAsync(String mname, String rname, String xEmbarcaderoApplicationId, String xEmbarcaderoAppSecret, String xEmbarcaderoMasterSecret, final ApiCallback<Void> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getResourceEndpointValidateBeforeCall(mname, rname, xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret, progressListener, progressRequestListener);
        apiClient.executeAsync(call, callback);
        return call;
    }
    /**
     * Build call for getResourceEndpointItem
     * @param mname Is the EMS EdgeModule name (required)
     * @param rname Is the unique EMS EdgeModule Resource name (required)
     * @param wildcard Is the Wild card part of the URL (required)
     * @param xEmbarcaderoApplicationId  (optional)
     * @param xEmbarcaderoAppSecret  (optional)
     * @param xEmbarcaderoMasterSecret  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getResourceEndpointItemCall(String mname, String rname, String wildcard, String xEmbarcaderoApplicationId, String xEmbarcaderoAppSecret, String xEmbarcaderoMasterSecret, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/edgemodules/{mname}/{rname}/{wildcard}"
            .replaceAll("\\{" + "mname" + "\\}", apiClient.escapeString(mname.toString()))
            .replaceAll("\\{" + "rname" + "\\}", apiClient.escapeString(rname.toString()))
            .replaceAll("\\{" + "wildcard" + "\\}", apiClient.escapeString(wildcard.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (xEmbarcaderoApplicationId != null)
        localVarHeaderParams.put("X-Embarcadero-Application-Id", apiClient.parameterToString(xEmbarcaderoApplicationId));
        if (xEmbarcaderoAppSecret != null)
        localVarHeaderParams.put("X-Embarcadero-App-Secret", apiClient.parameterToString(xEmbarcaderoAppSecret));
        if (xEmbarcaderoMasterSecret != null)
        localVarHeaderParams.put("X-Embarcadero-Master-Secret", apiClient.parameterToString(xEmbarcaderoMasterSecret));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getResourceEndpointItemValidateBeforeCall(String mname, String rname, String wildcard, String xEmbarcaderoApplicationId, String xEmbarcaderoAppSecret, String xEmbarcaderoMasterSecret, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'mname' is set
        if (mname == null) {
            throw new ApiException("Missing the required parameter 'mname' when calling getResourceEndpointItem(Async)");
        }
        
        // verify the required parameter 'rname' is set
        if (rname == null) {
            throw new ApiException("Missing the required parameter 'rname' when calling getResourceEndpointItem(Async)");
        }
        
        // verify the required parameter 'wildcard' is set
        if (wildcard == null) {
            throw new ApiException("Missing the required parameter 'wildcard' when calling getResourceEndpointItem(Async)");
        }
        

        com.squareup.okhttp.Call call = getResourceEndpointItemCall(mname, rname, wildcard, xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Invoke Resource/_* Get Method
     * Used to invoke the GET method of the resource from an existing EMS EdgeModule.
     * @param mname Is the EMS EdgeModule name (required)
     * @param rname Is the unique EMS EdgeModule Resource name (required)
     * @param wildcard Is the Wild card part of the URL (required)
     * @param xEmbarcaderoApplicationId  (optional)
     * @param xEmbarcaderoAppSecret  (optional)
     * @param xEmbarcaderoMasterSecret  (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void getResourceEndpointItem(String mname, String rname, String wildcard, String xEmbarcaderoApplicationId, String xEmbarcaderoAppSecret, String xEmbarcaderoMasterSecret) throws ApiException {
        getResourceEndpointItemWithHttpInfo(mname, rname, wildcard, xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret);
    }

    /**
     * Invoke Resource/_* Get Method
     * Used to invoke the GET method of the resource from an existing EMS EdgeModule.
     * @param mname Is the EMS EdgeModule name (required)
     * @param rname Is the unique EMS EdgeModule Resource name (required)
     * @param wildcard Is the Wild card part of the URL (required)
     * @param xEmbarcaderoApplicationId  (optional)
     * @param xEmbarcaderoAppSecret  (optional)
     * @param xEmbarcaderoMasterSecret  (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> getResourceEndpointItemWithHttpInfo(String mname, String rname, String wildcard, String xEmbarcaderoApplicationId, String xEmbarcaderoAppSecret, String xEmbarcaderoMasterSecret) throws ApiException {
        com.squareup.okhttp.Call call = getResourceEndpointItemValidateBeforeCall(mname, rname, wildcard, xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret, null, null);
        return apiClient.execute(call);
    }

    /**
     * Invoke Resource/_* Get Method (asynchronously)
     * Used to invoke the GET method of the resource from an existing EMS EdgeModule.
     * @param mname Is the EMS EdgeModule name (required)
     * @param rname Is the unique EMS EdgeModule Resource name (required)
     * @param wildcard Is the Wild card part of the URL (required)
     * @param xEmbarcaderoApplicationId  (optional)
     * @param xEmbarcaderoAppSecret  (optional)
     * @param xEmbarcaderoMasterSecret  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getResourceEndpointItemAsync(String mname, String rname, String wildcard, String xEmbarcaderoApplicationId, String xEmbarcaderoAppSecret, String xEmbarcaderoMasterSecret, final ApiCallback<Void> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getResourceEndpointItemValidateBeforeCall(mname, rname, wildcard, xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret, progressListener, progressRequestListener);
        apiClient.executeAsync(call, callback);
        return call;
    }
    /**
     * Build call for patchResourceEndpoint
     * @param mname Is the EMS EdgeModule name (required)
     * @param rname Is the unique EMS EdgeModule Resource name (required)
     * @param body Body Object (required)
     * @param xEmbarcaderoApplicationId  (optional)
     * @param xEmbarcaderoAppSecret  (optional)
     * @param xEmbarcaderoMasterSecret  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call patchResourceEndpointCall(String mname, String rname, Object body, String xEmbarcaderoApplicationId, String xEmbarcaderoAppSecret, String xEmbarcaderoMasterSecret, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;

        // create path and map variables
        String localVarPath = "/edgemodules/{mname}/{rname}"
            .replaceAll("\\{" + "mname" + "\\}", apiClient.escapeString(mname.toString()))
            .replaceAll("\\{" + "rname" + "\\}", apiClient.escapeString(rname.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (xEmbarcaderoApplicationId != null)
        localVarHeaderParams.put("X-Embarcadero-Application-Id", apiClient.parameterToString(xEmbarcaderoApplicationId));
        if (xEmbarcaderoAppSecret != null)
        localVarHeaderParams.put("X-Embarcadero-App-Secret", apiClient.parameterToString(xEmbarcaderoAppSecret));
        if (xEmbarcaderoMasterSecret != null)
        localVarHeaderParams.put("X-Embarcadero-Master-Secret", apiClient.parameterToString(xEmbarcaderoMasterSecret));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "PATCH", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call patchResourceEndpointValidateBeforeCall(String mname, String rname, Object body, String xEmbarcaderoApplicationId, String xEmbarcaderoAppSecret, String xEmbarcaderoMasterSecret, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'mname' is set
        if (mname == null) {
            throw new ApiException("Missing the required parameter 'mname' when calling patchResourceEndpoint(Async)");
        }
        
        // verify the required parameter 'rname' is set
        if (rname == null) {
            throw new ApiException("Missing the required parameter 'rname' when calling patchResourceEndpoint(Async)");
        }
        
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling patchResourceEndpoint(Async)");
        }
        

        com.squareup.okhttp.Call call = patchResourceEndpointCall(mname, rname, body, xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Invoke Resource Patch Method
     * Used to invoke the PATCH method of the resource from an existing EMS EdgeModule.
     * @param mname Is the EMS EdgeModule name (required)
     * @param rname Is the unique EMS EdgeModule Resource name (required)
     * @param body Body Object (required)
     * @param xEmbarcaderoApplicationId  (optional)
     * @param xEmbarcaderoAppSecret  (optional)
     * @param xEmbarcaderoMasterSecret  (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void patchResourceEndpoint(String mname, String rname, Object body, String xEmbarcaderoApplicationId, String xEmbarcaderoAppSecret, String xEmbarcaderoMasterSecret) throws ApiException {
        patchResourceEndpointWithHttpInfo(mname, rname, body, xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret);
    }

    /**
     * Invoke Resource Patch Method
     * Used to invoke the PATCH method of the resource from an existing EMS EdgeModule.
     * @param mname Is the EMS EdgeModule name (required)
     * @param rname Is the unique EMS EdgeModule Resource name (required)
     * @param body Body Object (required)
     * @param xEmbarcaderoApplicationId  (optional)
     * @param xEmbarcaderoAppSecret  (optional)
     * @param xEmbarcaderoMasterSecret  (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> patchResourceEndpointWithHttpInfo(String mname, String rname, Object body, String xEmbarcaderoApplicationId, String xEmbarcaderoAppSecret, String xEmbarcaderoMasterSecret) throws ApiException {
        com.squareup.okhttp.Call call = patchResourceEndpointValidateBeforeCall(mname, rname, body, xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret, null, null);
        return apiClient.execute(call);
    }

    /**
     * Invoke Resource Patch Method (asynchronously)
     * Used to invoke the PATCH method of the resource from an existing EMS EdgeModule.
     * @param mname Is the EMS EdgeModule name (required)
     * @param rname Is the unique EMS EdgeModule Resource name (required)
     * @param body Body Object (required)
     * @param xEmbarcaderoApplicationId  (optional)
     * @param xEmbarcaderoAppSecret  (optional)
     * @param xEmbarcaderoMasterSecret  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call patchResourceEndpointAsync(String mname, String rname, Object body, String xEmbarcaderoApplicationId, String xEmbarcaderoAppSecret, String xEmbarcaderoMasterSecret, final ApiCallback<Void> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = patchResourceEndpointValidateBeforeCall(mname, rname, body, xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret, progressListener, progressRequestListener);
        apiClient.executeAsync(call, callback);
        return call;
    }
    /**
     * Build call for patchResourceEndpointItem
     * @param mname Is the EMS EdgeModule name (required)
     * @param rname Is the unique EMS EdgeModule Resource name (required)
     * @param wildcard Is the Wild card part of the URL (required)
     * @param body Body Object (required)
     * @param xEmbarcaderoApplicationId  (optional)
     * @param xEmbarcaderoAppSecret  (optional)
     * @param xEmbarcaderoMasterSecret  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call patchResourceEndpointItemCall(String mname, String rname, String wildcard, Object body, String xEmbarcaderoApplicationId, String xEmbarcaderoAppSecret, String xEmbarcaderoMasterSecret, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;

        // create path and map variables
        String localVarPath = "/edgemodules/{mname}/{rname}/{wildcard}"
            .replaceAll("\\{" + "mname" + "\\}", apiClient.escapeString(mname.toString()))
            .replaceAll("\\{" + "rname" + "\\}", apiClient.escapeString(rname.toString()))
            .replaceAll("\\{" + "wildcard" + "\\}", apiClient.escapeString(wildcard.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (xEmbarcaderoApplicationId != null)
        localVarHeaderParams.put("X-Embarcadero-Application-Id", apiClient.parameterToString(xEmbarcaderoApplicationId));
        if (xEmbarcaderoAppSecret != null)
        localVarHeaderParams.put("X-Embarcadero-App-Secret", apiClient.parameterToString(xEmbarcaderoAppSecret));
        if (xEmbarcaderoMasterSecret != null)
        localVarHeaderParams.put("X-Embarcadero-Master-Secret", apiClient.parameterToString(xEmbarcaderoMasterSecret));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "PATCH", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call patchResourceEndpointItemValidateBeforeCall(String mname, String rname, String wildcard, Object body, String xEmbarcaderoApplicationId, String xEmbarcaderoAppSecret, String xEmbarcaderoMasterSecret, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'mname' is set
        if (mname == null) {
            throw new ApiException("Missing the required parameter 'mname' when calling patchResourceEndpointItem(Async)");
        }
        
        // verify the required parameter 'rname' is set
        if (rname == null) {
            throw new ApiException("Missing the required parameter 'rname' when calling patchResourceEndpointItem(Async)");
        }
        
        // verify the required parameter 'wildcard' is set
        if (wildcard == null) {
            throw new ApiException("Missing the required parameter 'wildcard' when calling patchResourceEndpointItem(Async)");
        }
        
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling patchResourceEndpointItem(Async)");
        }
        

        com.squareup.okhttp.Call call = patchResourceEndpointItemCall(mname, rname, wildcard, body, xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Invoke Resource/_* Patch Method
     * Used to invoke the PATCH method of the resource from an existing EMS EdgeModule.
     * @param mname Is the EMS EdgeModule name (required)
     * @param rname Is the unique EMS EdgeModule Resource name (required)
     * @param wildcard Is the Wild card part of the URL (required)
     * @param body Body Object (required)
     * @param xEmbarcaderoApplicationId  (optional)
     * @param xEmbarcaderoAppSecret  (optional)
     * @param xEmbarcaderoMasterSecret  (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void patchResourceEndpointItem(String mname, String rname, String wildcard, Object body, String xEmbarcaderoApplicationId, String xEmbarcaderoAppSecret, String xEmbarcaderoMasterSecret) throws ApiException {
        patchResourceEndpointItemWithHttpInfo(mname, rname, wildcard, body, xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret);
    }

    /**
     * Invoke Resource/_* Patch Method
     * Used to invoke the PATCH method of the resource from an existing EMS EdgeModule.
     * @param mname Is the EMS EdgeModule name (required)
     * @param rname Is the unique EMS EdgeModule Resource name (required)
     * @param wildcard Is the Wild card part of the URL (required)
     * @param body Body Object (required)
     * @param xEmbarcaderoApplicationId  (optional)
     * @param xEmbarcaderoAppSecret  (optional)
     * @param xEmbarcaderoMasterSecret  (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> patchResourceEndpointItemWithHttpInfo(String mname, String rname, String wildcard, Object body, String xEmbarcaderoApplicationId, String xEmbarcaderoAppSecret, String xEmbarcaderoMasterSecret) throws ApiException {
        com.squareup.okhttp.Call call = patchResourceEndpointItemValidateBeforeCall(mname, rname, wildcard, body, xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret, null, null);
        return apiClient.execute(call);
    }

    /**
     * Invoke Resource/_* Patch Method (asynchronously)
     * Used to invoke the PATCH method of the resource from an existing EMS EdgeModule.
     * @param mname Is the EMS EdgeModule name (required)
     * @param rname Is the unique EMS EdgeModule Resource name (required)
     * @param wildcard Is the Wild card part of the URL (required)
     * @param body Body Object (required)
     * @param xEmbarcaderoApplicationId  (optional)
     * @param xEmbarcaderoAppSecret  (optional)
     * @param xEmbarcaderoMasterSecret  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call patchResourceEndpointItemAsync(String mname, String rname, String wildcard, Object body, String xEmbarcaderoApplicationId, String xEmbarcaderoAppSecret, String xEmbarcaderoMasterSecret, final ApiCallback<Void> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = patchResourceEndpointItemValidateBeforeCall(mname, rname, wildcard, body, xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret, progressListener, progressRequestListener);
        apiClient.executeAsync(call, callback);
        return call;
    }
    /**
     * Build call for postResourceEndpoint
     * @param mname Is the EMS EdgeModule name (required)
     * @param rname Is the unique EMS EdgeModule Resource name (required)
     * @param body Body Object (required)
     * @param xEmbarcaderoApplicationId  (optional)
     * @param xEmbarcaderoAppSecret  (optional)
     * @param xEmbarcaderoMasterSecret  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call postResourceEndpointCall(String mname, String rname, Object body, String xEmbarcaderoApplicationId, String xEmbarcaderoAppSecret, String xEmbarcaderoMasterSecret, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;

        // create path and map variables
        String localVarPath = "/edgemodules/{mname}/{rname}"
            .replaceAll("\\{" + "mname" + "\\}", apiClient.escapeString(mname.toString()))
            .replaceAll("\\{" + "rname" + "\\}", apiClient.escapeString(rname.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (xEmbarcaderoApplicationId != null)
        localVarHeaderParams.put("X-Embarcadero-Application-Id", apiClient.parameterToString(xEmbarcaderoApplicationId));
        if (xEmbarcaderoAppSecret != null)
        localVarHeaderParams.put("X-Embarcadero-App-Secret", apiClient.parameterToString(xEmbarcaderoAppSecret));
        if (xEmbarcaderoMasterSecret != null)
        localVarHeaderParams.put("X-Embarcadero-Master-Secret", apiClient.parameterToString(xEmbarcaderoMasterSecret));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call postResourceEndpointValidateBeforeCall(String mname, String rname, Object body, String xEmbarcaderoApplicationId, String xEmbarcaderoAppSecret, String xEmbarcaderoMasterSecret, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'mname' is set
        if (mname == null) {
            throw new ApiException("Missing the required parameter 'mname' when calling postResourceEndpoint(Async)");
        }
        
        // verify the required parameter 'rname' is set
        if (rname == null) {
            throw new ApiException("Missing the required parameter 'rname' when calling postResourceEndpoint(Async)");
        }
        
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling postResourceEndpoint(Async)");
        }
        

        com.squareup.okhttp.Call call = postResourceEndpointCall(mname, rname, body, xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Invoke Resource Post Method
     * Used to invoke the POST method of the resource from an existing EMS EdgeModule.
     * @param mname Is the EMS EdgeModule name (required)
     * @param rname Is the unique EMS EdgeModule Resource name (required)
     * @param body Body Object (required)
     * @param xEmbarcaderoApplicationId  (optional)
     * @param xEmbarcaderoAppSecret  (optional)
     * @param xEmbarcaderoMasterSecret  (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void postResourceEndpoint(String mname, String rname, Object body, String xEmbarcaderoApplicationId, String xEmbarcaderoAppSecret, String xEmbarcaderoMasterSecret) throws ApiException {
        postResourceEndpointWithHttpInfo(mname, rname, body, xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret);
    }

    /**
     * Invoke Resource Post Method
     * Used to invoke the POST method of the resource from an existing EMS EdgeModule.
     * @param mname Is the EMS EdgeModule name (required)
     * @param rname Is the unique EMS EdgeModule Resource name (required)
     * @param body Body Object (required)
     * @param xEmbarcaderoApplicationId  (optional)
     * @param xEmbarcaderoAppSecret  (optional)
     * @param xEmbarcaderoMasterSecret  (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> postResourceEndpointWithHttpInfo(String mname, String rname, Object body, String xEmbarcaderoApplicationId, String xEmbarcaderoAppSecret, String xEmbarcaderoMasterSecret) throws ApiException {
        com.squareup.okhttp.Call call = postResourceEndpointValidateBeforeCall(mname, rname, body, xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret, null, null);
        return apiClient.execute(call);
    }

    /**
     * Invoke Resource Post Method (asynchronously)
     * Used to invoke the POST method of the resource from an existing EMS EdgeModule.
     * @param mname Is the EMS EdgeModule name (required)
     * @param rname Is the unique EMS EdgeModule Resource name (required)
     * @param body Body Object (required)
     * @param xEmbarcaderoApplicationId  (optional)
     * @param xEmbarcaderoAppSecret  (optional)
     * @param xEmbarcaderoMasterSecret  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call postResourceEndpointAsync(String mname, String rname, Object body, String xEmbarcaderoApplicationId, String xEmbarcaderoAppSecret, String xEmbarcaderoMasterSecret, final ApiCallback<Void> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = postResourceEndpointValidateBeforeCall(mname, rname, body, xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret, progressListener, progressRequestListener);
        apiClient.executeAsync(call, callback);
        return call;
    }
    /**
     * Build call for postResourceEndpointItem
     * @param mname Is the EMS EdgeModule name (required)
     * @param rname Is the unique EMS EdgeModule Resource name (required)
     * @param wildcard Is the Wild card part of the URL (required)
     * @param body Body Object (required)
     * @param xEmbarcaderoApplicationId  (optional)
     * @param xEmbarcaderoAppSecret  (optional)
     * @param xEmbarcaderoMasterSecret  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call postResourceEndpointItemCall(String mname, String rname, String wildcard, Object body, String xEmbarcaderoApplicationId, String xEmbarcaderoAppSecret, String xEmbarcaderoMasterSecret, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;

        // create path and map variables
        String localVarPath = "/edgemodules/{mname}/{rname}/{wildcard}"
            .replaceAll("\\{" + "mname" + "\\}", apiClient.escapeString(mname.toString()))
            .replaceAll("\\{" + "rname" + "\\}", apiClient.escapeString(rname.toString()))
            .replaceAll("\\{" + "wildcard" + "\\}", apiClient.escapeString(wildcard.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (xEmbarcaderoApplicationId != null)
        localVarHeaderParams.put("X-Embarcadero-Application-Id", apiClient.parameterToString(xEmbarcaderoApplicationId));
        if (xEmbarcaderoAppSecret != null)
        localVarHeaderParams.put("X-Embarcadero-App-Secret", apiClient.parameterToString(xEmbarcaderoAppSecret));
        if (xEmbarcaderoMasterSecret != null)
        localVarHeaderParams.put("X-Embarcadero-Master-Secret", apiClient.parameterToString(xEmbarcaderoMasterSecret));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call postResourceEndpointItemValidateBeforeCall(String mname, String rname, String wildcard, Object body, String xEmbarcaderoApplicationId, String xEmbarcaderoAppSecret, String xEmbarcaderoMasterSecret, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'mname' is set
        if (mname == null) {
            throw new ApiException("Missing the required parameter 'mname' when calling postResourceEndpointItem(Async)");
        }
        
        // verify the required parameter 'rname' is set
        if (rname == null) {
            throw new ApiException("Missing the required parameter 'rname' when calling postResourceEndpointItem(Async)");
        }
        
        // verify the required parameter 'wildcard' is set
        if (wildcard == null) {
            throw new ApiException("Missing the required parameter 'wildcard' when calling postResourceEndpointItem(Async)");
        }
        
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling postResourceEndpointItem(Async)");
        }
        

        com.squareup.okhttp.Call call = postResourceEndpointItemCall(mname, rname, wildcard, body, xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Invoke Resource/_* Post Method
     * Used to invoke the POST method of the resource from an existing EMS EdgeModule.
     * @param mname Is the EMS EdgeModule name (required)
     * @param rname Is the unique EMS EdgeModule Resource name (required)
     * @param wildcard Is the Wild card part of the URL (required)
     * @param body Body Object (required)
     * @param xEmbarcaderoApplicationId  (optional)
     * @param xEmbarcaderoAppSecret  (optional)
     * @param xEmbarcaderoMasterSecret  (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void postResourceEndpointItem(String mname, String rname, String wildcard, Object body, String xEmbarcaderoApplicationId, String xEmbarcaderoAppSecret, String xEmbarcaderoMasterSecret) throws ApiException {
        postResourceEndpointItemWithHttpInfo(mname, rname, wildcard, body, xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret);
    }

    /**
     * Invoke Resource/_* Post Method
     * Used to invoke the POST method of the resource from an existing EMS EdgeModule.
     * @param mname Is the EMS EdgeModule name (required)
     * @param rname Is the unique EMS EdgeModule Resource name (required)
     * @param wildcard Is the Wild card part of the URL (required)
     * @param body Body Object (required)
     * @param xEmbarcaderoApplicationId  (optional)
     * @param xEmbarcaderoAppSecret  (optional)
     * @param xEmbarcaderoMasterSecret  (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> postResourceEndpointItemWithHttpInfo(String mname, String rname, String wildcard, Object body, String xEmbarcaderoApplicationId, String xEmbarcaderoAppSecret, String xEmbarcaderoMasterSecret) throws ApiException {
        com.squareup.okhttp.Call call = postResourceEndpointItemValidateBeforeCall(mname, rname, wildcard, body, xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret, null, null);
        return apiClient.execute(call);
    }

    /**
     * Invoke Resource/_* Post Method (asynchronously)
     * Used to invoke the POST method of the resource from an existing EMS EdgeModule.
     * @param mname Is the EMS EdgeModule name (required)
     * @param rname Is the unique EMS EdgeModule Resource name (required)
     * @param wildcard Is the Wild card part of the URL (required)
     * @param body Body Object (required)
     * @param xEmbarcaderoApplicationId  (optional)
     * @param xEmbarcaderoAppSecret  (optional)
     * @param xEmbarcaderoMasterSecret  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call postResourceEndpointItemAsync(String mname, String rname, String wildcard, Object body, String xEmbarcaderoApplicationId, String xEmbarcaderoAppSecret, String xEmbarcaderoMasterSecret, final ApiCallback<Void> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = postResourceEndpointItemValidateBeforeCall(mname, rname, wildcard, body, xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret, progressListener, progressRequestListener);
        apiClient.executeAsync(call, callback);
        return call;
    }
    /**
     * Build call for putResourceEndpoint
     * @param mname Is the EMS EdgeModule name (required)
     * @param rname Is the unique EMS EdgeModule Resource name (required)
     * @param body Body Object (required)
     * @param xEmbarcaderoApplicationId  (optional)
     * @param xEmbarcaderoAppSecret  (optional)
     * @param xEmbarcaderoMasterSecret  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call putResourceEndpointCall(String mname, String rname, Object body, String xEmbarcaderoApplicationId, String xEmbarcaderoAppSecret, String xEmbarcaderoMasterSecret, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;

        // create path and map variables
        String localVarPath = "/edgemodules/{mname}/{rname}"
            .replaceAll("\\{" + "mname" + "\\}", apiClient.escapeString(mname.toString()))
            .replaceAll("\\{" + "rname" + "\\}", apiClient.escapeString(rname.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (xEmbarcaderoApplicationId != null)
        localVarHeaderParams.put("X-Embarcadero-Application-Id", apiClient.parameterToString(xEmbarcaderoApplicationId));
        if (xEmbarcaderoAppSecret != null)
        localVarHeaderParams.put("X-Embarcadero-App-Secret", apiClient.parameterToString(xEmbarcaderoAppSecret));
        if (xEmbarcaderoMasterSecret != null)
        localVarHeaderParams.put("X-Embarcadero-Master-Secret", apiClient.parameterToString(xEmbarcaderoMasterSecret));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call putResourceEndpointValidateBeforeCall(String mname, String rname, Object body, String xEmbarcaderoApplicationId, String xEmbarcaderoAppSecret, String xEmbarcaderoMasterSecret, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'mname' is set
        if (mname == null) {
            throw new ApiException("Missing the required parameter 'mname' when calling putResourceEndpoint(Async)");
        }
        
        // verify the required parameter 'rname' is set
        if (rname == null) {
            throw new ApiException("Missing the required parameter 'rname' when calling putResourceEndpoint(Async)");
        }
        
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling putResourceEndpoint(Async)");
        }
        

        com.squareup.okhttp.Call call = putResourceEndpointCall(mname, rname, body, xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Invoke Resource Put Method
     * Used to invoke the PUT method of the resource from an existing EMS EdgeModule.
     * @param mname Is the EMS EdgeModule name (required)
     * @param rname Is the unique EMS EdgeModule Resource name (required)
     * @param body Body Object (required)
     * @param xEmbarcaderoApplicationId  (optional)
     * @param xEmbarcaderoAppSecret  (optional)
     * @param xEmbarcaderoMasterSecret  (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void putResourceEndpoint(String mname, String rname, Object body, String xEmbarcaderoApplicationId, String xEmbarcaderoAppSecret, String xEmbarcaderoMasterSecret) throws ApiException {
        putResourceEndpointWithHttpInfo(mname, rname, body, xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret);
    }

    /**
     * Invoke Resource Put Method
     * Used to invoke the PUT method of the resource from an existing EMS EdgeModule.
     * @param mname Is the EMS EdgeModule name (required)
     * @param rname Is the unique EMS EdgeModule Resource name (required)
     * @param body Body Object (required)
     * @param xEmbarcaderoApplicationId  (optional)
     * @param xEmbarcaderoAppSecret  (optional)
     * @param xEmbarcaderoMasterSecret  (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> putResourceEndpointWithHttpInfo(String mname, String rname, Object body, String xEmbarcaderoApplicationId, String xEmbarcaderoAppSecret, String xEmbarcaderoMasterSecret) throws ApiException {
        com.squareup.okhttp.Call call = putResourceEndpointValidateBeforeCall(mname, rname, body, xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret, null, null);
        return apiClient.execute(call);
    }

    /**
     * Invoke Resource Put Method (asynchronously)
     * Used to invoke the PUT method of the resource from an existing EMS EdgeModule.
     * @param mname Is the EMS EdgeModule name (required)
     * @param rname Is the unique EMS EdgeModule Resource name (required)
     * @param body Body Object (required)
     * @param xEmbarcaderoApplicationId  (optional)
     * @param xEmbarcaderoAppSecret  (optional)
     * @param xEmbarcaderoMasterSecret  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call putResourceEndpointAsync(String mname, String rname, Object body, String xEmbarcaderoApplicationId, String xEmbarcaderoAppSecret, String xEmbarcaderoMasterSecret, final ApiCallback<Void> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = putResourceEndpointValidateBeforeCall(mname, rname, body, xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret, progressListener, progressRequestListener);
        apiClient.executeAsync(call, callback);
        return call;
    }
    /**
     * Build call for putResourceEndpointItem
     * @param mname Is the EMS EdgeModule name (required)
     * @param rname Is the unique EMS EdgeModule Resource name (required)
     * @param wildcard Is the Wild card part of the URL (required)
     * @param body Body Object (required)
     * @param xEmbarcaderoApplicationId  (optional)
     * @param xEmbarcaderoAppSecret  (optional)
     * @param xEmbarcaderoMasterSecret  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call putResourceEndpointItemCall(String mname, String rname, String wildcard, Object body, String xEmbarcaderoApplicationId, String xEmbarcaderoAppSecret, String xEmbarcaderoMasterSecret, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;

        // create path and map variables
        String localVarPath = "/edgemodules/{mname}/{rname}/{wildcard}"
            .replaceAll("\\{" + "mname" + "\\}", apiClient.escapeString(mname.toString()))
            .replaceAll("\\{" + "rname" + "\\}", apiClient.escapeString(rname.toString()))
            .replaceAll("\\{" + "wildcard" + "\\}", apiClient.escapeString(wildcard.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (xEmbarcaderoApplicationId != null)
        localVarHeaderParams.put("X-Embarcadero-Application-Id", apiClient.parameterToString(xEmbarcaderoApplicationId));
        if (xEmbarcaderoAppSecret != null)
        localVarHeaderParams.put("X-Embarcadero-App-Secret", apiClient.parameterToString(xEmbarcaderoAppSecret));
        if (xEmbarcaderoMasterSecret != null)
        localVarHeaderParams.put("X-Embarcadero-Master-Secret", apiClient.parameterToString(xEmbarcaderoMasterSecret));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call putResourceEndpointItemValidateBeforeCall(String mname, String rname, String wildcard, Object body, String xEmbarcaderoApplicationId, String xEmbarcaderoAppSecret, String xEmbarcaderoMasterSecret, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'mname' is set
        if (mname == null) {
            throw new ApiException("Missing the required parameter 'mname' when calling putResourceEndpointItem(Async)");
        }
        
        // verify the required parameter 'rname' is set
        if (rname == null) {
            throw new ApiException("Missing the required parameter 'rname' when calling putResourceEndpointItem(Async)");
        }
        
        // verify the required parameter 'wildcard' is set
        if (wildcard == null) {
            throw new ApiException("Missing the required parameter 'wildcard' when calling putResourceEndpointItem(Async)");
        }
        
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling putResourceEndpointItem(Async)");
        }
        

        com.squareup.okhttp.Call call = putResourceEndpointItemCall(mname, rname, wildcard, body, xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Invoke Resource/_* Put Method
     * Used to invoke the PUT method of the resource from an existing EMS EdgeModule.
     * @param mname Is the EMS EdgeModule name (required)
     * @param rname Is the unique EMS EdgeModule Resource name (required)
     * @param wildcard Is the Wild card part of the URL (required)
     * @param body Body Object (required)
     * @param xEmbarcaderoApplicationId  (optional)
     * @param xEmbarcaderoAppSecret  (optional)
     * @param xEmbarcaderoMasterSecret  (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void putResourceEndpointItem(String mname, String rname, String wildcard, Object body, String xEmbarcaderoApplicationId, String xEmbarcaderoAppSecret, String xEmbarcaderoMasterSecret) throws ApiException {
        putResourceEndpointItemWithHttpInfo(mname, rname, wildcard, body, xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret);
    }

    /**
     * Invoke Resource/_* Put Method
     * Used to invoke the PUT method of the resource from an existing EMS EdgeModule.
     * @param mname Is the EMS EdgeModule name (required)
     * @param rname Is the unique EMS EdgeModule Resource name (required)
     * @param wildcard Is the Wild card part of the URL (required)
     * @param body Body Object (required)
     * @param xEmbarcaderoApplicationId  (optional)
     * @param xEmbarcaderoAppSecret  (optional)
     * @param xEmbarcaderoMasterSecret  (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> putResourceEndpointItemWithHttpInfo(String mname, String rname, String wildcard, Object body, String xEmbarcaderoApplicationId, String xEmbarcaderoAppSecret, String xEmbarcaderoMasterSecret) throws ApiException {
        com.squareup.okhttp.Call call = putResourceEndpointItemValidateBeforeCall(mname, rname, wildcard, body, xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret, null, null);
        return apiClient.execute(call);
    }

    /**
     * Invoke Resource/_* Put Method (asynchronously)
     * Used to invoke the PUT method of the resource from an existing EMS EdgeModule.
     * @param mname Is the EMS EdgeModule name (required)
     * @param rname Is the unique EMS EdgeModule Resource name (required)
     * @param wildcard Is the Wild card part of the URL (required)
     * @param body Body Object (required)
     * @param xEmbarcaderoApplicationId  (optional)
     * @param xEmbarcaderoAppSecret  (optional)
     * @param xEmbarcaderoMasterSecret  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call putResourceEndpointItemAsync(String mname, String rname, String wildcard, Object body, String xEmbarcaderoApplicationId, String xEmbarcaderoAppSecret, String xEmbarcaderoMasterSecret, final ApiCallback<Void> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = putResourceEndpointItemValidateBeforeCall(mname, rname, wildcard, body, xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret, progressListener, progressRequestListener);
        apiClient.executeAsync(call, callback);
        return call;
    }
}
