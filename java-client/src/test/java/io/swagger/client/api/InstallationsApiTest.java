/*
 * EMS API Documentation
 * Enterprise Mobility Services API      [Learn about EMS](https://www.embarcadero.com/products/rad-studio/enterprise-mobility-services)      EMS (Enterprise Mobility Services) offers a Mobile Enterprise Application Platform (MEAP)      TurnKey Middleware for Interconnected Distributed Apps
 *
 * OpenAPI spec version: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import java.math.BigDecimal;
import io.swagger.client.model.FieldInstallationObject;
import io.swagger.client.model.InstallationAddObject;
import io.swagger.client.model.InstallationAddedObject;
import io.swagger.client.model.InstallationObject;
import io.swagger.client.model.UpdateInstallationObject;
import io.swagger.client.model.UpdatedInstallationObject;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for InstallationsApi
 */
@Ignore
public class InstallationsApiTest {

    private final InstallationsApi api = new InstallationsApi();

    
    /**
     * Add Installation
     *
     *  |      Used to add a new &#x60;Installation&#x60; object to the EMS database.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addInstallationTest() throws ApiException {
        InstallationAddObject body = null;
        String xEmbarcaderoApplicationId = null;
        String xEmbarcaderoAppSecret = null;
        String xEmbarcaderoMasterSecret = null;
        InstallationAddedObject response = api.addInstallation(body, xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret);

        // TODO: test validations
    }
    
    /**
     * Delete Installation
     *
     *  |      Used to delete an &#x60;Installation&#x60;. **id** is the unique EMS Installation identifier (IID) in the EMS database.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteInstallationTest() throws ApiException {
        String id = null;
        String xEmbarcaderoApplicationId = null;
        String xEmbarcaderoAppSecret = null;
        String xEmbarcaderoMasterSecret = null;
        api.deleteInstallation(id, xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret);

        // TODO: test validations
    }
    
    /**
     * Get Installation Channels
     *
     *  |       Used to retrieve the available channels to which the device has subscribed. **id** is the unique EMS Installation identifier (InstallationID) in the EMS database.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getChannelsTest() throws ApiException {
        String xEmbarcaderoApplicationId = null;
        String xEmbarcaderoAppSecret = null;
        String xEmbarcaderoMasterSecret = null;
        List<String> response = api.getChannels(xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret);

        // TODO: test validations
    }
    
    /**
     * Get Installation
     *
     *  |      Used to retrieve all data from a specific &#x60;Installation&#x60; (registered device). **id** is the unique EMS Installation identifier (InstallationID) in the EMS database.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getInstallationTest() throws ApiException {
        String id = null;
        String xEmbarcaderoApplicationId = null;
        String xEmbarcaderoAppSecret = null;
        String xEmbarcaderoMasterSecret = null;
        InstallationObject response = api.getInstallation(id, xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret);

        // TODO: test validations
    }
    
    /**
     * Get Fields
     *
     *  |      Used to retrieve all the &#x60;field names&#x60; of the EMS Installation (including the custom fields).
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getInstallationFieldsTest() throws ApiException {
        String xEmbarcaderoApplicationId = null;
        String xEmbarcaderoAppSecret = null;
        String xEmbarcaderoMasterSecret = null;
        List<FieldInstallationObject> response = api.getInstallationFields(xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret);

        // TODO: test validations
    }
    
    /**
     * Get Installations
     *
     *  |      Used to retrieve all data from &#x60;Installation&#x60;.      Optional query param of **skip, limit, order, where** determines       size of returned array, filtered and order by.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getInstallationsTest() throws ApiException {
        String xEmbarcaderoApplicationId = null;
        String xEmbarcaderoAppSecret = null;
        String xEmbarcaderoMasterSecret = null;
        BigDecimal skip = null;
        BigDecimal limit = null;
        BigDecimal order = null;
        String where = null;
        List<InstallationObject> response = api.getInstallations(xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret, skip, limit, order, where);

        // TODO: test validations
    }
    
    /**
     * Update Installation
     *
     *  |      Used to update an &#x60;Installation&#x60;. **id** is the unique EMS Installation identifier (IID) in the EMS database.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateInstallationTest() throws ApiException {
        String id = null;
        UpdateInstallationObject body = null;
        String xEmbarcaderoApplicationId = null;
        String xEmbarcaderoAppSecret = null;
        String xEmbarcaderoMasterSecret = null;
        UpdatedInstallationObject response = api.updateInstallation(id, body, xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret);

        // TODO: test validations
    }
    
}
