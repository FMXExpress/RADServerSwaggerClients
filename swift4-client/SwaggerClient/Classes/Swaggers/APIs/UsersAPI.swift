//
// UsersAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class UsersAPI {
    /**
     Add User
     
     - parameter body: (body) Object to add a new EMS User in the EMS Server 
     - parameter xEmbarcaderoApplicationId: (header)  (optional)
     - parameter xEmbarcaderoAppSecret: (header)  (optional)
     - parameter xEmbarcaderoMasterSecret: (header)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func addUser(body: UserCredentialsObject, xEmbarcaderoApplicationId: String? = nil, xEmbarcaderoAppSecret: String? = nil, xEmbarcaderoMasterSecret: String? = nil, completion: @escaping ((_ data: UseridObject?,_ error: Error?) -> Void)) {
        addUserWithRequestBuilder(body: body, xEmbarcaderoApplicationId: xEmbarcaderoApplicationId, xEmbarcaderoAppSecret: xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret: xEmbarcaderoMasterSecret).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Add User
     - POST /users
     -  |      Used to add a new `User` object to the EMS database.
     - examples: [{contentType=application/json, example={
  "_id" : "_id"
}}]
     
     - parameter body: (body) Object to add a new EMS User in the EMS Server 
     - parameter xEmbarcaderoApplicationId: (header)  (optional)
     - parameter xEmbarcaderoAppSecret: (header)  (optional)
     - parameter xEmbarcaderoMasterSecret: (header)  (optional)

     - returns: RequestBuilder<UseridObject> 
     */
    open class func addUserWithRequestBuilder(body: UserCredentialsObject, xEmbarcaderoApplicationId: String? = nil, xEmbarcaderoAppSecret: String? = nil, xEmbarcaderoMasterSecret: String? = nil) -> RequestBuilder<UseridObject> {
        let path = "/users"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "X-Embarcadero-Application-Id": xEmbarcaderoApplicationId,
            "X-Embarcadero-App-Secret": xEmbarcaderoAppSecret,
            "X-Embarcadero-Master-Secret": xEmbarcaderoMasterSecret
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<UseridObject>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true, headers: headerParameters)
    }

    /**
     Delete User
     
     - parameter _id: (path) A user ID 
     - parameter xEmbarcaderoApplicationId: (header)  (optional)
     - parameter xEmbarcaderoAppSecret: (header)  (optional)
     - parameter xEmbarcaderoMasterSecret: (header)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteUser(_id: String, xEmbarcaderoApplicationId: String? = nil, xEmbarcaderoAppSecret: String? = nil, xEmbarcaderoMasterSecret: String? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        deleteUserWithRequestBuilder(_id: _id, xEmbarcaderoApplicationId: xEmbarcaderoApplicationId, xEmbarcaderoAppSecret: xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret: xEmbarcaderoMasterSecret).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Delete User
     - DELETE /users/{id}
     -  |      Used to delete a `User`. **id** is the unique EMS User identifier (UID) in the EMS database.
     
     - parameter _id: (path) A user ID 
     - parameter xEmbarcaderoApplicationId: (header)  (optional)
     - parameter xEmbarcaderoAppSecret: (header)  (optional)
     - parameter xEmbarcaderoMasterSecret: (header)  (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func deleteUserWithRequestBuilder(_id: String, xEmbarcaderoApplicationId: String? = nil, xEmbarcaderoAppSecret: String? = nil, xEmbarcaderoMasterSecret: String? = nil) -> RequestBuilder<Void> {
        var path = "/users/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "X-Embarcadero-Application-Id": xEmbarcaderoApplicationId,
            "X-Embarcadero-App-Secret": xEmbarcaderoAppSecret,
            "X-Embarcadero-Master-Secret": xEmbarcaderoMasterSecret
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**
     Get User
     
     - parameter _id: (path) A user ID 
     - parameter xEmbarcaderoApplicationId: (header)  (optional)
     - parameter xEmbarcaderoAppSecret: (header)  (optional)
     - parameter xEmbarcaderoMasterSecret: (header)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getUser(_id: String, xEmbarcaderoApplicationId: String? = nil, xEmbarcaderoAppSecret: String? = nil, xEmbarcaderoMasterSecret: String? = nil, completion: @escaping ((_ data: UserObject?,_ error: Error?) -> Void)) {
        getUserWithRequestBuilder(_id: _id, xEmbarcaderoApplicationId: xEmbarcaderoApplicationId, xEmbarcaderoAppSecret: xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret: xEmbarcaderoMasterSecret).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get User
     - GET /users/{id}
     -  |      Used to retrieve all data from a `User`. **id** is the unique EMS User identifier (UID) in the EMS database.
     - examples: [{contentType=application/json, example={
  "_meta" : {
    "creator" : "creator",
    "created" : "created",
    "updated" : "updated"
  },
  "id" : "id",
  "username" : "username"
}}]
     
     - parameter _id: (path) A user ID 
     - parameter xEmbarcaderoApplicationId: (header)  (optional)
     - parameter xEmbarcaderoAppSecret: (header)  (optional)
     - parameter xEmbarcaderoMasterSecret: (header)  (optional)

     - returns: RequestBuilder<UserObject> 
     */
    open class func getUserWithRequestBuilder(_id: String, xEmbarcaderoApplicationId: String? = nil, xEmbarcaderoAppSecret: String? = nil, xEmbarcaderoMasterSecret: String? = nil) -> RequestBuilder<UserObject> {
        var path = "/users/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "X-Embarcadero-Application-Id": xEmbarcaderoApplicationId,
            "X-Embarcadero-App-Secret": xEmbarcaderoAppSecret,
            "X-Embarcadero-Master-Secret": xEmbarcaderoMasterSecret
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<UserObject>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**
     Get Fields
     
     - parameter xEmbarcaderoApplicationId: (header)  (optional)
     - parameter xEmbarcaderoAppSecret: (header)  (optional)
     - parameter xEmbarcaderoMasterSecret: (header)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getUserFields(xEmbarcaderoApplicationId: String? = nil, xEmbarcaderoAppSecret: String? = nil, xEmbarcaderoMasterSecret: String? = nil, completion: @escaping ((_ data: [FieldObject]?,_ error: Error?) -> Void)) {
        getUserFieldsWithRequestBuilder(xEmbarcaderoApplicationId: xEmbarcaderoApplicationId, xEmbarcaderoAppSecret: xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret: xEmbarcaderoMasterSecret).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get Fields
     - GET /users/fields
     -  |      Used to retrieve all the `field names` of the EMS Users (including the custom fields).
     - examples: [{contentType=application/json, example=[ {
  "custom" : true,
  "name" : "name",
  "fields" : [ {
    "name" : "name"
  }, {
    "name" : "name"
  } ]
}, {
  "custom" : true,
  "name" : "name",
  "fields" : [ {
    "name" : "name"
  }, {
    "name" : "name"
  } ]
} ]}]
     
     - parameter xEmbarcaderoApplicationId: (header)  (optional)
     - parameter xEmbarcaderoAppSecret: (header)  (optional)
     - parameter xEmbarcaderoMasterSecret: (header)  (optional)

     - returns: RequestBuilder<[FieldObject]> 
     */
    open class func getUserFieldsWithRequestBuilder(xEmbarcaderoApplicationId: String? = nil, xEmbarcaderoAppSecret: String? = nil, xEmbarcaderoMasterSecret: String? = nil) -> RequestBuilder<[FieldObject]> {
        let path = "/users/fields"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "X-Embarcadero-Application-Id": xEmbarcaderoApplicationId,
            "X-Embarcadero-App-Secret": xEmbarcaderoAppSecret,
            "X-Embarcadero-Master-Secret": xEmbarcaderoMasterSecret
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[FieldObject]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**
     Get User Groups
     
     - parameter _id: (path) A user ID 
     - parameter xEmbarcaderoApplicationId: (header)  (optional)
     - parameter xEmbarcaderoAppSecret: (header)  (optional)
     - parameter xEmbarcaderoMasterSecret: (header)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getUserGroups(_id: String, xEmbarcaderoApplicationId: String? = nil, xEmbarcaderoAppSecret: String? = nil, xEmbarcaderoMasterSecret: String? = nil, completion: @escaping ((_ data: [GroupName]?,_ error: Error?) -> Void)) {
        getUserGroupsWithRequestBuilder(_id: _id, xEmbarcaderoApplicationId: xEmbarcaderoApplicationId, xEmbarcaderoAppSecret: xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret: xEmbarcaderoMasterSecret).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get User Groups
     - GET /users/{id}/groups
     -  |      Used to retrieve the EMS Groups the EMS User belongs to. **id** is the unique EMS User identifier (UID) in the EMS database.
     - examples: [{contentType=application/json, example=[ { }, { } ]}]
     
     - parameter _id: (path) A user ID 
     - parameter xEmbarcaderoApplicationId: (header)  (optional)
     - parameter xEmbarcaderoAppSecret: (header)  (optional)
     - parameter xEmbarcaderoMasterSecret: (header)  (optional)

     - returns: RequestBuilder<[GroupName]> 
     */
    open class func getUserGroupsWithRequestBuilder(_id: String, xEmbarcaderoApplicationId: String? = nil, xEmbarcaderoAppSecret: String? = nil, xEmbarcaderoMasterSecret: String? = nil) -> RequestBuilder<[GroupName]> {
        var path = "/users/{id}/groups"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "X-Embarcadero-Application-Id": xEmbarcaderoApplicationId,
            "X-Embarcadero-App-Secret": xEmbarcaderoAppSecret,
            "X-Embarcadero-Master-Secret": xEmbarcaderoMasterSecret
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[GroupName]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**
     Get Users
     
     - parameter xEmbarcaderoApplicationId: (header)  (optional)
     - parameter xEmbarcaderoAppSecret: (header)  (optional)
     - parameter xEmbarcaderoMasterSecret: (header)  (optional)
     - parameter skip: (query) users skipped (optional)
     - parameter limit: (query) maximum number of results to return (optional)
     - parameter order: (query) order ascending or descending (asc, desc) (optional)
     - parameter _where: (query) filter operators (lt, lte, gt, gte, eq, neq, like, nlike) (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getUsers(xEmbarcaderoApplicationId: String? = nil, xEmbarcaderoAppSecret: String? = nil, xEmbarcaderoMasterSecret: String? = nil, skip: Double? = nil, limit: Double? = nil, order: Double? = nil, _where: String? = nil, completion: @escaping ((_ data: [UserObject]?,_ error: Error?) -> Void)) {
        getUsersWithRequestBuilder(xEmbarcaderoApplicationId: xEmbarcaderoApplicationId, xEmbarcaderoAppSecret: xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret: xEmbarcaderoMasterSecret, skip: skip, limit: limit, order: order, _where: _where).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get Users
     - GET /users
     -  |      Used to retrieve all data from `Users`.      Optional query param of **skip, limit, order, where** determines       size of returned array, filtered and order by.
     - examples: [{contentType=application/json, example=[ {
  "_meta" : {
    "creator" : "creator",
    "created" : "created",
    "updated" : "updated"
  },
  "id" : "id",
  "username" : "username"
}, {
  "_meta" : {
    "creator" : "creator",
    "created" : "created",
    "updated" : "updated"
  },
  "id" : "id",
  "username" : "username"
} ]}]
     
     - parameter xEmbarcaderoApplicationId: (header)  (optional)
     - parameter xEmbarcaderoAppSecret: (header)  (optional)
     - parameter xEmbarcaderoMasterSecret: (header)  (optional)
     - parameter skip: (query) users skipped (optional)
     - parameter limit: (query) maximum number of results to return (optional)
     - parameter order: (query) order ascending or descending (asc, desc) (optional)
     - parameter _where: (query) filter operators (lt, lte, gt, gte, eq, neq, like, nlike) (optional)

     - returns: RequestBuilder<[UserObject]> 
     */
    open class func getUsersWithRequestBuilder(xEmbarcaderoApplicationId: String? = nil, xEmbarcaderoAppSecret: String? = nil, xEmbarcaderoMasterSecret: String? = nil, skip: Double? = nil, limit: Double? = nil, order: Double? = nil, _where: String? = nil) -> RequestBuilder<[UserObject]> {
        let path = "/users"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "skip": skip, 
            "limit": limit, 
            "order": order, 
            "where": _where
        ])
        let nillableHeaders: [String: Any?] = [
            "X-Embarcadero-Application-Id": xEmbarcaderoApplicationId,
            "X-Embarcadero-App-Secret": xEmbarcaderoAppSecret,
            "X-Embarcadero-Master-Secret": xEmbarcaderoMasterSecret
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[UserObject]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**
     Log In
     
     - parameter body: (body) A user object 
     - parameter xEmbarcaderoApplicationId: (header)  (optional)
     - parameter xEmbarcaderoAppSecret: (header)  (optional)
     - parameter xEmbarcaderoMasterSecret: (header)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func loginUser(body: UserCredentialsObject, xEmbarcaderoApplicationId: String? = nil, xEmbarcaderoAppSecret: String? = nil, xEmbarcaderoMasterSecret: String? = nil, completion: @escaping ((_ data: UserTokenObject?,_ error: Error?) -> Void)) {
        loginUserWithRequestBuilder(body: body, xEmbarcaderoApplicationId: xEmbarcaderoApplicationId, xEmbarcaderoAppSecret: xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret: xEmbarcaderoMasterSecret).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Log In
     - POST /users/login
     -  |      Logs in to the EMS Server with a specific EMS User.
     - examples: [{contentType=application/json, example={
  "_meta" : {
    "creator" : "creator",
    "created" : "created",
    "updated" : "updated"
  },
  "id" : "id",
  "sessiontoken" : "sessiontoken",
  "username" : "username"
}}]
     
     - parameter body: (body) A user object 
     - parameter xEmbarcaderoApplicationId: (header)  (optional)
     - parameter xEmbarcaderoAppSecret: (header)  (optional)
     - parameter xEmbarcaderoMasterSecret: (header)  (optional)

     - returns: RequestBuilder<UserTokenObject> 
     */
    open class func loginUserWithRequestBuilder(body: UserCredentialsObject, xEmbarcaderoApplicationId: String? = nil, xEmbarcaderoAppSecret: String? = nil, xEmbarcaderoMasterSecret: String? = nil) -> RequestBuilder<UserTokenObject> {
        let path = "/users/login"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "X-Embarcadero-Application-Id": xEmbarcaderoApplicationId,
            "X-Embarcadero-App-Secret": xEmbarcaderoAppSecret,
            "X-Embarcadero-Master-Secret": xEmbarcaderoMasterSecret
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<UserTokenObject>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true, headers: headerParameters)
    }

    /**
     sPostLogoutSummaryTitle
     
     - parameter xEmbarcaderoApplicationId: (header)  (optional)
     - parameter xEmbarcaderoAppSecret: (header)  (optional)
     - parameter xEmbarcaderoMasterSecret: (header)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func logoutUser(xEmbarcaderoApplicationId: String? = nil, xEmbarcaderoAppSecret: String? = nil, xEmbarcaderoMasterSecret: String? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        logoutUserWithRequestBuilder(xEmbarcaderoApplicationId: xEmbarcaderoApplicationId, xEmbarcaderoAppSecret: xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret: xEmbarcaderoMasterSecret).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     sPostLogoutSummaryTitle
     - POST /users/logout
     - sPostLogoutSummaryDesc
     
     - parameter xEmbarcaderoApplicationId: (header)  (optional)
     - parameter xEmbarcaderoAppSecret: (header)  (optional)
     - parameter xEmbarcaderoMasterSecret: (header)  (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func logoutUserWithRequestBuilder(xEmbarcaderoApplicationId: String? = nil, xEmbarcaderoAppSecret: String? = nil, xEmbarcaderoMasterSecret: String? = nil) -> RequestBuilder<Void> {
        let path = "/users/logout"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "X-Embarcadero-Application-Id": xEmbarcaderoApplicationId,
            "X-Embarcadero-App-Secret": xEmbarcaderoAppSecret,
            "X-Embarcadero-Master-Secret": xEmbarcaderoMasterSecret
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**
     Sign Up  User
     
     - parameter body: (body) Object to sign up a new EMS User in the EMS Server 
     - parameter xEmbarcaderoApplicationId: (header)  (optional)
     - parameter xEmbarcaderoAppSecret: (header)  (optional)
     - parameter xEmbarcaderoMasterSecret: (header)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func signupUser(body: UserCredentialsObject, xEmbarcaderoApplicationId: String? = nil, xEmbarcaderoAppSecret: String? = nil, xEmbarcaderoMasterSecret: String? = nil, completion: @escaping ((_ data: UserSignUpResponseObject?,_ error: Error?) -> Void)) {
        signupUserWithRequestBuilder(body: body, xEmbarcaderoApplicationId: xEmbarcaderoApplicationId, xEmbarcaderoAppSecret: xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret: xEmbarcaderoMasterSecret).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Sign Up  User
     - POST /users/signup
     -  |      Signs up to the EMS Server with an appropriate EMS User.
     - examples: [{contentType=application/json, example={
  "sessionToken" : "sessionToken",
  "_id" : "_id"
}}]
     
     - parameter body: (body) Object to sign up a new EMS User in the EMS Server 
     - parameter xEmbarcaderoApplicationId: (header)  (optional)
     - parameter xEmbarcaderoAppSecret: (header)  (optional)
     - parameter xEmbarcaderoMasterSecret: (header)  (optional)

     - returns: RequestBuilder<UserSignUpResponseObject> 
     */
    open class func signupUserWithRequestBuilder(body: UserCredentialsObject, xEmbarcaderoApplicationId: String? = nil, xEmbarcaderoAppSecret: String? = nil, xEmbarcaderoMasterSecret: String? = nil) -> RequestBuilder<UserSignUpResponseObject> {
        let path = "/users/signup"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "X-Embarcadero-Application-Id": xEmbarcaderoApplicationId,
            "X-Embarcadero-App-Secret": xEmbarcaderoAppSecret,
            "X-Embarcadero-Master-Secret": xEmbarcaderoMasterSecret
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<UserSignUpResponseObject>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true, headers: headerParameters)
    }

    /**
     Update User
     
     - parameter _id: (path) A user ID 
     - parameter body: (body) Add any fieldName 
     - parameter xEmbarcaderoApplicationId: (header)  (optional)
     - parameter xEmbarcaderoAppSecret: (header)  (optional)
     - parameter xEmbarcaderoMasterSecret: (header)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func updateUser(_id: String, body: UpdateObject, xEmbarcaderoApplicationId: String? = nil, xEmbarcaderoAppSecret: String? = nil, xEmbarcaderoMasterSecret: String? = nil, completion: @escaping ((_ data: UpdatedObject?,_ error: Error?) -> Void)) {
        updateUserWithRequestBuilder(_id: _id, body: body, xEmbarcaderoApplicationId: xEmbarcaderoApplicationId, xEmbarcaderoAppSecret: xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret: xEmbarcaderoMasterSecret).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Update User
     - PUT /users/{id}
     -  |      Used to update a `User`. **id** is the unique EMS User identifier (UID) in the EMS database.
     - examples: [{contentType=application/json, example={
  "updated" : "updated"
}}]
     
     - parameter _id: (path) A user ID 
     - parameter body: (body) Add any fieldName 
     - parameter xEmbarcaderoApplicationId: (header)  (optional)
     - parameter xEmbarcaderoAppSecret: (header)  (optional)
     - parameter xEmbarcaderoMasterSecret: (header)  (optional)

     - returns: RequestBuilder<UpdatedObject> 
     */
    open class func updateUserWithRequestBuilder(_id: String, body: UpdateObject, xEmbarcaderoApplicationId: String? = nil, xEmbarcaderoAppSecret: String? = nil, xEmbarcaderoMasterSecret: String? = nil) -> RequestBuilder<UpdatedObject> {
        var path = "/users/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "X-Embarcadero-Application-Id": xEmbarcaderoApplicationId,
            "X-Embarcadero-App-Secret": xEmbarcaderoAppSecret,
            "X-Embarcadero-Master-Secret": xEmbarcaderoMasterSecret
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<UpdatedObject>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true, headers: headerParameters)
    }

}
