#import <Foundation/Foundation.h>
#import "SWGFieldGroupObject.h"
#import "SWGGroupAddObject.h"
#import "SWGGroupObject.h"
#import "SWGUpdateGroupObject.h"
#import "SWGUpdatedGroupObject.h"
#import "SWGApi.h"

/**
* EMS API Documentation
* Enterprise Mobility Services API      [Learn about EMS](https://www.embarcadero.com/products/rad-studio/enterprise-mobility-services)      EMS (Enterprise Mobility Services) offers a Mobile Enterprise Application Platform (MEAP)      TurnKey Middleware for Interconnected Distributed Apps
*
* OpenAPI spec version: 0.0.0
* 
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/



@interface SWGGroupsApi: NSObject <SWGApi>

extern NSString* kSWGGroupsApiErrorDomain;
extern NSInteger kSWGGroupsApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(SWGApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// Add Group
///  |      Used to add a new `Group` object to the EMS database.
///
/// @param body Object to sign up a new EMS User in the EMS Server
/// @param xEmbarcaderoApplicationId  (optional)
/// @param xEmbarcaderoAppSecret  (optional)
/// @param xEmbarcaderoMasterSecret  (optional)
/// 
///  code:200 message:"OK",
///  code:404 message:"Group already exist"
///
/// @return void
-(NSURLSessionTask*) addGroupWithBody: (SWGGroupAddObject*) body
    xEmbarcaderoApplicationId: (NSString*) xEmbarcaderoApplicationId
    xEmbarcaderoAppSecret: (NSString*) xEmbarcaderoAppSecret
    xEmbarcaderoMasterSecret: (NSString*) xEmbarcaderoMasterSecret
    completionHandler: (void (^)(NSError* error)) handler;


/// Delete Group
///  |      Used to delete a `Group`. **item** is the unique EMS Group name in the EMS database.
///
/// @param item A group name
/// @param xEmbarcaderoApplicationId  (optional)
/// @param xEmbarcaderoAppSecret  (optional)
/// @param xEmbarcaderoMasterSecret  (optional)
/// 
///  code:204 message:"No Content",
///  code:404 message:"Group not found"
///
/// @return void
-(NSURLSessionTask*) deleteGroupWithItem: (NSString*) item
    xEmbarcaderoApplicationId: (NSString*) xEmbarcaderoApplicationId
    xEmbarcaderoAppSecret: (NSString*) xEmbarcaderoAppSecret
    xEmbarcaderoMasterSecret: (NSString*) xEmbarcaderoMasterSecret
    completionHandler: (void (^)(NSError* error)) handler;


/// Get Group
///  |      Used to retrieve all data from a `Group`. **item** is the unique EMS Group name in the EMS database.
///
/// @param item A group name
/// @param xEmbarcaderoApplicationId  (optional)
/// @param xEmbarcaderoAppSecret  (optional)
/// @param xEmbarcaderoMasterSecret  (optional)
/// 
///  code:200 message:"OK"
///
/// @return SWGGroupObject*
-(NSURLSessionTask*) getGroupWithItem: (NSString*) item
    xEmbarcaderoApplicationId: (NSString*) xEmbarcaderoApplicationId
    xEmbarcaderoAppSecret: (NSString*) xEmbarcaderoAppSecret
    xEmbarcaderoMasterSecret: (NSString*) xEmbarcaderoMasterSecret
    completionHandler: (void (^)(SWGGroupObject* output, NSError* error)) handler;


/// Get Fields
///  |      Used to retrieve all the `field names` of the EMS Group (including the custom fields).
///
/// @param xEmbarcaderoApplicationId  (optional)
/// @param xEmbarcaderoAppSecret  (optional)
/// @param xEmbarcaderoMasterSecret  (optional)
/// 
///  code:200 message:"OK"
///
/// @return NSArray<SWGFieldGroupObject>*
-(NSURLSessionTask*) getGroupFieldsWithXEmbarcaderoApplicationId: (NSString*) xEmbarcaderoApplicationId
    xEmbarcaderoAppSecret: (NSString*) xEmbarcaderoAppSecret
    xEmbarcaderoMasterSecret: (NSString*) xEmbarcaderoMasterSecret
    completionHandler: (void (^)(NSArray<SWGFieldGroupObject>* output, NSError* error)) handler;


/// Get Groups
///  |      Used to retrieve all data from `Groups`.      Optional query param of **skip, limit, order, where** determines       size of returned array, filtered and order by.
///
/// @param xEmbarcaderoApplicationId  (optional)
/// @param xEmbarcaderoAppSecret  (optional)
/// @param xEmbarcaderoMasterSecret  (optional)
/// @param skip users skipped (optional)
/// @param limit maximum number of results to return (optional)
/// @param order order ascending or descending (asc, desc) (optional)
/// @param where filter operators (lt, lte, gt, gte, eq, neq, like, nlike) (optional)
/// 
///  code:200 message:"OK",
///  code:400 message:"Bad Request"
///
/// @return NSArray<SWGGroupObject>*
-(NSURLSessionTask*) getGroupsWithXEmbarcaderoApplicationId: (NSString*) xEmbarcaderoApplicationId
    xEmbarcaderoAppSecret: (NSString*) xEmbarcaderoAppSecret
    xEmbarcaderoMasterSecret: (NSString*) xEmbarcaderoMasterSecret
    skip: (NSNumber*) skip
    limit: (NSNumber*) limit
    order: (NSNumber*) order
    where: (NSString*) where
    completionHandler: (void (^)(NSArray<SWGGroupObject>* output, NSError* error)) handler;


/// Update Group
///  |      Used to update a `Group`. **item** is the unique EMS Group name in the EMS database.
///
/// @param item A group name
/// @param body Object to sign up a new EMS User in the EMS Server
/// @param xEmbarcaderoApplicationId  (optional)
/// @param xEmbarcaderoAppSecret  (optional)
/// @param xEmbarcaderoMasterSecret  (optional)
/// 
///  code:200 message:"OK",
///  code:404 message:"Group not found / User not found"
///
/// @return SWGUpdatedGroupObject*
-(NSURLSessionTask*) updateGroupWithItem: (NSString*) item
    body: (SWGUpdateGroupObject*) body
    xEmbarcaderoApplicationId: (NSString*) xEmbarcaderoApplicationId
    xEmbarcaderoAppSecret: (NSString*) xEmbarcaderoAppSecret
    xEmbarcaderoMasterSecret: (NSString*) xEmbarcaderoMasterSecret
    completionHandler: (void (^)(SWGUpdatedGroupObject* output, NSError* error)) handler;



@end
