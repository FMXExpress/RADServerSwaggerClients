=begin comment

EMS API Documentation

Enterprise Mobility Services API      [Learn about EMS](https://www.embarcadero.com/products/rad-studio/enterprise-mobility-services)      EMS (Enterprise Mobility Services) offers a Mobile Enterprise Application Platform (MEAP)      TurnKey Middleware for Interconnected Distributed Apps

OpenAPI spec version: 0.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git

=end comment

=cut

#
# NOTE: This class is auto generated by the swagger code generator program. 
# Do not edit the class manually.
# Ref: https://github.com/swagger-api/swagger-codegen
#
package WWW::SwaggerClient::EdgeModulesInvokersApi;

require 5.6.0;
use strict;
use warnings;
use utf8; 
use Exporter;
use Carp qw( croak );
use Log::Any qw($log);

use WWW::SwaggerClient::ApiClient;

use base "Class::Data::Inheritable";

__PACKAGE__->mk_classdata('method_documentation' => {});

sub new {
    my $class = shift;
    my $api_client;

    if ($_[0] && ref $_[0] && ref $_[0] eq 'WWW::SwaggerClient::ApiClient' ) {
        $api_client = $_[0];
    } else {
        $api_client = WWW::SwaggerClient::ApiClient->new(@_);
    }

    bless { api_client => $api_client }, $class;

}


#
# delete_resource_endpoint
#
# Invoke Resource Delete Method
# 
# @param string $mname Is the EMS EdgeModule name (required)
# @param string $rname Is the unique EMS EdgeModule Resource name (required)
# @param string $x_embarcadero_application_id  (optional)
# @param string $x_embarcadero_app_secret  (optional)
# @param string $x_embarcadero_master_secret  (optional)
{
    my $params = {
    'mname' => {
        data_type => 'string',
        description => 'Is the EMS EdgeModule name',
        required => '1',
    },
    'rname' => {
        data_type => 'string',
        description => 'Is the unique EMS EdgeModule Resource name',
        required => '1',
    },
    'x_embarcadero_application_id' => {
        data_type => 'string',
        description => '',
        required => '0',
    },
    'x_embarcadero_app_secret' => {
        data_type => 'string',
        description => '',
        required => '0',
    },
    'x_embarcadero_master_secret' => {
        data_type => 'string',
        description => '',
        required => '0',
    },
    };
    __PACKAGE__->method_documentation->{ 'delete_resource_endpoint' } = { 
    	summary => 'Invoke Resource Delete Method',
        params => $params,
        returns => undef,
        };
}
# @return void
#
sub delete_resource_endpoint {
    my ($self, %args) = @_;

    # verify the required parameter 'mname' is set
    unless (exists $args{'mname'}) {
      croak("Missing the required parameter 'mname' when calling delete_resource_endpoint");
    }

    # verify the required parameter 'rname' is set
    unless (exists $args{'rname'}) {
      croak("Missing the required parameter 'rname' when calling delete_resource_endpoint");
    }

    # parse inputs
    my $_resource_path = '/edgemodules/{mname}/{rname}';

    my $_method = 'DELETE';
    my $query_params = {};
    my $header_params = {};
    my $form_params = {};

    # 'Accept' and 'Content-Type' header
    my $_header_accept = $self->{api_client}->select_header_accept();
    if ($_header_accept) {
        $header_params->{'Accept'} = $_header_accept;
    }
    $header_params->{'Content-Type'} = $self->{api_client}->select_header_content_type();

    # header params
    if ( exists $args{'x_embarcadero_application_id'}) {
        $header_params->{'X-Embarcadero-Application-Id'} = $self->{api_client}->to_header_value($args{'x_embarcadero_application_id'});
    }

    # header params
    if ( exists $args{'x_embarcadero_app_secret'}) {
        $header_params->{'X-Embarcadero-App-Secret'} = $self->{api_client}->to_header_value($args{'x_embarcadero_app_secret'});
    }

    # header params
    if ( exists $args{'x_embarcadero_master_secret'}) {
        $header_params->{'X-Embarcadero-Master-Secret'} = $self->{api_client}->to_header_value($args{'x_embarcadero_master_secret'});
    }

    # path params
    if ( exists $args{'mname'}) {
        my $_base_variable = "{" . "mname" . "}";
        my $_base_value = $self->{api_client}->to_path_value($args{'mname'});
        $_resource_path =~ s/$_base_variable/$_base_value/g;
    }

    # path params
    if ( exists $args{'rname'}) {
        my $_base_variable = "{" . "rname" . "}";
        my $_base_value = $self->{api_client}->to_path_value($args{'rname'});
        $_resource_path =~ s/$_base_variable/$_base_value/g;
    }

    my $_body_data;
    # authentication setting, if any
    my $auth_settings = [qw()];

    # make the API Call
    $self->{api_client}->call_api($_resource_path, $_method,
                                           $query_params, $form_params,
                                           $header_params, $_body_data, $auth_settings);
    return;
}

#
# delete_resource_endpoint_item
#
# Invoke Resource/* Delete Method
# 
# @param string $mname Is the EMS EdgeModule name (required)
# @param string $rname Is the unique EMS EdgeModule Resource name (required)
# @param string $wildcard Is the Wild card part of the URL (required)
# @param string $x_embarcadero_application_id  (optional)
# @param string $x_embarcadero_app_secret  (optional)
# @param string $x_embarcadero_master_secret  (optional)
{
    my $params = {
    'mname' => {
        data_type => 'string',
        description => 'Is the EMS EdgeModule name',
        required => '1',
    },
    'rname' => {
        data_type => 'string',
        description => 'Is the unique EMS EdgeModule Resource name',
        required => '1',
    },
    'wildcard' => {
        data_type => 'string',
        description => 'Is the Wild card part of the URL',
        required => '1',
    },
    'x_embarcadero_application_id' => {
        data_type => 'string',
        description => '',
        required => '0',
    },
    'x_embarcadero_app_secret' => {
        data_type => 'string',
        description => '',
        required => '0',
    },
    'x_embarcadero_master_secret' => {
        data_type => 'string',
        description => '',
        required => '0',
    },
    };
    __PACKAGE__->method_documentation->{ 'delete_resource_endpoint_item' } = { 
    	summary => 'Invoke Resource/* Delete Method',
        params => $params,
        returns => undef,
        };
}
# @return void
#
sub delete_resource_endpoint_item {
    my ($self, %args) = @_;

    # verify the required parameter 'mname' is set
    unless (exists $args{'mname'}) {
      croak("Missing the required parameter 'mname' when calling delete_resource_endpoint_item");
    }

    # verify the required parameter 'rname' is set
    unless (exists $args{'rname'}) {
      croak("Missing the required parameter 'rname' when calling delete_resource_endpoint_item");
    }

    # verify the required parameter 'wildcard' is set
    unless (exists $args{'wildcard'}) {
      croak("Missing the required parameter 'wildcard' when calling delete_resource_endpoint_item");
    }

    # parse inputs
    my $_resource_path = '/edgemodules/{mname}/{rname}/{wildcard}';

    my $_method = 'DELETE';
    my $query_params = {};
    my $header_params = {};
    my $form_params = {};

    # 'Accept' and 'Content-Type' header
    my $_header_accept = $self->{api_client}->select_header_accept();
    if ($_header_accept) {
        $header_params->{'Accept'} = $_header_accept;
    }
    $header_params->{'Content-Type'} = $self->{api_client}->select_header_content_type();

    # header params
    if ( exists $args{'x_embarcadero_application_id'}) {
        $header_params->{'X-Embarcadero-Application-Id'} = $self->{api_client}->to_header_value($args{'x_embarcadero_application_id'});
    }

    # header params
    if ( exists $args{'x_embarcadero_app_secret'}) {
        $header_params->{'X-Embarcadero-App-Secret'} = $self->{api_client}->to_header_value($args{'x_embarcadero_app_secret'});
    }

    # header params
    if ( exists $args{'x_embarcadero_master_secret'}) {
        $header_params->{'X-Embarcadero-Master-Secret'} = $self->{api_client}->to_header_value($args{'x_embarcadero_master_secret'});
    }

    # path params
    if ( exists $args{'mname'}) {
        my $_base_variable = "{" . "mname" . "}";
        my $_base_value = $self->{api_client}->to_path_value($args{'mname'});
        $_resource_path =~ s/$_base_variable/$_base_value/g;
    }

    # path params
    if ( exists $args{'rname'}) {
        my $_base_variable = "{" . "rname" . "}";
        my $_base_value = $self->{api_client}->to_path_value($args{'rname'});
        $_resource_path =~ s/$_base_variable/$_base_value/g;
    }

    # path params
    if ( exists $args{'wildcard'}) {
        my $_base_variable = "{" . "wildcard" . "}";
        my $_base_value = $self->{api_client}->to_path_value($args{'wildcard'});
        $_resource_path =~ s/$_base_variable/$_base_value/g;
    }

    my $_body_data;
    # authentication setting, if any
    my $auth_settings = [qw()];

    # make the API Call
    $self->{api_client}->call_api($_resource_path, $_method,
                                           $query_params, $form_params,
                                           $header_params, $_body_data, $auth_settings);
    return;
}

#
# get_resource_endpoint
#
# Invoke Resource Get Method
# 
# @param string $mname Is the EMS EdgeModule name (required)
# @param string $rname Is the unique EMS EdgeModule Resource name (required)
# @param string $x_embarcadero_application_id  (optional)
# @param string $x_embarcadero_app_secret  (optional)
# @param string $x_embarcadero_master_secret  (optional)
{
    my $params = {
    'mname' => {
        data_type => 'string',
        description => 'Is the EMS EdgeModule name',
        required => '1',
    },
    'rname' => {
        data_type => 'string',
        description => 'Is the unique EMS EdgeModule Resource name',
        required => '1',
    },
    'x_embarcadero_application_id' => {
        data_type => 'string',
        description => '',
        required => '0',
    },
    'x_embarcadero_app_secret' => {
        data_type => 'string',
        description => '',
        required => '0',
    },
    'x_embarcadero_master_secret' => {
        data_type => 'string',
        description => '',
        required => '0',
    },
    };
    __PACKAGE__->method_documentation->{ 'get_resource_endpoint' } = { 
    	summary => 'Invoke Resource Get Method',
        params => $params,
        returns => undef,
        };
}
# @return void
#
sub get_resource_endpoint {
    my ($self, %args) = @_;

    # verify the required parameter 'mname' is set
    unless (exists $args{'mname'}) {
      croak("Missing the required parameter 'mname' when calling get_resource_endpoint");
    }

    # verify the required parameter 'rname' is set
    unless (exists $args{'rname'}) {
      croak("Missing the required parameter 'rname' when calling get_resource_endpoint");
    }

    # parse inputs
    my $_resource_path = '/edgemodules/{mname}/{rname}';

    my $_method = 'GET';
    my $query_params = {};
    my $header_params = {};
    my $form_params = {};

    # 'Accept' and 'Content-Type' header
    my $_header_accept = $self->{api_client}->select_header_accept('application/json');
    if ($_header_accept) {
        $header_params->{'Accept'} = $_header_accept;
    }
    $header_params->{'Content-Type'} = $self->{api_client}->select_header_content_type();

    # header params
    if ( exists $args{'x_embarcadero_application_id'}) {
        $header_params->{'X-Embarcadero-Application-Id'} = $self->{api_client}->to_header_value($args{'x_embarcadero_application_id'});
    }

    # header params
    if ( exists $args{'x_embarcadero_app_secret'}) {
        $header_params->{'X-Embarcadero-App-Secret'} = $self->{api_client}->to_header_value($args{'x_embarcadero_app_secret'});
    }

    # header params
    if ( exists $args{'x_embarcadero_master_secret'}) {
        $header_params->{'X-Embarcadero-Master-Secret'} = $self->{api_client}->to_header_value($args{'x_embarcadero_master_secret'});
    }

    # path params
    if ( exists $args{'mname'}) {
        my $_base_variable = "{" . "mname" . "}";
        my $_base_value = $self->{api_client}->to_path_value($args{'mname'});
        $_resource_path =~ s/$_base_variable/$_base_value/g;
    }

    # path params
    if ( exists $args{'rname'}) {
        my $_base_variable = "{" . "rname" . "}";
        my $_base_value = $self->{api_client}->to_path_value($args{'rname'});
        $_resource_path =~ s/$_base_variable/$_base_value/g;
    }

    my $_body_data;
    # authentication setting, if any
    my $auth_settings = [qw()];

    # make the API Call
    $self->{api_client}->call_api($_resource_path, $_method,
                                           $query_params, $form_params,
                                           $header_params, $_body_data, $auth_settings);
    return;
}

#
# get_resource_endpoint_item
#
# Invoke Resource/* Get Method
# 
# @param string $mname Is the EMS EdgeModule name (required)
# @param string $rname Is the unique EMS EdgeModule Resource name (required)
# @param string $wildcard Is the Wild card part of the URL (required)
# @param string $x_embarcadero_application_id  (optional)
# @param string $x_embarcadero_app_secret  (optional)
# @param string $x_embarcadero_master_secret  (optional)
{
    my $params = {
    'mname' => {
        data_type => 'string',
        description => 'Is the EMS EdgeModule name',
        required => '1',
    },
    'rname' => {
        data_type => 'string',
        description => 'Is the unique EMS EdgeModule Resource name',
        required => '1',
    },
    'wildcard' => {
        data_type => 'string',
        description => 'Is the Wild card part of the URL',
        required => '1',
    },
    'x_embarcadero_application_id' => {
        data_type => 'string',
        description => '',
        required => '0',
    },
    'x_embarcadero_app_secret' => {
        data_type => 'string',
        description => '',
        required => '0',
    },
    'x_embarcadero_master_secret' => {
        data_type => 'string',
        description => '',
        required => '0',
    },
    };
    __PACKAGE__->method_documentation->{ 'get_resource_endpoint_item' } = { 
    	summary => 'Invoke Resource/* Get Method',
        params => $params,
        returns => undef,
        };
}
# @return void
#
sub get_resource_endpoint_item {
    my ($self, %args) = @_;

    # verify the required parameter 'mname' is set
    unless (exists $args{'mname'}) {
      croak("Missing the required parameter 'mname' when calling get_resource_endpoint_item");
    }

    # verify the required parameter 'rname' is set
    unless (exists $args{'rname'}) {
      croak("Missing the required parameter 'rname' when calling get_resource_endpoint_item");
    }

    # verify the required parameter 'wildcard' is set
    unless (exists $args{'wildcard'}) {
      croak("Missing the required parameter 'wildcard' when calling get_resource_endpoint_item");
    }

    # parse inputs
    my $_resource_path = '/edgemodules/{mname}/{rname}/{wildcard}';

    my $_method = 'GET';
    my $query_params = {};
    my $header_params = {};
    my $form_params = {};

    # 'Accept' and 'Content-Type' header
    my $_header_accept = $self->{api_client}->select_header_accept();
    if ($_header_accept) {
        $header_params->{'Accept'} = $_header_accept;
    }
    $header_params->{'Content-Type'} = $self->{api_client}->select_header_content_type();

    # header params
    if ( exists $args{'x_embarcadero_application_id'}) {
        $header_params->{'X-Embarcadero-Application-Id'} = $self->{api_client}->to_header_value($args{'x_embarcadero_application_id'});
    }

    # header params
    if ( exists $args{'x_embarcadero_app_secret'}) {
        $header_params->{'X-Embarcadero-App-Secret'} = $self->{api_client}->to_header_value($args{'x_embarcadero_app_secret'});
    }

    # header params
    if ( exists $args{'x_embarcadero_master_secret'}) {
        $header_params->{'X-Embarcadero-Master-Secret'} = $self->{api_client}->to_header_value($args{'x_embarcadero_master_secret'});
    }

    # path params
    if ( exists $args{'mname'}) {
        my $_base_variable = "{" . "mname" . "}";
        my $_base_value = $self->{api_client}->to_path_value($args{'mname'});
        $_resource_path =~ s/$_base_variable/$_base_value/g;
    }

    # path params
    if ( exists $args{'rname'}) {
        my $_base_variable = "{" . "rname" . "}";
        my $_base_value = $self->{api_client}->to_path_value($args{'rname'});
        $_resource_path =~ s/$_base_variable/$_base_value/g;
    }

    # path params
    if ( exists $args{'wildcard'}) {
        my $_base_variable = "{" . "wildcard" . "}";
        my $_base_value = $self->{api_client}->to_path_value($args{'wildcard'});
        $_resource_path =~ s/$_base_variable/$_base_value/g;
    }

    my $_body_data;
    # authentication setting, if any
    my $auth_settings = [qw()];

    # make the API Call
    $self->{api_client}->call_api($_resource_path, $_method,
                                           $query_params, $form_params,
                                           $header_params, $_body_data, $auth_settings);
    return;
}

#
# patch_resource_endpoint
#
# Invoke Resource Patch Method
# 
# @param string $mname Is the EMS EdgeModule name (required)
# @param string $rname Is the unique EMS EdgeModule Resource name (required)
# @param object $body Body Object (required)
# @param string $x_embarcadero_application_id  (optional)
# @param string $x_embarcadero_app_secret  (optional)
# @param string $x_embarcadero_master_secret  (optional)
{
    my $params = {
    'mname' => {
        data_type => 'string',
        description => 'Is the EMS EdgeModule name',
        required => '1',
    },
    'rname' => {
        data_type => 'string',
        description => 'Is the unique EMS EdgeModule Resource name',
        required => '1',
    },
    'body' => {
        data_type => 'object',
        description => 'Body Object',
        required => '1',
    },
    'x_embarcadero_application_id' => {
        data_type => 'string',
        description => '',
        required => '0',
    },
    'x_embarcadero_app_secret' => {
        data_type => 'string',
        description => '',
        required => '0',
    },
    'x_embarcadero_master_secret' => {
        data_type => 'string',
        description => '',
        required => '0',
    },
    };
    __PACKAGE__->method_documentation->{ 'patch_resource_endpoint' } = { 
    	summary => 'Invoke Resource Patch Method',
        params => $params,
        returns => undef,
        };
}
# @return void
#
sub patch_resource_endpoint {
    my ($self, %args) = @_;

    # verify the required parameter 'mname' is set
    unless (exists $args{'mname'}) {
      croak("Missing the required parameter 'mname' when calling patch_resource_endpoint");
    }

    # verify the required parameter 'rname' is set
    unless (exists $args{'rname'}) {
      croak("Missing the required parameter 'rname' when calling patch_resource_endpoint");
    }

    # verify the required parameter 'body' is set
    unless (exists $args{'body'}) {
      croak("Missing the required parameter 'body' when calling patch_resource_endpoint");
    }

    # parse inputs
    my $_resource_path = '/edgemodules/{mname}/{rname}';

    my $_method = 'PATCH';
    my $query_params = {};
    my $header_params = {};
    my $form_params = {};

    # 'Accept' and 'Content-Type' header
    my $_header_accept = $self->{api_client}->select_header_accept('application/json');
    if ($_header_accept) {
        $header_params->{'Accept'} = $_header_accept;
    }
    $header_params->{'Content-Type'} = $self->{api_client}->select_header_content_type('application/json');

    # header params
    if ( exists $args{'x_embarcadero_application_id'}) {
        $header_params->{'X-Embarcadero-Application-Id'} = $self->{api_client}->to_header_value($args{'x_embarcadero_application_id'});
    }

    # header params
    if ( exists $args{'x_embarcadero_app_secret'}) {
        $header_params->{'X-Embarcadero-App-Secret'} = $self->{api_client}->to_header_value($args{'x_embarcadero_app_secret'});
    }

    # header params
    if ( exists $args{'x_embarcadero_master_secret'}) {
        $header_params->{'X-Embarcadero-Master-Secret'} = $self->{api_client}->to_header_value($args{'x_embarcadero_master_secret'});
    }

    # path params
    if ( exists $args{'mname'}) {
        my $_base_variable = "{" . "mname" . "}";
        my $_base_value = $self->{api_client}->to_path_value($args{'mname'});
        $_resource_path =~ s/$_base_variable/$_base_value/g;
    }

    # path params
    if ( exists $args{'rname'}) {
        my $_base_variable = "{" . "rname" . "}";
        my $_base_value = $self->{api_client}->to_path_value($args{'rname'});
        $_resource_path =~ s/$_base_variable/$_base_value/g;
    }

    my $_body_data;
    # body params
    if ( exists $args{'body'}) {
        $_body_data = $args{'body'};
    }

    # authentication setting, if any
    my $auth_settings = [qw()];

    # make the API Call
    $self->{api_client}->call_api($_resource_path, $_method,
                                           $query_params, $form_params,
                                           $header_params, $_body_data, $auth_settings);
    return;
}

#
# patch_resource_endpoint_item
#
# Invoke Resource/* Patch Method
# 
# @param string $mname Is the EMS EdgeModule name (required)
# @param string $rname Is the unique EMS EdgeModule Resource name (required)
# @param string $wildcard Is the Wild card part of the URL (required)
# @param object $body Body Object (required)
# @param string $x_embarcadero_application_id  (optional)
# @param string $x_embarcadero_app_secret  (optional)
# @param string $x_embarcadero_master_secret  (optional)
{
    my $params = {
    'mname' => {
        data_type => 'string',
        description => 'Is the EMS EdgeModule name',
        required => '1',
    },
    'rname' => {
        data_type => 'string',
        description => 'Is the unique EMS EdgeModule Resource name',
        required => '1',
    },
    'wildcard' => {
        data_type => 'string',
        description => 'Is the Wild card part of the URL',
        required => '1',
    },
    'body' => {
        data_type => 'object',
        description => 'Body Object',
        required => '1',
    },
    'x_embarcadero_application_id' => {
        data_type => 'string',
        description => '',
        required => '0',
    },
    'x_embarcadero_app_secret' => {
        data_type => 'string',
        description => '',
        required => '0',
    },
    'x_embarcadero_master_secret' => {
        data_type => 'string',
        description => '',
        required => '0',
    },
    };
    __PACKAGE__->method_documentation->{ 'patch_resource_endpoint_item' } = { 
    	summary => 'Invoke Resource/* Patch Method',
        params => $params,
        returns => undef,
        };
}
# @return void
#
sub patch_resource_endpoint_item {
    my ($self, %args) = @_;

    # verify the required parameter 'mname' is set
    unless (exists $args{'mname'}) {
      croak("Missing the required parameter 'mname' when calling patch_resource_endpoint_item");
    }

    # verify the required parameter 'rname' is set
    unless (exists $args{'rname'}) {
      croak("Missing the required parameter 'rname' when calling patch_resource_endpoint_item");
    }

    # verify the required parameter 'wildcard' is set
    unless (exists $args{'wildcard'}) {
      croak("Missing the required parameter 'wildcard' when calling patch_resource_endpoint_item");
    }

    # verify the required parameter 'body' is set
    unless (exists $args{'body'}) {
      croak("Missing the required parameter 'body' when calling patch_resource_endpoint_item");
    }

    # parse inputs
    my $_resource_path = '/edgemodules/{mname}/{rname}/{wildcard}';

    my $_method = 'PATCH';
    my $query_params = {};
    my $header_params = {};
    my $form_params = {};

    # 'Accept' and 'Content-Type' header
    my $_header_accept = $self->{api_client}->select_header_accept('application/json');
    if ($_header_accept) {
        $header_params->{'Accept'} = $_header_accept;
    }
    $header_params->{'Content-Type'} = $self->{api_client}->select_header_content_type('application/json');

    # header params
    if ( exists $args{'x_embarcadero_application_id'}) {
        $header_params->{'X-Embarcadero-Application-Id'} = $self->{api_client}->to_header_value($args{'x_embarcadero_application_id'});
    }

    # header params
    if ( exists $args{'x_embarcadero_app_secret'}) {
        $header_params->{'X-Embarcadero-App-Secret'} = $self->{api_client}->to_header_value($args{'x_embarcadero_app_secret'});
    }

    # header params
    if ( exists $args{'x_embarcadero_master_secret'}) {
        $header_params->{'X-Embarcadero-Master-Secret'} = $self->{api_client}->to_header_value($args{'x_embarcadero_master_secret'});
    }

    # path params
    if ( exists $args{'mname'}) {
        my $_base_variable = "{" . "mname" . "}";
        my $_base_value = $self->{api_client}->to_path_value($args{'mname'});
        $_resource_path =~ s/$_base_variable/$_base_value/g;
    }

    # path params
    if ( exists $args{'rname'}) {
        my $_base_variable = "{" . "rname" . "}";
        my $_base_value = $self->{api_client}->to_path_value($args{'rname'});
        $_resource_path =~ s/$_base_variable/$_base_value/g;
    }

    # path params
    if ( exists $args{'wildcard'}) {
        my $_base_variable = "{" . "wildcard" . "}";
        my $_base_value = $self->{api_client}->to_path_value($args{'wildcard'});
        $_resource_path =~ s/$_base_variable/$_base_value/g;
    }

    my $_body_data;
    # body params
    if ( exists $args{'body'}) {
        $_body_data = $args{'body'};
    }

    # authentication setting, if any
    my $auth_settings = [qw()];

    # make the API Call
    $self->{api_client}->call_api($_resource_path, $_method,
                                           $query_params, $form_params,
                                           $header_params, $_body_data, $auth_settings);
    return;
}

#
# post_resource_endpoint
#
# Invoke Resource Post Method
# 
# @param string $mname Is the EMS EdgeModule name (required)
# @param string $rname Is the unique EMS EdgeModule Resource name (required)
# @param object $body Body Object (required)
# @param string $x_embarcadero_application_id  (optional)
# @param string $x_embarcadero_app_secret  (optional)
# @param string $x_embarcadero_master_secret  (optional)
{
    my $params = {
    'mname' => {
        data_type => 'string',
        description => 'Is the EMS EdgeModule name',
        required => '1',
    },
    'rname' => {
        data_type => 'string',
        description => 'Is the unique EMS EdgeModule Resource name',
        required => '1',
    },
    'body' => {
        data_type => 'object',
        description => 'Body Object',
        required => '1',
    },
    'x_embarcadero_application_id' => {
        data_type => 'string',
        description => '',
        required => '0',
    },
    'x_embarcadero_app_secret' => {
        data_type => 'string',
        description => '',
        required => '0',
    },
    'x_embarcadero_master_secret' => {
        data_type => 'string',
        description => '',
        required => '0',
    },
    };
    __PACKAGE__->method_documentation->{ 'post_resource_endpoint' } = { 
    	summary => 'Invoke Resource Post Method',
        params => $params,
        returns => undef,
        };
}
# @return void
#
sub post_resource_endpoint {
    my ($self, %args) = @_;

    # verify the required parameter 'mname' is set
    unless (exists $args{'mname'}) {
      croak("Missing the required parameter 'mname' when calling post_resource_endpoint");
    }

    # verify the required parameter 'rname' is set
    unless (exists $args{'rname'}) {
      croak("Missing the required parameter 'rname' when calling post_resource_endpoint");
    }

    # verify the required parameter 'body' is set
    unless (exists $args{'body'}) {
      croak("Missing the required parameter 'body' when calling post_resource_endpoint");
    }

    # parse inputs
    my $_resource_path = '/edgemodules/{mname}/{rname}';

    my $_method = 'POST';
    my $query_params = {};
    my $header_params = {};
    my $form_params = {};

    # 'Accept' and 'Content-Type' header
    my $_header_accept = $self->{api_client}->select_header_accept('application/json');
    if ($_header_accept) {
        $header_params->{'Accept'} = $_header_accept;
    }
    $header_params->{'Content-Type'} = $self->{api_client}->select_header_content_type('application/json');

    # header params
    if ( exists $args{'x_embarcadero_application_id'}) {
        $header_params->{'X-Embarcadero-Application-Id'} = $self->{api_client}->to_header_value($args{'x_embarcadero_application_id'});
    }

    # header params
    if ( exists $args{'x_embarcadero_app_secret'}) {
        $header_params->{'X-Embarcadero-App-Secret'} = $self->{api_client}->to_header_value($args{'x_embarcadero_app_secret'});
    }

    # header params
    if ( exists $args{'x_embarcadero_master_secret'}) {
        $header_params->{'X-Embarcadero-Master-Secret'} = $self->{api_client}->to_header_value($args{'x_embarcadero_master_secret'});
    }

    # path params
    if ( exists $args{'mname'}) {
        my $_base_variable = "{" . "mname" . "}";
        my $_base_value = $self->{api_client}->to_path_value($args{'mname'});
        $_resource_path =~ s/$_base_variable/$_base_value/g;
    }

    # path params
    if ( exists $args{'rname'}) {
        my $_base_variable = "{" . "rname" . "}";
        my $_base_value = $self->{api_client}->to_path_value($args{'rname'});
        $_resource_path =~ s/$_base_variable/$_base_value/g;
    }

    my $_body_data;
    # body params
    if ( exists $args{'body'}) {
        $_body_data = $args{'body'};
    }

    # authentication setting, if any
    my $auth_settings = [qw()];

    # make the API Call
    $self->{api_client}->call_api($_resource_path, $_method,
                                           $query_params, $form_params,
                                           $header_params, $_body_data, $auth_settings);
    return;
}

#
# post_resource_endpoint_item
#
# Invoke Resource/* Post Method
# 
# @param string $mname Is the EMS EdgeModule name (required)
# @param string $rname Is the unique EMS EdgeModule Resource name (required)
# @param string $wildcard Is the Wild card part of the URL (required)
# @param object $body Body Object (required)
# @param string $x_embarcadero_application_id  (optional)
# @param string $x_embarcadero_app_secret  (optional)
# @param string $x_embarcadero_master_secret  (optional)
{
    my $params = {
    'mname' => {
        data_type => 'string',
        description => 'Is the EMS EdgeModule name',
        required => '1',
    },
    'rname' => {
        data_type => 'string',
        description => 'Is the unique EMS EdgeModule Resource name',
        required => '1',
    },
    'wildcard' => {
        data_type => 'string',
        description => 'Is the Wild card part of the URL',
        required => '1',
    },
    'body' => {
        data_type => 'object',
        description => 'Body Object',
        required => '1',
    },
    'x_embarcadero_application_id' => {
        data_type => 'string',
        description => '',
        required => '0',
    },
    'x_embarcadero_app_secret' => {
        data_type => 'string',
        description => '',
        required => '0',
    },
    'x_embarcadero_master_secret' => {
        data_type => 'string',
        description => '',
        required => '0',
    },
    };
    __PACKAGE__->method_documentation->{ 'post_resource_endpoint_item' } = { 
    	summary => 'Invoke Resource/* Post Method',
        params => $params,
        returns => undef,
        };
}
# @return void
#
sub post_resource_endpoint_item {
    my ($self, %args) = @_;

    # verify the required parameter 'mname' is set
    unless (exists $args{'mname'}) {
      croak("Missing the required parameter 'mname' when calling post_resource_endpoint_item");
    }

    # verify the required parameter 'rname' is set
    unless (exists $args{'rname'}) {
      croak("Missing the required parameter 'rname' when calling post_resource_endpoint_item");
    }

    # verify the required parameter 'wildcard' is set
    unless (exists $args{'wildcard'}) {
      croak("Missing the required parameter 'wildcard' when calling post_resource_endpoint_item");
    }

    # verify the required parameter 'body' is set
    unless (exists $args{'body'}) {
      croak("Missing the required parameter 'body' when calling post_resource_endpoint_item");
    }

    # parse inputs
    my $_resource_path = '/edgemodules/{mname}/{rname}/{wildcard}';

    my $_method = 'POST';
    my $query_params = {};
    my $header_params = {};
    my $form_params = {};

    # 'Accept' and 'Content-Type' header
    my $_header_accept = $self->{api_client}->select_header_accept('application/json');
    if ($_header_accept) {
        $header_params->{'Accept'} = $_header_accept;
    }
    $header_params->{'Content-Type'} = $self->{api_client}->select_header_content_type('application/json');

    # header params
    if ( exists $args{'x_embarcadero_application_id'}) {
        $header_params->{'X-Embarcadero-Application-Id'} = $self->{api_client}->to_header_value($args{'x_embarcadero_application_id'});
    }

    # header params
    if ( exists $args{'x_embarcadero_app_secret'}) {
        $header_params->{'X-Embarcadero-App-Secret'} = $self->{api_client}->to_header_value($args{'x_embarcadero_app_secret'});
    }

    # header params
    if ( exists $args{'x_embarcadero_master_secret'}) {
        $header_params->{'X-Embarcadero-Master-Secret'} = $self->{api_client}->to_header_value($args{'x_embarcadero_master_secret'});
    }

    # path params
    if ( exists $args{'mname'}) {
        my $_base_variable = "{" . "mname" . "}";
        my $_base_value = $self->{api_client}->to_path_value($args{'mname'});
        $_resource_path =~ s/$_base_variable/$_base_value/g;
    }

    # path params
    if ( exists $args{'rname'}) {
        my $_base_variable = "{" . "rname" . "}";
        my $_base_value = $self->{api_client}->to_path_value($args{'rname'});
        $_resource_path =~ s/$_base_variable/$_base_value/g;
    }

    # path params
    if ( exists $args{'wildcard'}) {
        my $_base_variable = "{" . "wildcard" . "}";
        my $_base_value = $self->{api_client}->to_path_value($args{'wildcard'});
        $_resource_path =~ s/$_base_variable/$_base_value/g;
    }

    my $_body_data;
    # body params
    if ( exists $args{'body'}) {
        $_body_data = $args{'body'};
    }

    # authentication setting, if any
    my $auth_settings = [qw()];

    # make the API Call
    $self->{api_client}->call_api($_resource_path, $_method,
                                           $query_params, $form_params,
                                           $header_params, $_body_data, $auth_settings);
    return;
}

#
# put_resource_endpoint
#
# Invoke Resource Put Method
# 
# @param string $mname Is the EMS EdgeModule name (required)
# @param string $rname Is the unique EMS EdgeModule Resource name (required)
# @param object $body Body Object (required)
# @param string $x_embarcadero_application_id  (optional)
# @param string $x_embarcadero_app_secret  (optional)
# @param string $x_embarcadero_master_secret  (optional)
{
    my $params = {
    'mname' => {
        data_type => 'string',
        description => 'Is the EMS EdgeModule name',
        required => '1',
    },
    'rname' => {
        data_type => 'string',
        description => 'Is the unique EMS EdgeModule Resource name',
        required => '1',
    },
    'body' => {
        data_type => 'object',
        description => 'Body Object',
        required => '1',
    },
    'x_embarcadero_application_id' => {
        data_type => 'string',
        description => '',
        required => '0',
    },
    'x_embarcadero_app_secret' => {
        data_type => 'string',
        description => '',
        required => '0',
    },
    'x_embarcadero_master_secret' => {
        data_type => 'string',
        description => '',
        required => '0',
    },
    };
    __PACKAGE__->method_documentation->{ 'put_resource_endpoint' } = { 
    	summary => 'Invoke Resource Put Method',
        params => $params,
        returns => undef,
        };
}
# @return void
#
sub put_resource_endpoint {
    my ($self, %args) = @_;

    # verify the required parameter 'mname' is set
    unless (exists $args{'mname'}) {
      croak("Missing the required parameter 'mname' when calling put_resource_endpoint");
    }

    # verify the required parameter 'rname' is set
    unless (exists $args{'rname'}) {
      croak("Missing the required parameter 'rname' when calling put_resource_endpoint");
    }

    # verify the required parameter 'body' is set
    unless (exists $args{'body'}) {
      croak("Missing the required parameter 'body' when calling put_resource_endpoint");
    }

    # parse inputs
    my $_resource_path = '/edgemodules/{mname}/{rname}';

    my $_method = 'PUT';
    my $query_params = {};
    my $header_params = {};
    my $form_params = {};

    # 'Accept' and 'Content-Type' header
    my $_header_accept = $self->{api_client}->select_header_accept('application/json');
    if ($_header_accept) {
        $header_params->{'Accept'} = $_header_accept;
    }
    $header_params->{'Content-Type'} = $self->{api_client}->select_header_content_type('application/json');

    # header params
    if ( exists $args{'x_embarcadero_application_id'}) {
        $header_params->{'X-Embarcadero-Application-Id'} = $self->{api_client}->to_header_value($args{'x_embarcadero_application_id'});
    }

    # header params
    if ( exists $args{'x_embarcadero_app_secret'}) {
        $header_params->{'X-Embarcadero-App-Secret'} = $self->{api_client}->to_header_value($args{'x_embarcadero_app_secret'});
    }

    # header params
    if ( exists $args{'x_embarcadero_master_secret'}) {
        $header_params->{'X-Embarcadero-Master-Secret'} = $self->{api_client}->to_header_value($args{'x_embarcadero_master_secret'});
    }

    # path params
    if ( exists $args{'mname'}) {
        my $_base_variable = "{" . "mname" . "}";
        my $_base_value = $self->{api_client}->to_path_value($args{'mname'});
        $_resource_path =~ s/$_base_variable/$_base_value/g;
    }

    # path params
    if ( exists $args{'rname'}) {
        my $_base_variable = "{" . "rname" . "}";
        my $_base_value = $self->{api_client}->to_path_value($args{'rname'});
        $_resource_path =~ s/$_base_variable/$_base_value/g;
    }

    my $_body_data;
    # body params
    if ( exists $args{'body'}) {
        $_body_data = $args{'body'};
    }

    # authentication setting, if any
    my $auth_settings = [qw()];

    # make the API Call
    $self->{api_client}->call_api($_resource_path, $_method,
                                           $query_params, $form_params,
                                           $header_params, $_body_data, $auth_settings);
    return;
}

#
# put_resource_endpoint_item
#
# Invoke Resource/* Put Method
# 
# @param string $mname Is the EMS EdgeModule name (required)
# @param string $rname Is the unique EMS EdgeModule Resource name (required)
# @param string $wildcard Is the Wild card part of the URL (required)
# @param object $body Body Object (required)
# @param string $x_embarcadero_application_id  (optional)
# @param string $x_embarcadero_app_secret  (optional)
# @param string $x_embarcadero_master_secret  (optional)
{
    my $params = {
    'mname' => {
        data_type => 'string',
        description => 'Is the EMS EdgeModule name',
        required => '1',
    },
    'rname' => {
        data_type => 'string',
        description => 'Is the unique EMS EdgeModule Resource name',
        required => '1',
    },
    'wildcard' => {
        data_type => 'string',
        description => 'Is the Wild card part of the URL',
        required => '1',
    },
    'body' => {
        data_type => 'object',
        description => 'Body Object',
        required => '1',
    },
    'x_embarcadero_application_id' => {
        data_type => 'string',
        description => '',
        required => '0',
    },
    'x_embarcadero_app_secret' => {
        data_type => 'string',
        description => '',
        required => '0',
    },
    'x_embarcadero_master_secret' => {
        data_type => 'string',
        description => '',
        required => '0',
    },
    };
    __PACKAGE__->method_documentation->{ 'put_resource_endpoint_item' } = { 
    	summary => 'Invoke Resource/* Put Method',
        params => $params,
        returns => undef,
        };
}
# @return void
#
sub put_resource_endpoint_item {
    my ($self, %args) = @_;

    # verify the required parameter 'mname' is set
    unless (exists $args{'mname'}) {
      croak("Missing the required parameter 'mname' when calling put_resource_endpoint_item");
    }

    # verify the required parameter 'rname' is set
    unless (exists $args{'rname'}) {
      croak("Missing the required parameter 'rname' when calling put_resource_endpoint_item");
    }

    # verify the required parameter 'wildcard' is set
    unless (exists $args{'wildcard'}) {
      croak("Missing the required parameter 'wildcard' when calling put_resource_endpoint_item");
    }

    # verify the required parameter 'body' is set
    unless (exists $args{'body'}) {
      croak("Missing the required parameter 'body' when calling put_resource_endpoint_item");
    }

    # parse inputs
    my $_resource_path = '/edgemodules/{mname}/{rname}/{wildcard}';

    my $_method = 'PUT';
    my $query_params = {};
    my $header_params = {};
    my $form_params = {};

    # 'Accept' and 'Content-Type' header
    my $_header_accept = $self->{api_client}->select_header_accept('application/json');
    if ($_header_accept) {
        $header_params->{'Accept'} = $_header_accept;
    }
    $header_params->{'Content-Type'} = $self->{api_client}->select_header_content_type('application/json');

    # header params
    if ( exists $args{'x_embarcadero_application_id'}) {
        $header_params->{'X-Embarcadero-Application-Id'} = $self->{api_client}->to_header_value($args{'x_embarcadero_application_id'});
    }

    # header params
    if ( exists $args{'x_embarcadero_app_secret'}) {
        $header_params->{'X-Embarcadero-App-Secret'} = $self->{api_client}->to_header_value($args{'x_embarcadero_app_secret'});
    }

    # header params
    if ( exists $args{'x_embarcadero_master_secret'}) {
        $header_params->{'X-Embarcadero-Master-Secret'} = $self->{api_client}->to_header_value($args{'x_embarcadero_master_secret'});
    }

    # path params
    if ( exists $args{'mname'}) {
        my $_base_variable = "{" . "mname" . "}";
        my $_base_value = $self->{api_client}->to_path_value($args{'mname'});
        $_resource_path =~ s/$_base_variable/$_base_value/g;
    }

    # path params
    if ( exists $args{'rname'}) {
        my $_base_variable = "{" . "rname" . "}";
        my $_base_value = $self->{api_client}->to_path_value($args{'rname'});
        $_resource_path =~ s/$_base_variable/$_base_value/g;
    }

    # path params
    if ( exists $args{'wildcard'}) {
        my $_base_variable = "{" . "wildcard" . "}";
        my $_base_value = $self->{api_client}->to_path_value($args{'wildcard'});
        $_resource_path =~ s/$_base_variable/$_base_value/g;
    }

    my $_body_data;
    # body params
    if ( exists $args{'body'}) {
        $_body_data = $args{'body'};
    }

    # authentication setting, if any
    my $auth_settings = [qw()];

    # make the API Call
    $self->{api_client}->call_api($_resource_path, $_method,
                                           $query_params, $form_params,
                                           $header_params, $_body_data, $auth_settings);
    return;
}

1;
