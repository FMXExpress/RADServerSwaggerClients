/* 
 * EMS API Documentation
 *
 * Enterprise Mobility Services API      [Learn about EMS](https://www.embarcadero.com/products/rad-studio/enterprise-mobility-services)      EMS (Enterprise Mobility Services) offers a Mobile Enterprise Application Platform (MEAP)      TurnKey Middleware for Interconnected Distributed Apps
 *
 * OpenAPI spec version: 0.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing EdgeModulesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class EdgeModulesApiTests
    {
        private EdgeModulesApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new EdgeModulesApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of EdgeModulesApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' EdgeModulesApi
            //Assert.IsInstanceOfType(typeof(EdgeModulesApi), instance, "instance is a EdgeModulesApi");
        }

        
        /// <summary>
        /// Test GetModule
        /// </summary>
        [Test]
        public void GetModuleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string mname = null;
            //string xEmbarcaderoApplicationId = null;
            //string xEmbarcaderoAppSecret = null;
            //string xEmbarcaderoMasterSecret = null;
            //var response = instance.GetModule(mname, xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret);
            //Assert.IsInstanceOf<EdgeModuleObject> (response, "response is EdgeModuleObject");
        }
        
        /// <summary>
        /// Test GetModuleResource
        /// </summary>
        [Test]
        public void GetModuleResourceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string mname = null;
            //string name = null;
            //string xEmbarcaderoApplicationId = null;
            //string xEmbarcaderoAppSecret = null;
            //string xEmbarcaderoMasterSecret = null;
            //var response = instance.GetModuleResource(mname, name, xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret);
            //Assert.IsInstanceOf<EdgeModuleResourceObject> (response, "response is EdgeModuleResourceObject");
        }
        
        /// <summary>
        /// Test GetModuleResources
        /// </summary>
        [Test]
        public void GetModuleResourcesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string mname = null;
            //string xEmbarcaderoApplicationId = null;
            //string xEmbarcaderoAppSecret = null;
            //string xEmbarcaderoMasterSecret = null;
            //var response = instance.GetModuleResources(mname, xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret);
            //Assert.IsInstanceOf<List<EdgeModuleResourceObject>> (response, "response is List<EdgeModuleResourceObject>");
        }
        
        /// <summary>
        /// Test GetModules
        /// </summary>
        [Test]
        public void GetModulesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xEmbarcaderoApplicationId = null;
            //string xEmbarcaderoAppSecret = null;
            //string xEmbarcaderoMasterSecret = null;
            //var response = instance.GetModules(xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret);
            //Assert.IsInstanceOf<List<EdgeModuleObject>> (response, "response is List<EdgeModuleObject>");
        }
        
        /// <summary>
        /// Test GetModulesFields
        /// </summary>
        [Test]
        public void GetModulesFieldsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xEmbarcaderoApplicationId = null;
            //string xEmbarcaderoAppSecret = null;
            //string xEmbarcaderoMasterSecret = null;
            //var response = instance.GetModulesFields(xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret);
            //Assert.IsInstanceOf<FieldsEdgeModuleObject> (response, "response is FieldsEdgeModuleObject");
        }
        
        /// <summary>
        /// Test GetResources
        /// </summary>
        [Test]
        public void GetResourcesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xEmbarcaderoApplicationId = null;
            //string xEmbarcaderoAppSecret = null;
            //string xEmbarcaderoMasterSecret = null;
            //var response = instance.GetResources(xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret);
            //Assert.IsInstanceOf<List<EdgeModuleResourceObject>> (response, "response is List<EdgeModuleResourceObject>");
        }
        
        /// <summary>
        /// Test GetResourcesFields
        /// </summary>
        [Test]
        public void GetResourcesFieldsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xEmbarcaderoApplicationId = null;
            //string xEmbarcaderoAppSecret = null;
            //string xEmbarcaderoMasterSecret = null;
            //var response = instance.GetResourcesFields(xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret);
            //Assert.IsInstanceOf<FieldsEdgeModuleObject> (response, "response is FieldsEdgeModuleObject");
        }
        
        /// <summary>
        /// Test RegisterModule
        /// </summary>
        [Test]
        public void RegisterModuleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //EdgeModuleAddObject body = null;
            //string xEmbarcaderoApplicationId = null;
            //string xEmbarcaderoAppSecret = null;
            //string xEmbarcaderoMasterSecret = null;
            //var response = instance.RegisterModule(body, xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret);
            //Assert.IsInstanceOf<EdgeModuleAddedObject> (response, "response is EdgeModuleAddedObject");
        }
        
        /// <summary>
        /// Test RegisterModuleResource
        /// </summary>
        [Test]
        public void RegisterModuleResourceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string mname = null;
            //EdgeModuleResourceAddObject body = null;
            //string xEmbarcaderoApplicationId = null;
            //string xEmbarcaderoAppSecret = null;
            //string xEmbarcaderoMasterSecret = null;
            //var response = instance.RegisterModuleResource(mname, body, xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret);
            //Assert.IsInstanceOf<EdgeModuleResourceAddedObject> (response, "response is EdgeModuleResourceAddedObject");
        }
        
        /// <summary>
        /// Test UnregisterModule
        /// </summary>
        [Test]
        public void UnregisterModuleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string mname = null;
            //string xEmbarcaderoApplicationId = null;
            //string xEmbarcaderoAppSecret = null;
            //string xEmbarcaderoMasterSecret = null;
            //instance.UnregisterModule(mname, xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret);
            
        }
        
        /// <summary>
        /// Test UnregisterModuleResource
        /// </summary>
        [Test]
        public void UnregisterModuleResourceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string mname = null;
            //string name = null;
            //string xEmbarcaderoApplicationId = null;
            //string xEmbarcaderoAppSecret = null;
            //string xEmbarcaderoMasterSecret = null;
            //instance.UnregisterModuleResource(mname, name, xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret);
            
        }
        
        /// <summary>
        /// Test UpdateModule
        /// </summary>
        [Test]
        public void UpdateModuleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string mname = null;
            //EdgeModuleUpdateObject body = null;
            //string xEmbarcaderoApplicationId = null;
            //string xEmbarcaderoAppSecret = null;
            //string xEmbarcaderoMasterSecret = null;
            //var response = instance.UpdateModule(mname, body, xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret);
            //Assert.IsInstanceOf<EdgeModuleUpdatedObject> (response, "response is EdgeModuleUpdatedObject");
        }
        
        /// <summary>
        /// Test UpdateModuleResource
        /// </summary>
        [Test]
        public void UpdateModuleResourceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string mname = null;
            //string name = null;
            //EdgeModuleResourceUpdateObject body = null;
            //string xEmbarcaderoApplicationId = null;
            //string xEmbarcaderoAppSecret = null;
            //string xEmbarcaderoMasterSecret = null;
            //var response = instance.UpdateModuleResource(mname, name, body, xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret);
            //Assert.IsInstanceOf<EdgeModuleResourceUpdatedObject> (response, "response is EdgeModuleResourceUpdatedObject");
        }
        
    }

}
