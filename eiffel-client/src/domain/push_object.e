note
 description:"[
		EMS API Documentation
 		Enterprise Mobility Services API      [Learn about EMS](https://www.embarcadero.com/products/rad-studio/enterprise-mobility-services)      EMS (Enterprise Mobility Services) offers a Mobile Enterprise Application Platform (MEAP)      TurnKey Middleware for Interconnected Distributed Apps
  		OpenAPI spec version: 0.0.0
 	    

  	NOTE: This class is auto generated by the swagger code generator program.

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel swagger codegen", "src=https://github.com/swagger-api/swagger-codegen.git", "protocol=uri"
class PUSH_OBJECT 

inherit

  ANY
      redefine
          out 
      end


feature --Access

    data: detachable PUSH_DATA_OBJECT 
      
    channels: detachable LIST [STRING_32] 
      
    where: detachable PUSH_WHERE_OBJECT 
      

feature -- Change Element  
 
    set_data (a_name: like data)
        -- Set 'data' with 'a_name'.
      do
        data := a_name
      ensure
        data_set: data = a_name		
      end

    set_channels (a_name: like channels)
        -- Set 'channels' with 'a_name'.
      do
        channels := a_name
      ensure
        channels_set: channels = a_name		
      end

    set_where (a_name: like where)
        -- Set 'where' with 'a_name'.
      do
        where := a_name
      ensure
        where_set: where = a_name		
      end


 feature -- Status Report

    out: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass PUSH_OBJECT%N")
        if attached data as l_data then
          Result.append ("%Ndata:")
          Result.append (l_data.out)
          Result.append ("%N")    
        end  
        if attached channels as l_channels then
          across l_channels as ic loop
            Result.append ("%N channels:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end 
        if attached where as l_where then
          Result.append ("%Nwhere:")
          Result.append (l_where.out)
          Result.append ("%N")    
        end  
      end
end


