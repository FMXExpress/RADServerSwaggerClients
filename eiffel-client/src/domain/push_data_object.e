note
 description:"[
		EMS API Documentation
 		Enterprise Mobility Services API      [Learn about EMS](https://www.embarcadero.com/products/rad-studio/enterprise-mobility-services)      EMS (Enterprise Mobility Services) offers a Mobile Enterprise Application Platform (MEAP)      TurnKey Middleware for Interconnected Distributed Apps
  		OpenAPI spec version: 0.0.0
 	    

  	NOTE: This class is auto generated by the swagger code generator program.

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel swagger codegen", "src=https://github.com/swagger-api/swagger-codegen.git", "protocol=uri"
class PUSH_DATA_OBJECT 

inherit

  ANY
      redefine
          out 
      end


feature --Access

    gcm: detachable PUSH_DATA_OBJECT_GCM 
      
    aps: detachable PUSH_DATA_OBJECT_APS 
      
    extras: detachable PUSH_DATA_OBJECT_EXTRAS 
      

feature -- Change Element  
 
    set_gcm (a_name: like gcm)
        -- Set 'gcm' with 'a_name'.
      do
        gcm := a_name
      ensure
        gcm_set: gcm = a_name		
      end

    set_aps (a_name: like aps)
        -- Set 'aps' with 'a_name'.
      do
        aps := a_name
      ensure
        aps_set: aps = a_name		
      end

    set_extras (a_name: like extras)
        -- Set 'extras' with 'a_name'.
      do
        extras := a_name
      ensure
        extras_set: extras = a_name		
      end


 feature -- Status Report

    out: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass PUSH_DATA_OBJECT%N")
        if attached gcm as l_gcm then
          Result.append ("%Ngcm:")
          Result.append (l_gcm.out)
          Result.append ("%N")    
        end  
        if attached aps as l_aps then
          Result.append ("%Naps:")
          Result.append (l_aps.out)
          Result.append ("%N")    
        end  
        if attached extras as l_extras then
          Result.append ("%Nextras:")
          Result.append (l_extras.out)
          Result.append ("%N")    
        end  
      end
end


