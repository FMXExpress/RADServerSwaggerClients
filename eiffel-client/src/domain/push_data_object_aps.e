note
 description:"[
		EMS API Documentation
 		Enterprise Mobility Services API      [Learn about EMS](https://www.embarcadero.com/products/rad-studio/enterprise-mobility-services)      EMS (Enterprise Mobility Services) offers a Mobile Enterprise Application Platform (MEAP)      TurnKey Middleware for Interconnected Distributed Apps
  		OpenAPI spec version: 0.0.0
 	    

  	NOTE: This class is auto generated by the swagger code generator program.

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel swagger codegen", "src=https://github.com/swagger-api/swagger-codegen.git", "protocol=uri"
class PUSH_DATA_OBJECT_APS 

inherit

  ANY
      redefine
          out 
      end


feature --Access

    alert: detachable STRING_32 
      
    badge: detachable STRING_32 
      
    sound: detachable STRING_32 
      

feature -- Change Element  
 
    set_alert (a_name: like alert)
        -- Set 'alert' with 'a_name'.
      do
        alert := a_name
      ensure
        alert_set: alert = a_name		
      end

    set_badge (a_name: like badge)
        -- Set 'badge' with 'a_name'.
      do
        badge := a_name
      ensure
        badge_set: badge = a_name		
      end

    set_sound (a_name: like sound)
        -- Set 'sound' with 'a_name'.
      do
        sound := a_name
      ensure
        sound_set: sound = a_name		
      end


 feature -- Status Report

    out: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass PUSH_DATA_OBJECT_APS%N")
        if attached alert as l_alert then
          Result.append ("%Nalert:")
          Result.append (l_alert.out)
          Result.append ("%N")    
        end  
        if attached badge as l_badge then
          Result.append ("%Nbadge:")
          Result.append (l_badge.out)
          Result.append ("%N")    
        end  
        if attached sound as l_sound then
          Result.append ("%Nsound:")
          Result.append (l_sound.out)
          Result.append ("%N")    
        end  
      end
end


