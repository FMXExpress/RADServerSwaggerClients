note
 description:"[
		EMS API Documentation
 		Enterprise Mobility Services API      [Learn about EMS](https://www.embarcadero.com/products/rad-studio/enterprise-mobility-services)      EMS (Enterprise Mobility Services) offers a Mobile Enterprise Application Platform (MEAP)      TurnKey Middleware for Interconnected Distributed Apps
  		OpenAPI spec version: 0.0.0
 	    

  	NOTE: This class is auto generated by the swagger code generator program.

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel swagger codegen", "src=https://github.com/swagger-api/swagger-codegen.git", "protocol=uri"

class
	EDGEMODULESINVOKERS_API

inherit

    API_I


feature -- API Access


	delete_resource_endpoint (mname: STRING_32; rname: STRING_32; x__embarcadero__application__id: STRING_32; x__embarcadero__app__secret: STRING_32; x__embarcadero__master__secret: STRING_32)
			-- Invoke Resource Delete Method
			-- Used to invoke the DELETE method of the resource from an existing EMS EdgeModule.
			-- 
			-- argument: mname Is the EMS EdgeModule name (required)
			-- 
			-- argument: rname Is the unique EMS EdgeModule Resource name (required)
			-- 
			-- argument: x__embarcadero__application__id  (optional)
			-- 
			-- argument: x__embarcadero__app__secret  (optional)
			-- 
			-- argument: x__embarcadero__master__secret  (optional)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/edgemodules/{mname}/{rname}"
			l_path.replace_substring_all ("{"+"mname"+"}", api_client.url_encode (mname.out))
			l_path.replace_substring_all ("{"+"rname"+"}", api_client.url_encode (rname.out))

			if attached x__embarcadero__application__id as l_x__embarcadero__application__id then
				l_request.add_header(l_x__embarcadero__application__id.out,"X-Embarcadero-Application-Id");
			end
			if attached x__embarcadero__app__secret as l_x__embarcadero__app__secret then
				l_request.add_header(l_x__embarcadero__app__secret.out,"X-Embarcadero-App-Secret");
			end
			if attached x__embarcadero__master__secret as l_x__embarcadero__master__secret then
				l_request.add_header(l_x__embarcadero__master__secret.out,"X-Embarcadero-Master-Secret");
			end

			if attached {STRING} api_client.select_header_accept (<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type (<<>>),"Content-Type")
			l_request.set_auth_names (<<>>)
			l_response := api_client.call_api (l_path, "Delete", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end	

	delete_resource_endpoint_item (mname: STRING_32; rname: STRING_32; wildcard: STRING_32; x__embarcadero__application__id: STRING_32; x__embarcadero__app__secret: STRING_32; x__embarcadero__master__secret: STRING_32)
			-- Invoke Resource/_* Delete Method
			-- Used to invoke the DELETE method of the resource from an existing EMS EdgeModule.
			-- 
			-- argument: mname Is the EMS EdgeModule name (required)
			-- 
			-- argument: rname Is the unique EMS EdgeModule Resource name (required)
			-- 
			-- argument: wildcard Is the Wild card part of the URL (required)
			-- 
			-- argument: x__embarcadero__application__id  (optional)
			-- 
			-- argument: x__embarcadero__app__secret  (optional)
			-- 
			-- argument: x__embarcadero__master__secret  (optional)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/edgemodules/{mname}/{rname}/{wildcard}"
			l_path.replace_substring_all ("{"+"mname"+"}", api_client.url_encode (mname.out))
			l_path.replace_substring_all ("{"+"rname"+"}", api_client.url_encode (rname.out))
			l_path.replace_substring_all ("{"+"wildcard"+"}", api_client.url_encode (wildcard.out))

			if attached x__embarcadero__application__id as l_x__embarcadero__application__id then
				l_request.add_header(l_x__embarcadero__application__id.out,"X-Embarcadero-Application-Id");
			end
			if attached x__embarcadero__app__secret as l_x__embarcadero__app__secret then
				l_request.add_header(l_x__embarcadero__app__secret.out,"X-Embarcadero-App-Secret");
			end
			if attached x__embarcadero__master__secret as l_x__embarcadero__master__secret then
				l_request.add_header(l_x__embarcadero__master__secret.out,"X-Embarcadero-Master-Secret");
			end

			if attached {STRING} api_client.select_header_accept (<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type (<<>>),"Content-Type")
			l_request.set_auth_names (<<>>)
			l_response := api_client.call_api (l_path, "Delete", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end	

	patch_resource_endpoint (mname: STRING_32; rname: STRING_32; body: ANY; x__embarcadero__application__id: STRING_32; x__embarcadero__app__secret: STRING_32; x__embarcadero__master__secret: STRING_32)
			-- Invoke Resource Patch Method
			-- Used to invoke the PATCH method of the resource from an existing EMS EdgeModule.
			-- 
			-- argument: mname Is the EMS EdgeModule name (required)
			-- 
			-- argument: rname Is the unique EMS EdgeModule Resource name (required)
			-- 
			-- argument: body Body Object (required)
			-- 
			-- argument: x__embarcadero__application__id  (optional)
			-- 
			-- argument: x__embarcadero__app__secret  (optional)
			-- 
			-- argument: x__embarcadero__master__secret  (optional)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			l_request.set_body(body)
			l_path := "/edgemodules/{mname}/{rname}"
			l_path.replace_substring_all ("{"+"mname"+"}", api_client.url_encode (mname.out))
			l_path.replace_substring_all ("{"+"rname"+"}", api_client.url_encode (rname.out))

			if attached x__embarcadero__application__id as l_x__embarcadero__application__id then
				l_request.add_header(l_x__embarcadero__application__id.out,"X-Embarcadero-Application-Id");
			end
			if attached x__embarcadero__app__secret as l_x__embarcadero__app__secret then
				l_request.add_header(l_x__embarcadero__app__secret.out,"X-Embarcadero-App-Secret");
			end
			if attached x__embarcadero__master__secret as l_x__embarcadero__master__secret then
				l_request.add_header(l_x__embarcadero__master__secret.out,"X-Embarcadero-Master-Secret");
			end

			if attached {STRING} api_client.select_header_accept (<<"application/json">>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type (<<"application/json">>),"Content-Type")
			l_request.set_auth_names (<<>>)
			l_response := api_client.call_api (l_path, "Patch", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end	

	patch_resource_endpoint_item (mname: STRING_32; rname: STRING_32; wildcard: STRING_32; body: ANY; x__embarcadero__application__id: STRING_32; x__embarcadero__app__secret: STRING_32; x__embarcadero__master__secret: STRING_32)
			-- Invoke Resource/_* Patch Method
			-- Used to invoke the PATCH method of the resource from an existing EMS EdgeModule.
			-- 
			-- argument: mname Is the EMS EdgeModule name (required)
			-- 
			-- argument: rname Is the unique EMS EdgeModule Resource name (required)
			-- 
			-- argument: wildcard Is the Wild card part of the URL (required)
			-- 
			-- argument: body Body Object (required)
			-- 
			-- argument: x__embarcadero__application__id  (optional)
			-- 
			-- argument: x__embarcadero__app__secret  (optional)
			-- 
			-- argument: x__embarcadero__master__secret  (optional)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			l_request.set_body(body)
			l_path := "/edgemodules/{mname}/{rname}/{wildcard}"
			l_path.replace_substring_all ("{"+"mname"+"}", api_client.url_encode (mname.out))
			l_path.replace_substring_all ("{"+"rname"+"}", api_client.url_encode (rname.out))
			l_path.replace_substring_all ("{"+"wildcard"+"}", api_client.url_encode (wildcard.out))

			if attached x__embarcadero__application__id as l_x__embarcadero__application__id then
				l_request.add_header(l_x__embarcadero__application__id.out,"X-Embarcadero-Application-Id");
			end
			if attached x__embarcadero__app__secret as l_x__embarcadero__app__secret then
				l_request.add_header(l_x__embarcadero__app__secret.out,"X-Embarcadero-App-Secret");
			end
			if attached x__embarcadero__master__secret as l_x__embarcadero__master__secret then
				l_request.add_header(l_x__embarcadero__master__secret.out,"X-Embarcadero-Master-Secret");
			end

			if attached {STRING} api_client.select_header_accept (<<"application/json">>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type (<<"application/json">>),"Content-Type")
			l_request.set_auth_names (<<>>)
			l_response := api_client.call_api (l_path, "Patch", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end	

	post_resource_endpoint (mname: STRING_32; rname: STRING_32; body: ANY; x__embarcadero__application__id: STRING_32; x__embarcadero__app__secret: STRING_32; x__embarcadero__master__secret: STRING_32)
			-- Invoke Resource Post Method
			-- Used to invoke the POST method of the resource from an existing EMS EdgeModule.
			-- 
			-- argument: mname Is the EMS EdgeModule name (required)
			-- 
			-- argument: rname Is the unique EMS EdgeModule Resource name (required)
			-- 
			-- argument: body Body Object (required)
			-- 
			-- argument: x__embarcadero__application__id  (optional)
			-- 
			-- argument: x__embarcadero__app__secret  (optional)
			-- 
			-- argument: x__embarcadero__master__secret  (optional)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			l_request.set_body(body)
			l_path := "/edgemodules/{mname}/{rname}"
			l_path.replace_substring_all ("{"+"mname"+"}", api_client.url_encode (mname.out))
			l_path.replace_substring_all ("{"+"rname"+"}", api_client.url_encode (rname.out))

			if attached x__embarcadero__application__id as l_x__embarcadero__application__id then
				l_request.add_header(l_x__embarcadero__application__id.out,"X-Embarcadero-Application-Id");
			end
			if attached x__embarcadero__app__secret as l_x__embarcadero__app__secret then
				l_request.add_header(l_x__embarcadero__app__secret.out,"X-Embarcadero-App-Secret");
			end
			if attached x__embarcadero__master__secret as l_x__embarcadero__master__secret then
				l_request.add_header(l_x__embarcadero__master__secret.out,"X-Embarcadero-Master-Secret");
			end

			if attached {STRING} api_client.select_header_accept (<<"application/json">>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type (<<"application/json">>),"Content-Type")
			l_request.set_auth_names (<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end	

	post_resource_endpoint_item (mname: STRING_32; rname: STRING_32; wildcard: STRING_32; body: ANY; x__embarcadero__application__id: STRING_32; x__embarcadero__app__secret: STRING_32; x__embarcadero__master__secret: STRING_32)
			-- Invoke Resource/_* Post Method
			-- Used to invoke the POST method of the resource from an existing EMS EdgeModule.
			-- 
			-- argument: mname Is the EMS EdgeModule name (required)
			-- 
			-- argument: rname Is the unique EMS EdgeModule Resource name (required)
			-- 
			-- argument: wildcard Is the Wild card part of the URL (required)
			-- 
			-- argument: body Body Object (required)
			-- 
			-- argument: x__embarcadero__application__id  (optional)
			-- 
			-- argument: x__embarcadero__app__secret  (optional)
			-- 
			-- argument: x__embarcadero__master__secret  (optional)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			l_request.set_body(body)
			l_path := "/edgemodules/{mname}/{rname}/{wildcard}"
			l_path.replace_substring_all ("{"+"mname"+"}", api_client.url_encode (mname.out))
			l_path.replace_substring_all ("{"+"rname"+"}", api_client.url_encode (rname.out))
			l_path.replace_substring_all ("{"+"wildcard"+"}", api_client.url_encode (wildcard.out))

			if attached x__embarcadero__application__id as l_x__embarcadero__application__id then
				l_request.add_header(l_x__embarcadero__application__id.out,"X-Embarcadero-Application-Id");
			end
			if attached x__embarcadero__app__secret as l_x__embarcadero__app__secret then
				l_request.add_header(l_x__embarcadero__app__secret.out,"X-Embarcadero-App-Secret");
			end
			if attached x__embarcadero__master__secret as l_x__embarcadero__master__secret then
				l_request.add_header(l_x__embarcadero__master__secret.out,"X-Embarcadero-Master-Secret");
			end

			if attached {STRING} api_client.select_header_accept (<<"application/json">>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type (<<"application/json">>),"Content-Type")
			l_request.set_auth_names (<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end	

	put_resource_endpoint (mname: STRING_32; rname: STRING_32; body: ANY; x__embarcadero__application__id: STRING_32; x__embarcadero__app__secret: STRING_32; x__embarcadero__master__secret: STRING_32)
			-- Invoke Resource Put Method
			-- Used to invoke the PUT method of the resource from an existing EMS EdgeModule.
			-- 
			-- argument: mname Is the EMS EdgeModule name (required)
			-- 
			-- argument: rname Is the unique EMS EdgeModule Resource name (required)
			-- 
			-- argument: body Body Object (required)
			-- 
			-- argument: x__embarcadero__application__id  (optional)
			-- 
			-- argument: x__embarcadero__app__secret  (optional)
			-- 
			-- argument: x__embarcadero__master__secret  (optional)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			l_request.set_body(body)
			l_path := "/edgemodules/{mname}/{rname}"
			l_path.replace_substring_all ("{"+"mname"+"}", api_client.url_encode (mname.out))
			l_path.replace_substring_all ("{"+"rname"+"}", api_client.url_encode (rname.out))

			if attached x__embarcadero__application__id as l_x__embarcadero__application__id then
				l_request.add_header(l_x__embarcadero__application__id.out,"X-Embarcadero-Application-Id");
			end
			if attached x__embarcadero__app__secret as l_x__embarcadero__app__secret then
				l_request.add_header(l_x__embarcadero__app__secret.out,"X-Embarcadero-App-Secret");
			end
			if attached x__embarcadero__master__secret as l_x__embarcadero__master__secret then
				l_request.add_header(l_x__embarcadero__master__secret.out,"X-Embarcadero-Master-Secret");
			end

			if attached {STRING} api_client.select_header_accept (<<"application/json">>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type (<<"application/json">>),"Content-Type")
			l_request.set_auth_names (<<>>)
			l_response := api_client.call_api (l_path, "Put", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end	

	put_resource_endpoint_item (mname: STRING_32; rname: STRING_32; wildcard: STRING_32; body: ANY; x__embarcadero__application__id: STRING_32; x__embarcadero__app__secret: STRING_32; x__embarcadero__master__secret: STRING_32)
			-- Invoke Resource/_* Put Method
			-- Used to invoke the PUT method of the resource from an existing EMS EdgeModule.
			-- 
			-- argument: mname Is the EMS EdgeModule name (required)
			-- 
			-- argument: rname Is the unique EMS EdgeModule Resource name (required)
			-- 
			-- argument: wildcard Is the Wild card part of the URL (required)
			-- 
			-- argument: body Body Object (required)
			-- 
			-- argument: x__embarcadero__application__id  (optional)
			-- 
			-- argument: x__embarcadero__app__secret  (optional)
			-- 
			-- argument: x__embarcadero__master__secret  (optional)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			l_request.set_body(body)
			l_path := "/edgemodules/{mname}/{rname}/{wildcard}"
			l_path.replace_substring_all ("{"+"mname"+"}", api_client.url_encode (mname.out))
			l_path.replace_substring_all ("{"+"rname"+"}", api_client.url_encode (rname.out))
			l_path.replace_substring_all ("{"+"wildcard"+"}", api_client.url_encode (wildcard.out))

			if attached x__embarcadero__application__id as l_x__embarcadero__application__id then
				l_request.add_header(l_x__embarcadero__application__id.out,"X-Embarcadero-Application-Id");
			end
			if attached x__embarcadero__app__secret as l_x__embarcadero__app__secret then
				l_request.add_header(l_x__embarcadero__app__secret.out,"X-Embarcadero-App-Secret");
			end
			if attached x__embarcadero__master__secret as l_x__embarcadero__master__secret then
				l_request.add_header(l_x__embarcadero__master__secret.out,"X-Embarcadero-Master-Secret");
			end

			if attached {STRING} api_client.select_header_accept (<<"application/json">>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type (<<"application/json">>),"Content-Type")
			l_request.set_auth_names (<<>>)
			l_response := api_client.call_api (l_path, "Put", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end	

	resource_endpoint (mname: STRING_32; rname: STRING_32; x__embarcadero__application__id: STRING_32; x__embarcadero__app__secret: STRING_32; x__embarcadero__master__secret: STRING_32)
			-- Invoke Resource Get Method
			-- Used to invoke the GET method of the resource from an existing EMS EdgeModule.
			-- 
			-- argument: mname Is the EMS EdgeModule name (required)
			-- 
			-- argument: rname Is the unique EMS EdgeModule Resource name (required)
			-- 
			-- argument: x__embarcadero__application__id  (optional)
			-- 
			-- argument: x__embarcadero__app__secret  (optional)
			-- 
			-- argument: x__embarcadero__master__secret  (optional)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/edgemodules/{mname}/{rname}"
			l_path.replace_substring_all ("{"+"mname"+"}", api_client.url_encode (mname.out))
			l_path.replace_substring_all ("{"+"rname"+"}", api_client.url_encode (rname.out))

			if attached x__embarcadero__application__id as l_x__embarcadero__application__id then
				l_request.add_header(l_x__embarcadero__application__id.out,"X-Embarcadero-Application-Id");
			end
			if attached x__embarcadero__app__secret as l_x__embarcadero__app__secret then
				l_request.add_header(l_x__embarcadero__app__secret.out,"X-Embarcadero-App-Secret");
			end
			if attached x__embarcadero__master__secret as l_x__embarcadero__master__secret then
				l_request.add_header(l_x__embarcadero__master__secret.out,"X-Embarcadero-Master-Secret");
			end

			if attached {STRING} api_client.select_header_accept (<<"application/json">>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type (<<>>),"Content-Type")
			l_request.set_auth_names (<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end	

	resource_endpoint_item (mname: STRING_32; rname: STRING_32; wildcard: STRING_32; x__embarcadero__application__id: STRING_32; x__embarcadero__app__secret: STRING_32; x__embarcadero__master__secret: STRING_32)
			-- Invoke Resource/_* Get Method
			-- Used to invoke the GET method of the resource from an existing EMS EdgeModule.
			-- 
			-- argument: mname Is the EMS EdgeModule name (required)
			-- 
			-- argument: rname Is the unique EMS EdgeModule Resource name (required)
			-- 
			-- argument: wildcard Is the Wild card part of the URL (required)
			-- 
			-- argument: x__embarcadero__application__id  (optional)
			-- 
			-- argument: x__embarcadero__app__secret  (optional)
			-- 
			-- argument: x__embarcadero__master__secret  (optional)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/edgemodules/{mname}/{rname}/{wildcard}"
			l_path.replace_substring_all ("{"+"mname"+"}", api_client.url_encode (mname.out))
			l_path.replace_substring_all ("{"+"rname"+"}", api_client.url_encode (rname.out))
			l_path.replace_substring_all ("{"+"wildcard"+"}", api_client.url_encode (wildcard.out))

			if attached x__embarcadero__application__id as l_x__embarcadero__application__id then
				l_request.add_header(l_x__embarcadero__application__id.out,"X-Embarcadero-Application-Id");
			end
			if attached x__embarcadero__app__secret as l_x__embarcadero__app__secret then
				l_request.add_header(l_x__embarcadero__app__secret.out,"X-Embarcadero-App-Secret");
			end
			if attached x__embarcadero__master__secret as l_x__embarcadero__master__secret then
				l_request.add_header(l_x__embarcadero__master__secret.out,"X-Embarcadero-Master-Secret");
			end

			if attached {STRING} api_client.select_header_accept (<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type (<<>>),"Content-Type")
			l_request.set_auth_names (<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end	


end
