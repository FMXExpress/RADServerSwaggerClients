=begin
#EMS API Documentation

#Enterprise Mobility Services API      [Learn about EMS](https://www.embarcadero.com/products/rad-studio/enterprise-mobility-services)      EMS (Enterprise Mobility Services) offers a Mobile Enterprise Application Platform (MEAP)      TurnKey Middleware for Interconnected Distributed Apps

OpenAPI spec version: 0.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.5

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::InstallationsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'InstallationsApi' do
  before do
    # run before each test
    @instance = SwaggerClient::InstallationsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of InstallationsApi' do
    it 'should create an instance of InstallationsApi' do
      expect(@instance).to be_instance_of(SwaggerClient::InstallationsApi)
    end
  end

  # unit tests for add_installation
  # Add Installation
  #  |      Used to add a new &#x60;Installation&#x60; object to the EMS database.
  # @param body Object to sign up a new EMS User in the EMS Server
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_embarcadero_application_id 
  # @option opts [String] :x_embarcadero_app_secret 
  # @option opts [String] :x_embarcadero_master_secret 
  # @return [InstallationAddedObject]
  describe 'add_installation test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_installation
  # Delete Installation
  #  |      Used to delete an &#x60;Installation&#x60;. **id** is the unique EMS Installation identifier (IID) in the EMS database.
  # @param id A Installation ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_embarcadero_application_id 
  # @option opts [String] :x_embarcadero_app_secret 
  # @option opts [String] :x_embarcadero_master_secret 
  # @return [nil]
  describe 'delete_installation test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_channels
  # Get Installation Channels
  #  |       Used to retrieve the available channels to which the device has subscribed. **id** is the unique EMS Installation identifier (InstallationID) in the EMS database.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_embarcadero_application_id 
  # @option opts [String] :x_embarcadero_app_secret 
  # @option opts [String] :x_embarcadero_master_secret 
  # @return [Array<ChannelName>]
  describe 'get_channels test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_installation
  # Get Installation
  #  |      Used to retrieve all data from a specific &#x60;Installation&#x60; (registered device). **id** is the unique EMS Installation identifier (InstallationID) in the EMS database.
  # @param id A Installation ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_embarcadero_application_id 
  # @option opts [String] :x_embarcadero_app_secret 
  # @option opts [String] :x_embarcadero_master_secret 
  # @return [InstallationObject]
  describe 'get_installation test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_installation_fields
  # Get Fields
  #  |      Used to retrieve all the &#x60;field names&#x60; of the EMS Installation (including the custom fields).
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_embarcadero_application_id 
  # @option opts [String] :x_embarcadero_app_secret 
  # @option opts [String] :x_embarcadero_master_secret 
  # @return [Array<FieldInstallationObject>]
  describe 'get_installation_fields test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_installations
  # Get Installations
  #  |      Used to retrieve all data from &#x60;Installation&#x60;.      Optional query param of **skip, limit, order, where** determines       size of returned array, filtered and order by.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_embarcadero_application_id 
  # @option opts [String] :x_embarcadero_app_secret 
  # @option opts [String] :x_embarcadero_master_secret 
  # @option opts [Float] :skip users skipped
  # @option opts [Float] :limit maximum number of results to return
  # @option opts [Float] :order order ascending or descending (asc, desc)
  # @option opts [String] :where filter operators (lt, lte, gt, gte, eq, neq, like, nlike)
  # @return [Array<InstallationObject>]
  describe 'get_installations test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_installation
  # Update Installation
  #  |      Used to update an &#x60;Installation&#x60;. **id** is the unique EMS Installation identifier (IID) in the EMS database.
  # @param id A Installation ID
  # @param body Installation fields to update
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_embarcadero_application_id 
  # @option opts [String] :x_embarcadero_app_secret 
  # @option opts [String] :x_embarcadero_master_secret 
  # @return [UpdatedInstallationObject]
  describe 'update_installation test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
