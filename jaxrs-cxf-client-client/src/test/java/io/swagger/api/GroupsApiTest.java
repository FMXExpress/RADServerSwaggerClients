/**
 * EMS API Documentation
 * Enterprise Mobility Services API      [Learn about EMS](https://www.embarcadero.com/products/rad-studio/enterprise-mobility-services)      EMS (Enterprise Mobility Services) offers a Mobile Enterprise Application Platform (MEAP)      TurnKey Middleware for Interconnected Distributed Apps
 *
 * OpenAPI spec version: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.api;

import java.math.BigDecimal;
import io.swagger.model.FieldGroupObject;
import io.swagger.model.GroupAddObject;
import io.swagger.model.GroupObject;
import io.swagger.model.UpdateGroupObject;
import io.swagger.model.UpdatedGroupObject;
import org.junit.Test;
import org.junit.Before;
import static org.junit.Assert.*;

import javax.ws.rs.core.Response;
import org.apache.cxf.jaxrs.client.JAXRSClientFactory;
import org.apache.cxf.jaxrs.client.ClientConfiguration;
import org.apache.cxf.jaxrs.client.WebClient;


import com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;




/**
 * EMS API Documentation
 *
 * <p>Enterprise Mobility Services API      [Learn about EMS](https://www.embarcadero.com/products/rad-studio/enterprise-mobility-services)      EMS (Enterprise Mobility Services) offers a Mobile Enterprise Application Platform (MEAP)      TurnKey Middleware for Interconnected Distributed Apps
 *
 * API tests for GroupsApi 
 */
public class GroupsApiTest {


    private GroupsApi api;
    
    @Before
    public void setup() {
        JacksonJsonProvider provider = new JacksonJsonProvider();
        List providers = new ArrayList();
        providers.add(provider);
        
        api = JAXRSClientFactory.create("http://localhost:8080", GroupsApi.class, providers);
        org.apache.cxf.jaxrs.client.Client client = WebClient.client(api);
        
        ClientConfiguration config = WebClient.getConfig(client); 
    }

    
    /**
     * Add Group
     *
     *  |      Used to add a new &#x60;Group&#x60; object to the EMS database.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addGroupTest() {
        GroupAddObject body = null;
        String xEmbarcaderoApplicationId = null;
        String xEmbarcaderoAppSecret = null;
        String xEmbarcaderoMasterSecret = null;
        //api.addGroup(body, xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret);
        
        // TODO: test validations
        
        
    }
    
    /**
     * Delete Group
     *
     *  |      Used to delete a &#x60;Group&#x60;. **item** is the unique EMS Group name in the EMS database.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteGroupTest() {
        String item = null;
        String xEmbarcaderoApplicationId = null;
        String xEmbarcaderoAppSecret = null;
        String xEmbarcaderoMasterSecret = null;
        //api.deleteGroup(item, xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret);
        
        // TODO: test validations
        
        
    }
    
    /**
     * Get Group
     *
     *  |      Used to retrieve all data from a &#x60;Group&#x60;. **item** is the unique EMS Group name in the EMS database.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getGroupTest() {
        String item = null;
        String xEmbarcaderoApplicationId = null;
        String xEmbarcaderoAppSecret = null;
        String xEmbarcaderoMasterSecret = null;
        //GroupObject response = api.getGroup(item, xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    
    /**
     * Get Fields
     *
     *  |      Used to retrieve all the &#x60;field names&#x60; of the EMS Group (including the custom fields).
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getGroupFieldsTest() {
        String xEmbarcaderoApplicationId = null;
        String xEmbarcaderoAppSecret = null;
        String xEmbarcaderoMasterSecret = null;
        //List<FieldGroupObject> response = api.getGroupFields(xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    
    /**
     * Get Groups
     *
     *  |      Used to retrieve all data from &#x60;Groups&#x60;.      Optional query param of **skip, limit, order, where** determines       size of returned array, filtered and order by.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getGroupsTest() {
        String xEmbarcaderoApplicationId = null;
        String xEmbarcaderoAppSecret = null;
        String xEmbarcaderoMasterSecret = null;
        BigDecimal skip = null;
        BigDecimal limit = null;
        BigDecimal order = null;
        String where = null;
        //List<GroupObject> response = api.getGroups(xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret, skip, limit, order, where);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    
    /**
     * Update Group
     *
     *  |      Used to update a &#x60;Group&#x60;. **item** is the unique EMS Group name in the EMS database.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateGroupTest() {
        String item = null;
        UpdateGroupObject body = null;
        String xEmbarcaderoApplicationId = null;
        String xEmbarcaderoAppSecret = null;
        String xEmbarcaderoMasterSecret = null;
        //UpdatedGroupObject response = api.updateGroup(item, body, xEmbarcaderoApplicationId, xEmbarcaderoAppSecret, xEmbarcaderoMasterSecret);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    
}
