{-
   EMS API Documentation

   Enterprise Mobility Services API      [Learn about EMS](https://www.embarcadero.com/products/rad-studio/enterprise-mobility-services)      EMS (Enterprise Mobility Services) offers a Mobile Enterprise Application Platform (MEAP)      TurnKey Middleware for Interconnected Distributed Apps

   OpenAPI spec version: 2.0
   EMS API Documentation API version: 0.0.0
   Generated by Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
-}

{-|
Module : EMSAPIDocumentation.API.Installations
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module EMSAPIDocumentation.API.Installations where

import EMSAPIDocumentation.Core
import EMSAPIDocumentation.MimeTypes
import EMSAPIDocumentation.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** Installations

-- *** addInstallation

-- | @POST \/installations@
-- 
-- Add Installation
-- 
--  |      Used to add a new `Installation` object to the EMS database.
-- 
addInstallation 
  :: (Consumes AddInstallation MimeJSON, MimeRender MimeJSON InstallationAddObject)
  => InstallationAddObject -- ^ "body" -  Object to sign up a new EMS User in the EMS Server
  -> EMSAPIDocumentationRequest AddInstallation MimeJSON InstallationAddedObject MimeJSON
addInstallation body =
  _mkRequest "POST" ["/installations"]
    `setBodyParam` body

data AddInstallation 

-- | /Body Param/ "body" - Object to sign up a new EMS User in the EMS Server
instance HasBodyParam AddInstallation InstallationAddObject 
instance HasOptionalParam AddInstallation XEmbarcaderoApplicationId where
  applyOptionalParam req (XEmbarcaderoApplicationId xs) =
    req `setHeader` toHeader ("X-Embarcadero-Application-Id", xs)
instance HasOptionalParam AddInstallation XEmbarcaderoAppSecret where
  applyOptionalParam req (XEmbarcaderoAppSecret xs) =
    req `setHeader` toHeader ("X-Embarcadero-App-Secret", xs)
instance HasOptionalParam AddInstallation XEmbarcaderoMasterSecret where
  applyOptionalParam req (XEmbarcaderoMasterSecret xs) =
    req `setHeader` toHeader ("X-Embarcadero-Master-Secret", xs)

-- | @application/json@
instance Consumes AddInstallation MimeJSON

-- | @application/json@
instance Produces AddInstallation MimeJSON


-- *** deleteInstallation

-- | @DELETE \/installations\/{id}@
-- 
-- Delete Installation
-- 
--  |      Used to delete an `Installation`. **id** is the unique EMS Installation identifier (IID) in the EMS database.
-- 
deleteInstallation 
  :: Id -- ^ "id" -  A Installation ID
  -> EMSAPIDocumentationRequest DeleteInstallation MimeNoContent NoContent MimeNoContent
deleteInstallation (Id id) =
  _mkRequest "DELETE" ["/installations/",toPath id]

data DeleteInstallation  
instance HasOptionalParam DeleteInstallation XEmbarcaderoApplicationId where
  applyOptionalParam req (XEmbarcaderoApplicationId xs) =
    req `setHeader` toHeader ("X-Embarcadero-Application-Id", xs)
instance HasOptionalParam DeleteInstallation XEmbarcaderoAppSecret where
  applyOptionalParam req (XEmbarcaderoAppSecret xs) =
    req `setHeader` toHeader ("X-Embarcadero-App-Secret", xs)
instance HasOptionalParam DeleteInstallation XEmbarcaderoMasterSecret where
  applyOptionalParam req (XEmbarcaderoMasterSecret xs) =
    req `setHeader` toHeader ("X-Embarcadero-Master-Secret", xs)

-- *** getChannels

-- | @GET \/installations\/channels@
-- 
-- Get Installation Channels
-- 
--  |       Used to retrieve the available channels to which the device has subscribed. **id** is the unique EMS Installation identifier (InstallationID) in the EMS database.
-- 
getChannels 
  :: EMSAPIDocumentationRequest GetChannels MimeNoContent [ChannelName] MimeJSON
getChannels =
  _mkRequest "GET" ["/installations/channels"]

data GetChannels  
instance HasOptionalParam GetChannels XEmbarcaderoApplicationId where
  applyOptionalParam req (XEmbarcaderoApplicationId xs) =
    req `setHeader` toHeader ("X-Embarcadero-Application-Id", xs)
instance HasOptionalParam GetChannels XEmbarcaderoAppSecret where
  applyOptionalParam req (XEmbarcaderoAppSecret xs) =
    req `setHeader` toHeader ("X-Embarcadero-App-Secret", xs)
instance HasOptionalParam GetChannels XEmbarcaderoMasterSecret where
  applyOptionalParam req (XEmbarcaderoMasterSecret xs) =
    req `setHeader` toHeader ("X-Embarcadero-Master-Secret", xs)
-- | @application/json@
instance Produces GetChannels MimeJSON


-- *** getInstallation

-- | @GET \/installations\/{id}@
-- 
-- Get Installation
-- 
--  |      Used to retrieve all data from a specific `Installation` (registered device). **id** is the unique EMS Installation identifier (InstallationID) in the EMS database.
-- 
getInstallation 
  :: Id -- ^ "id" -  A Installation ID
  -> EMSAPIDocumentationRequest GetInstallation MimeNoContent InstallationObject MimeJSON
getInstallation (Id id) =
  _mkRequest "GET" ["/installations/",toPath id]

data GetInstallation  
instance HasOptionalParam GetInstallation XEmbarcaderoApplicationId where
  applyOptionalParam req (XEmbarcaderoApplicationId xs) =
    req `setHeader` toHeader ("X-Embarcadero-Application-Id", xs)
instance HasOptionalParam GetInstallation XEmbarcaderoAppSecret where
  applyOptionalParam req (XEmbarcaderoAppSecret xs) =
    req `setHeader` toHeader ("X-Embarcadero-App-Secret", xs)
instance HasOptionalParam GetInstallation XEmbarcaderoMasterSecret where
  applyOptionalParam req (XEmbarcaderoMasterSecret xs) =
    req `setHeader` toHeader ("X-Embarcadero-Master-Secret", xs)
-- | @application/json@
instance Produces GetInstallation MimeJSON


-- *** getInstallationFields

-- | @GET \/installations\/fields@
-- 
-- Get Fields
-- 
--  |      Used to retrieve all the `field names` of the EMS Installation (including the custom fields).
-- 
getInstallationFields 
  :: EMSAPIDocumentationRequest GetInstallationFields MimeNoContent [FieldInstallationObject] MimeJSON
getInstallationFields =
  _mkRequest "GET" ["/installations/fields"]

data GetInstallationFields  
instance HasOptionalParam GetInstallationFields XEmbarcaderoApplicationId where
  applyOptionalParam req (XEmbarcaderoApplicationId xs) =
    req `setHeader` toHeader ("X-Embarcadero-Application-Id", xs)
instance HasOptionalParam GetInstallationFields XEmbarcaderoAppSecret where
  applyOptionalParam req (XEmbarcaderoAppSecret xs) =
    req `setHeader` toHeader ("X-Embarcadero-App-Secret", xs)
instance HasOptionalParam GetInstallationFields XEmbarcaderoMasterSecret where
  applyOptionalParam req (XEmbarcaderoMasterSecret xs) =
    req `setHeader` toHeader ("X-Embarcadero-Master-Secret", xs)
-- | @application/json@
instance Produces GetInstallationFields MimeJSON


-- *** getInstallations

-- | @GET \/installations@
-- 
-- Get Installations
-- 
--  |      Used to retrieve all data from `Installation`.      Optional query param of **skip, limit, order, where** determines       size of returned array, filtered and order by.
-- 
getInstallations 
  :: EMSAPIDocumentationRequest GetInstallations MimeNoContent [InstallationObject] MimeJSON
getInstallations =
  _mkRequest "GET" ["/installations"]

data GetInstallations  
instance HasOptionalParam GetInstallations XEmbarcaderoApplicationId where
  applyOptionalParam req (XEmbarcaderoApplicationId xs) =
    req `setHeader` toHeader ("X-Embarcadero-Application-Id", xs)
instance HasOptionalParam GetInstallations XEmbarcaderoAppSecret where
  applyOptionalParam req (XEmbarcaderoAppSecret xs) =
    req `setHeader` toHeader ("X-Embarcadero-App-Secret", xs)
instance HasOptionalParam GetInstallations XEmbarcaderoMasterSecret where
  applyOptionalParam req (XEmbarcaderoMasterSecret xs) =
    req `setHeader` toHeader ("X-Embarcadero-Master-Secret", xs)

-- | /Optional Param/ "skip" - users skipped
instance HasOptionalParam GetInstallations Skip where
  applyOptionalParam req (Skip xs) =
    req `setQuery` toQuery ("skip", Just xs)

-- | /Optional Param/ "limit" - maximum number of results to return
instance HasOptionalParam GetInstallations Limit where
  applyOptionalParam req (Limit xs) =
    req `setQuery` toQuery ("limit", Just xs)

-- | /Optional Param/ "order" - order ascending or descending (asc, desc)
instance HasOptionalParam GetInstallations Order where
  applyOptionalParam req (Order xs) =
    req `setQuery` toQuery ("order", Just xs)

-- | /Optional Param/ "where" - filter operators (lt, lte, gt, gte, eq, neq, like, nlike)
instance HasOptionalParam GetInstallations ParamWhere where
  applyOptionalParam req (ParamWhere xs) =
    req `setQuery` toQuery ("where", Just xs)
-- | @application/json@
instance Produces GetInstallations MimeJSON


-- *** updateInstallation

-- | @PUT \/installations\/{id}@
-- 
-- Update Installation
-- 
--  |      Used to update an `Installation`. **id** is the unique EMS Installation identifier (IID) in the EMS database.
-- 
updateInstallation 
  :: (Consumes UpdateInstallation MimeJSON, MimeRender MimeJSON UpdateInstallationObject)
  => Id -- ^ "id" -  A Installation ID
  -> UpdateInstallationObject -- ^ "body" -  Installation fields to update
  -> EMSAPIDocumentationRequest UpdateInstallation MimeJSON UpdatedInstallationObject MimeJSON
updateInstallation (Id id) body =
  _mkRequest "PUT" ["/installations/",toPath id]
    `setBodyParam` body

data UpdateInstallation 

-- | /Body Param/ "body" - Installation fields to update
instance HasBodyParam UpdateInstallation UpdateInstallationObject 
instance HasOptionalParam UpdateInstallation XEmbarcaderoApplicationId where
  applyOptionalParam req (XEmbarcaderoApplicationId xs) =
    req `setHeader` toHeader ("X-Embarcadero-Application-Id", xs)
instance HasOptionalParam UpdateInstallation XEmbarcaderoAppSecret where
  applyOptionalParam req (XEmbarcaderoAppSecret xs) =
    req `setHeader` toHeader ("X-Embarcadero-App-Secret", xs)
instance HasOptionalParam UpdateInstallation XEmbarcaderoMasterSecret where
  applyOptionalParam req (XEmbarcaderoMasterSecret xs) =
    req `setHeader` toHeader ("X-Embarcadero-Master-Secret", xs)

-- | @application/json@
instance Consumes UpdateInstallation MimeJSON

-- | @application/json@
instance Produces UpdateInstallation MimeJSON

