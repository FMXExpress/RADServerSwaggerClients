{-
   EMS API Documentation

   Enterprise Mobility Services API      [Learn about EMS](https://www.embarcadero.com/products/rad-studio/enterprise-mobility-services)      EMS (Enterprise Mobility Services) offers a Mobile Enterprise Application Platform (MEAP)      TurnKey Middleware for Interconnected Distributed Apps

   OpenAPI spec version: 2.0
   EMS API Documentation API version: 0.0.0
   Generated by Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
-}

{-|
Module : EMSAPIDocumentation.API.Users
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module EMSAPIDocumentation.API.Users where

import EMSAPIDocumentation.Core
import EMSAPIDocumentation.MimeTypes
import EMSAPIDocumentation.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** Users

-- *** addUser

-- | @POST \/users@
-- 
-- Add User
-- 
--  |      Used to add a new `User` object to the EMS database.
-- 
addUser 
  :: (Consumes AddUser MimeJSON, MimeRender MimeJSON UserCredentialsObject)
  => UserCredentialsObject -- ^ "body" -  Object to add a new EMS User in the EMS Server
  -> EMSAPIDocumentationRequest AddUser MimeJSON UseridObject MimeJSON
addUser body =
  _mkRequest "POST" ["/users"]
    `setBodyParam` body

data AddUser 

-- | /Body Param/ "body" - Object to add a new EMS User in the EMS Server
instance HasBodyParam AddUser UserCredentialsObject 
instance HasOptionalParam AddUser XEmbarcaderoApplicationId where
  applyOptionalParam req (XEmbarcaderoApplicationId xs) =
    req `setHeader` toHeader ("X-Embarcadero-Application-Id", xs)
instance HasOptionalParam AddUser XEmbarcaderoAppSecret where
  applyOptionalParam req (XEmbarcaderoAppSecret xs) =
    req `setHeader` toHeader ("X-Embarcadero-App-Secret", xs)
instance HasOptionalParam AddUser XEmbarcaderoMasterSecret where
  applyOptionalParam req (XEmbarcaderoMasterSecret xs) =
    req `setHeader` toHeader ("X-Embarcadero-Master-Secret", xs)

-- | @application/json@
instance Consumes AddUser MimeJSON

-- | @application/json@
instance Produces AddUser MimeJSON


-- *** deleteUser

-- | @DELETE \/users\/{id}@
-- 
-- Delete User
-- 
--  |      Used to delete a `User`. **id** is the unique EMS User identifier (UID) in the EMS database.
-- 
deleteUser 
  :: Id -- ^ "id" -  A user ID
  -> EMSAPIDocumentationRequest DeleteUser MimeNoContent NoContent MimeNoContent
deleteUser (Id id) =
  _mkRequest "DELETE" ["/users/",toPath id]

data DeleteUser  
instance HasOptionalParam DeleteUser XEmbarcaderoApplicationId where
  applyOptionalParam req (XEmbarcaderoApplicationId xs) =
    req `setHeader` toHeader ("X-Embarcadero-Application-Id", xs)
instance HasOptionalParam DeleteUser XEmbarcaderoAppSecret where
  applyOptionalParam req (XEmbarcaderoAppSecret xs) =
    req `setHeader` toHeader ("X-Embarcadero-App-Secret", xs)
instance HasOptionalParam DeleteUser XEmbarcaderoMasterSecret where
  applyOptionalParam req (XEmbarcaderoMasterSecret xs) =
    req `setHeader` toHeader ("X-Embarcadero-Master-Secret", xs)

-- *** getUser

-- | @GET \/users\/{id}@
-- 
-- Get User
-- 
--  |      Used to retrieve all data from a `User`. **id** is the unique EMS User identifier (UID) in the EMS database.
-- 
getUser 
  :: Id -- ^ "id" -  A user ID
  -> EMSAPIDocumentationRequest GetUser MimeNoContent UserObject MimeJSON
getUser (Id id) =
  _mkRequest "GET" ["/users/",toPath id]

data GetUser  
instance HasOptionalParam GetUser XEmbarcaderoApplicationId where
  applyOptionalParam req (XEmbarcaderoApplicationId xs) =
    req `setHeader` toHeader ("X-Embarcadero-Application-Id", xs)
instance HasOptionalParam GetUser XEmbarcaderoAppSecret where
  applyOptionalParam req (XEmbarcaderoAppSecret xs) =
    req `setHeader` toHeader ("X-Embarcadero-App-Secret", xs)
instance HasOptionalParam GetUser XEmbarcaderoMasterSecret where
  applyOptionalParam req (XEmbarcaderoMasterSecret xs) =
    req `setHeader` toHeader ("X-Embarcadero-Master-Secret", xs)
-- | @application/json@
instance Produces GetUser MimeJSON


-- *** getUserFields

-- | @GET \/users\/fields@
-- 
-- Get Fields
-- 
--  |      Used to retrieve all the `field names` of the EMS Users (including the custom fields).
-- 
getUserFields 
  :: EMSAPIDocumentationRequest GetUserFields MimeNoContent [FieldObject] MimeJSON
getUserFields =
  _mkRequest "GET" ["/users/fields"]

data GetUserFields  
instance HasOptionalParam GetUserFields XEmbarcaderoApplicationId where
  applyOptionalParam req (XEmbarcaderoApplicationId xs) =
    req `setHeader` toHeader ("X-Embarcadero-Application-Id", xs)
instance HasOptionalParam GetUserFields XEmbarcaderoAppSecret where
  applyOptionalParam req (XEmbarcaderoAppSecret xs) =
    req `setHeader` toHeader ("X-Embarcadero-App-Secret", xs)
instance HasOptionalParam GetUserFields XEmbarcaderoMasterSecret where
  applyOptionalParam req (XEmbarcaderoMasterSecret xs) =
    req `setHeader` toHeader ("X-Embarcadero-Master-Secret", xs)
-- | @application/json@
instance Produces GetUserFields MimeJSON


-- *** getUserGroups

-- | @GET \/users\/{id}\/groups@
-- 
-- Get User Groups
-- 
--  |      Used to retrieve the EMS Groups the EMS User belongs to. **id** is the unique EMS User identifier (UID) in the EMS database.
-- 
getUserGroups 
  :: Id -- ^ "id" -  A user ID
  -> EMSAPIDocumentationRequest GetUserGroups MimeNoContent [GroupName] MimeJSON
getUserGroups (Id id) =
  _mkRequest "GET" ["/users/",toPath id,"/groups"]

data GetUserGroups  
instance HasOptionalParam GetUserGroups XEmbarcaderoApplicationId where
  applyOptionalParam req (XEmbarcaderoApplicationId xs) =
    req `setHeader` toHeader ("X-Embarcadero-Application-Id", xs)
instance HasOptionalParam GetUserGroups XEmbarcaderoAppSecret where
  applyOptionalParam req (XEmbarcaderoAppSecret xs) =
    req `setHeader` toHeader ("X-Embarcadero-App-Secret", xs)
instance HasOptionalParam GetUserGroups XEmbarcaderoMasterSecret where
  applyOptionalParam req (XEmbarcaderoMasterSecret xs) =
    req `setHeader` toHeader ("X-Embarcadero-Master-Secret", xs)
-- | @application/json@
instance Produces GetUserGroups MimeJSON


-- *** getUsers

-- | @GET \/users@
-- 
-- Get Users
-- 
--  |      Used to retrieve all data from `Users`.      Optional query param of **skip, limit, order, where** determines       size of returned array, filtered and order by.
-- 
getUsers 
  :: EMSAPIDocumentationRequest GetUsers MimeNoContent [UserObject] MimeJSON
getUsers =
  _mkRequest "GET" ["/users"]

data GetUsers  
instance HasOptionalParam GetUsers XEmbarcaderoApplicationId where
  applyOptionalParam req (XEmbarcaderoApplicationId xs) =
    req `setHeader` toHeader ("X-Embarcadero-Application-Id", xs)
instance HasOptionalParam GetUsers XEmbarcaderoAppSecret where
  applyOptionalParam req (XEmbarcaderoAppSecret xs) =
    req `setHeader` toHeader ("X-Embarcadero-App-Secret", xs)
instance HasOptionalParam GetUsers XEmbarcaderoMasterSecret where
  applyOptionalParam req (XEmbarcaderoMasterSecret xs) =
    req `setHeader` toHeader ("X-Embarcadero-Master-Secret", xs)

-- | /Optional Param/ "skip" - users skipped
instance HasOptionalParam GetUsers Skip where
  applyOptionalParam req (Skip xs) =
    req `setQuery` toQuery ("skip", Just xs)

-- | /Optional Param/ "limit" - maximum number of results to return
instance HasOptionalParam GetUsers Limit where
  applyOptionalParam req (Limit xs) =
    req `setQuery` toQuery ("limit", Just xs)

-- | /Optional Param/ "order" - order ascending or descending (asc, desc)
instance HasOptionalParam GetUsers Order where
  applyOptionalParam req (Order xs) =
    req `setQuery` toQuery ("order", Just xs)

-- | /Optional Param/ "where" - filter operators (lt, lte, gt, gte, eq, neq, like, nlike)
instance HasOptionalParam GetUsers ParamWhere where
  applyOptionalParam req (ParamWhere xs) =
    req `setQuery` toQuery ("where", Just xs)
-- | @application/json@
instance Produces GetUsers MimeJSON


-- *** loginUser

-- | @POST \/users\/login@
-- 
-- Log In
-- 
--  |      Logs in to the EMS Server with a specific EMS User.
-- 
loginUser 
  :: (Consumes LoginUser MimeJSON, MimeRender MimeJSON UserCredentialsObject)
  => UserCredentialsObject -- ^ "body" -  A user object
  -> EMSAPIDocumentationRequest LoginUser MimeJSON UserTokenObject MimeJSON
loginUser body =
  _mkRequest "POST" ["/users/login"]
    `setBodyParam` body

data LoginUser 

-- | /Body Param/ "body" - A user object
instance HasBodyParam LoginUser UserCredentialsObject 
instance HasOptionalParam LoginUser XEmbarcaderoApplicationId where
  applyOptionalParam req (XEmbarcaderoApplicationId xs) =
    req `setHeader` toHeader ("X-Embarcadero-Application-Id", xs)
instance HasOptionalParam LoginUser XEmbarcaderoAppSecret where
  applyOptionalParam req (XEmbarcaderoAppSecret xs) =
    req `setHeader` toHeader ("X-Embarcadero-App-Secret", xs)
instance HasOptionalParam LoginUser XEmbarcaderoMasterSecret where
  applyOptionalParam req (XEmbarcaderoMasterSecret xs) =
    req `setHeader` toHeader ("X-Embarcadero-Master-Secret", xs)

-- | @application/json@
instance Consumes LoginUser MimeJSON

-- | @application/json@
instance Produces LoginUser MimeJSON


-- *** logoutUser

-- | @POST \/users\/logout@
-- 
-- sPostLogoutSummaryTitle
-- 
-- sPostLogoutSummaryDesc
-- 
-- Note: Has 'Produces' instances, but no response schema
-- 
logoutUser 
  :: EMSAPIDocumentationRequest LogoutUser MimeNoContent res MimeJSON
logoutUser =
  _mkRequest "POST" ["/users/logout"]

data LogoutUser  
instance HasOptionalParam LogoutUser XEmbarcaderoApplicationId where
  applyOptionalParam req (XEmbarcaderoApplicationId xs) =
    req `setHeader` toHeader ("X-Embarcadero-Application-Id", xs)
instance HasOptionalParam LogoutUser XEmbarcaderoAppSecret where
  applyOptionalParam req (XEmbarcaderoAppSecret xs) =
    req `setHeader` toHeader ("X-Embarcadero-App-Secret", xs)
instance HasOptionalParam LogoutUser XEmbarcaderoMasterSecret where
  applyOptionalParam req (XEmbarcaderoMasterSecret xs) =
    req `setHeader` toHeader ("X-Embarcadero-Master-Secret", xs)

-- | @application/json@
instance Consumes LogoutUser MimeJSON

-- | @application/json@
instance Produces LogoutUser MimeJSON


-- *** signupUser

-- | @POST \/users\/signup@
-- 
-- Sign Up  User
-- 
--  |      Signs up to the EMS Server with an appropriate EMS User.
-- 
signupUser 
  :: (Consumes SignupUser MimeJSON, MimeRender MimeJSON UserCredentialsObject)
  => UserCredentialsObject -- ^ "body" -  Object to sign up a new EMS User in the EMS Server
  -> EMSAPIDocumentationRequest SignupUser MimeJSON UserSignUpResponseObject MimeJSON
signupUser body =
  _mkRequest "POST" ["/users/signup"]
    `setBodyParam` body

data SignupUser 

-- | /Body Param/ "body" - Object to sign up a new EMS User in the EMS Server
instance HasBodyParam SignupUser UserCredentialsObject 
instance HasOptionalParam SignupUser XEmbarcaderoApplicationId where
  applyOptionalParam req (XEmbarcaderoApplicationId xs) =
    req `setHeader` toHeader ("X-Embarcadero-Application-Id", xs)
instance HasOptionalParam SignupUser XEmbarcaderoAppSecret where
  applyOptionalParam req (XEmbarcaderoAppSecret xs) =
    req `setHeader` toHeader ("X-Embarcadero-App-Secret", xs)
instance HasOptionalParam SignupUser XEmbarcaderoMasterSecret where
  applyOptionalParam req (XEmbarcaderoMasterSecret xs) =
    req `setHeader` toHeader ("X-Embarcadero-Master-Secret", xs)

-- | @application/json@
instance Consumes SignupUser MimeJSON

-- | @application/json@
instance Produces SignupUser MimeJSON


-- *** updateUser

-- | @PUT \/users\/{id}@
-- 
-- Update User
-- 
--  |      Used to update a `User`. **id** is the unique EMS User identifier (UID) in the EMS database.
-- 
updateUser 
  :: (Consumes UpdateUser MimeJSON, MimeRender MimeJSON UpdateObject)
  => Id -- ^ "id" -  A user ID
  -> UpdateObject -- ^ "body" -  Add any fieldName
  -> EMSAPIDocumentationRequest UpdateUser MimeJSON UpdatedObject MimeJSON
updateUser (Id id) body =
  _mkRequest "PUT" ["/users/",toPath id]
    `setBodyParam` body

data UpdateUser 

-- | /Body Param/ "body" - Add any fieldName
instance HasBodyParam UpdateUser UpdateObject 
instance HasOptionalParam UpdateUser XEmbarcaderoApplicationId where
  applyOptionalParam req (XEmbarcaderoApplicationId xs) =
    req `setHeader` toHeader ("X-Embarcadero-Application-Id", xs)
instance HasOptionalParam UpdateUser XEmbarcaderoAppSecret where
  applyOptionalParam req (XEmbarcaderoAppSecret xs) =
    req `setHeader` toHeader ("X-Embarcadero-App-Secret", xs)
instance HasOptionalParam UpdateUser XEmbarcaderoMasterSecret where
  applyOptionalParam req (XEmbarcaderoMasterSecret xs) =
    req `setHeader` toHeader ("X-Embarcadero-Master-Secret", xs)

-- | @application/json@
instance Consumes UpdateUser MimeJSON

-- | @application/json@
instance Produces UpdateUser MimeJSON

