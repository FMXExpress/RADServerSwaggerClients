{-
   EMS API Documentation

   Enterprise Mobility Services API      [Learn about EMS](https://www.embarcadero.com/products/rad-studio/enterprise-mobility-services)      EMS (Enterprise Mobility Services) offers a Mobile Enterprise Application Platform (MEAP)      TurnKey Middleware for Interconnected Distributed Apps

   OpenAPI spec version: 2.0
   EMS API Documentation API version: 0.0.0
   Generated by Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
-}

{-|
Module : EMSAPIDocumentation.API.EdgeModulesInvokers
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module EMSAPIDocumentation.API.EdgeModulesInvokers where

import EMSAPIDocumentation.Core
import EMSAPIDocumentation.MimeTypes
import EMSAPIDocumentation.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** EdgeModulesInvokers

-- *** deleteResourceEndpoint

-- | @DELETE \/edgemodules\/{mname}\/{rname}@
-- 
-- Invoke Resource Delete Method
-- 
-- Used to invoke the DELETE method of the resource from an existing EMS EdgeModule.
-- 
deleteResourceEndpoint 
  :: Mname -- ^ "mname" -  Is the EMS EdgeModule name
  -> Rname -- ^ "rname" -  Is the unique EMS EdgeModule Resource name
  -> EMSAPIDocumentationRequest DeleteResourceEndpoint MimeNoContent NoContent MimeNoContent
deleteResourceEndpoint (Mname mname) (Rname rname) =
  _mkRequest "DELETE" ["/edgemodules/",toPath mname,"/",toPath rname]

data DeleteResourceEndpoint  
instance HasOptionalParam DeleteResourceEndpoint XEmbarcaderoApplicationId where
  applyOptionalParam req (XEmbarcaderoApplicationId xs) =
    req `setHeader` toHeader ("X-Embarcadero-Application-Id", xs)
instance HasOptionalParam DeleteResourceEndpoint XEmbarcaderoAppSecret where
  applyOptionalParam req (XEmbarcaderoAppSecret xs) =
    req `setHeader` toHeader ("X-Embarcadero-App-Secret", xs)
instance HasOptionalParam DeleteResourceEndpoint XEmbarcaderoMasterSecret where
  applyOptionalParam req (XEmbarcaderoMasterSecret xs) =
    req `setHeader` toHeader ("X-Embarcadero-Master-Secret", xs)

-- *** deleteResourceEndpointItem

-- | @DELETE \/edgemodules\/{mname}\/{rname}\/{wildcard}@
-- 
-- Invoke Resource/* Delete Method
-- 
-- Used to invoke the DELETE method of the resource from an existing EMS EdgeModule.
-- 
deleteResourceEndpointItem 
  :: Mname -- ^ "mname" -  Is the EMS EdgeModule name
  -> Rname -- ^ "rname" -  Is the unique EMS EdgeModule Resource name
  -> Wildcard -- ^ "wildcard" -  Is the Wild card part of the URL
  -> EMSAPIDocumentationRequest DeleteResourceEndpointItem MimeNoContent NoContent MimeNoContent
deleteResourceEndpointItem (Mname mname) (Rname rname) (Wildcard wildcard) =
  _mkRequest "DELETE" ["/edgemodules/",toPath mname,"/",toPath rname,"/",toPath wildcard]

data DeleteResourceEndpointItem  
instance HasOptionalParam DeleteResourceEndpointItem XEmbarcaderoApplicationId where
  applyOptionalParam req (XEmbarcaderoApplicationId xs) =
    req `setHeader` toHeader ("X-Embarcadero-Application-Id", xs)
instance HasOptionalParam DeleteResourceEndpointItem XEmbarcaderoAppSecret where
  applyOptionalParam req (XEmbarcaderoAppSecret xs) =
    req `setHeader` toHeader ("X-Embarcadero-App-Secret", xs)
instance HasOptionalParam DeleteResourceEndpointItem XEmbarcaderoMasterSecret where
  applyOptionalParam req (XEmbarcaderoMasterSecret xs) =
    req `setHeader` toHeader ("X-Embarcadero-Master-Secret", xs)

-- *** getResourceEndpoint

-- | @GET \/edgemodules\/{mname}\/{rname}@
-- 
-- Invoke Resource Get Method
-- 
-- Used to invoke the GET method of the resource from an existing EMS EdgeModule.
-- 
-- Note: Has 'Produces' instances, but no response schema
-- 
getResourceEndpoint 
  :: Mname -- ^ "mname" -  Is the EMS EdgeModule name
  -> Rname -- ^ "rname" -  Is the unique EMS EdgeModule Resource name
  -> EMSAPIDocumentationRequest GetResourceEndpoint MimeNoContent res MimeJSON
getResourceEndpoint (Mname mname) (Rname rname) =
  _mkRequest "GET" ["/edgemodules/",toPath mname,"/",toPath rname]

data GetResourceEndpoint  
instance HasOptionalParam GetResourceEndpoint XEmbarcaderoApplicationId where
  applyOptionalParam req (XEmbarcaderoApplicationId xs) =
    req `setHeader` toHeader ("X-Embarcadero-Application-Id", xs)
instance HasOptionalParam GetResourceEndpoint XEmbarcaderoAppSecret where
  applyOptionalParam req (XEmbarcaderoAppSecret xs) =
    req `setHeader` toHeader ("X-Embarcadero-App-Secret", xs)
instance HasOptionalParam GetResourceEndpoint XEmbarcaderoMasterSecret where
  applyOptionalParam req (XEmbarcaderoMasterSecret xs) =
    req `setHeader` toHeader ("X-Embarcadero-Master-Secret", xs)
-- | @application/json@
instance Produces GetResourceEndpoint MimeJSON


-- *** getResourceEndpointItem

-- | @GET \/edgemodules\/{mname}\/{rname}\/{wildcard}@
-- 
-- Invoke Resource/* Get Method
-- 
-- Used to invoke the GET method of the resource from an existing EMS EdgeModule.
-- 
getResourceEndpointItem 
  :: Mname -- ^ "mname" -  Is the EMS EdgeModule name
  -> Rname -- ^ "rname" -  Is the unique EMS EdgeModule Resource name
  -> Wildcard -- ^ "wildcard" -  Is the Wild card part of the URL
  -> EMSAPIDocumentationRequest GetResourceEndpointItem MimeNoContent NoContent MimeNoContent
getResourceEndpointItem (Mname mname) (Rname rname) (Wildcard wildcard) =
  _mkRequest "GET" ["/edgemodules/",toPath mname,"/",toPath rname,"/",toPath wildcard]

data GetResourceEndpointItem  
instance HasOptionalParam GetResourceEndpointItem XEmbarcaderoApplicationId where
  applyOptionalParam req (XEmbarcaderoApplicationId xs) =
    req `setHeader` toHeader ("X-Embarcadero-Application-Id", xs)
instance HasOptionalParam GetResourceEndpointItem XEmbarcaderoAppSecret where
  applyOptionalParam req (XEmbarcaderoAppSecret xs) =
    req `setHeader` toHeader ("X-Embarcadero-App-Secret", xs)
instance HasOptionalParam GetResourceEndpointItem XEmbarcaderoMasterSecret where
  applyOptionalParam req (XEmbarcaderoMasterSecret xs) =
    req `setHeader` toHeader ("X-Embarcadero-Master-Secret", xs)

-- *** patchResourceEndpoint

-- | @PATCH \/edgemodules\/{mname}\/{rname}@
-- 
-- Invoke Resource Patch Method
-- 
-- Used to invoke the PATCH method of the resource from an existing EMS EdgeModule.
-- 
-- Note: Has 'Produces' instances, but no response schema
-- 
patchResourceEndpoint 
  :: (Consumes PatchResourceEndpoint MimeJSON, MimeRender MimeJSON A.Value)
  => Mname -- ^ "mname" -  Is the EMS EdgeModule name
  -> Rname -- ^ "rname" -  Is the unique EMS EdgeModule Resource name
  -> A.Value -- ^ "body" -  Body Object
  -> EMSAPIDocumentationRequest PatchResourceEndpoint MimeJSON res MimeJSON
patchResourceEndpoint (Mname mname) (Rname rname) body =
  _mkRequest "PATCH" ["/edgemodules/",toPath mname,"/",toPath rname]
    `setBodyParam` body

data PatchResourceEndpoint 

-- | /Body Param/ "body" - Body Object
instance HasBodyParam PatchResourceEndpoint A.Value 
instance HasOptionalParam PatchResourceEndpoint XEmbarcaderoApplicationId where
  applyOptionalParam req (XEmbarcaderoApplicationId xs) =
    req `setHeader` toHeader ("X-Embarcadero-Application-Id", xs)
instance HasOptionalParam PatchResourceEndpoint XEmbarcaderoAppSecret where
  applyOptionalParam req (XEmbarcaderoAppSecret xs) =
    req `setHeader` toHeader ("X-Embarcadero-App-Secret", xs)
instance HasOptionalParam PatchResourceEndpoint XEmbarcaderoMasterSecret where
  applyOptionalParam req (XEmbarcaderoMasterSecret xs) =
    req `setHeader` toHeader ("X-Embarcadero-Master-Secret", xs)

-- | @application/json@
instance Consumes PatchResourceEndpoint MimeJSON

-- | @application/json@
instance Produces PatchResourceEndpoint MimeJSON


-- *** patchResourceEndpointItem

-- | @PATCH \/edgemodules\/{mname}\/{rname}\/{wildcard}@
-- 
-- Invoke Resource/* Patch Method
-- 
-- Used to invoke the PATCH method of the resource from an existing EMS EdgeModule.
-- 
-- Note: Has 'Produces' instances, but no response schema
-- 
patchResourceEndpointItem 
  :: (Consumes PatchResourceEndpointItem MimeJSON, MimeRender MimeJSON A.Value)
  => Mname -- ^ "mname" -  Is the EMS EdgeModule name
  -> Rname -- ^ "rname" -  Is the unique EMS EdgeModule Resource name
  -> Wildcard -- ^ "wildcard" -  Is the Wild card part of the URL
  -> A.Value -- ^ "body" -  Body Object
  -> EMSAPIDocumentationRequest PatchResourceEndpointItem MimeJSON res MimeJSON
patchResourceEndpointItem (Mname mname) (Rname rname) (Wildcard wildcard) body =
  _mkRequest "PATCH" ["/edgemodules/",toPath mname,"/",toPath rname,"/",toPath wildcard]
    `setBodyParam` body

data PatchResourceEndpointItem 

-- | /Body Param/ "body" - Body Object
instance HasBodyParam PatchResourceEndpointItem A.Value 
instance HasOptionalParam PatchResourceEndpointItem XEmbarcaderoApplicationId where
  applyOptionalParam req (XEmbarcaderoApplicationId xs) =
    req `setHeader` toHeader ("X-Embarcadero-Application-Id", xs)
instance HasOptionalParam PatchResourceEndpointItem XEmbarcaderoAppSecret where
  applyOptionalParam req (XEmbarcaderoAppSecret xs) =
    req `setHeader` toHeader ("X-Embarcadero-App-Secret", xs)
instance HasOptionalParam PatchResourceEndpointItem XEmbarcaderoMasterSecret where
  applyOptionalParam req (XEmbarcaderoMasterSecret xs) =
    req `setHeader` toHeader ("X-Embarcadero-Master-Secret", xs)

-- | @application/json@
instance Consumes PatchResourceEndpointItem MimeJSON

-- | @application/json@
instance Produces PatchResourceEndpointItem MimeJSON


-- *** postResourceEndpoint

-- | @POST \/edgemodules\/{mname}\/{rname}@
-- 
-- Invoke Resource Post Method
-- 
-- Used to invoke the POST method of the resource from an existing EMS EdgeModule.
-- 
-- Note: Has 'Produces' instances, but no response schema
-- 
postResourceEndpoint 
  :: (Consumes PostResourceEndpoint MimeJSON, MimeRender MimeJSON A.Value)
  => Mname -- ^ "mname" -  Is the EMS EdgeModule name
  -> Rname -- ^ "rname" -  Is the unique EMS EdgeModule Resource name
  -> A.Value -- ^ "body" -  Body Object
  -> EMSAPIDocumentationRequest PostResourceEndpoint MimeJSON res MimeJSON
postResourceEndpoint (Mname mname) (Rname rname) body =
  _mkRequest "POST" ["/edgemodules/",toPath mname,"/",toPath rname]
    `setBodyParam` body

data PostResourceEndpoint 

-- | /Body Param/ "body" - Body Object
instance HasBodyParam PostResourceEndpoint A.Value 
instance HasOptionalParam PostResourceEndpoint XEmbarcaderoApplicationId where
  applyOptionalParam req (XEmbarcaderoApplicationId xs) =
    req `setHeader` toHeader ("X-Embarcadero-Application-Id", xs)
instance HasOptionalParam PostResourceEndpoint XEmbarcaderoAppSecret where
  applyOptionalParam req (XEmbarcaderoAppSecret xs) =
    req `setHeader` toHeader ("X-Embarcadero-App-Secret", xs)
instance HasOptionalParam PostResourceEndpoint XEmbarcaderoMasterSecret where
  applyOptionalParam req (XEmbarcaderoMasterSecret xs) =
    req `setHeader` toHeader ("X-Embarcadero-Master-Secret", xs)

-- | @application/json@
instance Consumes PostResourceEndpoint MimeJSON

-- | @application/json@
instance Produces PostResourceEndpoint MimeJSON


-- *** postResourceEndpointItem

-- | @POST \/edgemodules\/{mname}\/{rname}\/{wildcard}@
-- 
-- Invoke Resource/* Post Method
-- 
-- Used to invoke the POST method of the resource from an existing EMS EdgeModule.
-- 
-- Note: Has 'Produces' instances, but no response schema
-- 
postResourceEndpointItem 
  :: (Consumes PostResourceEndpointItem MimeJSON, MimeRender MimeJSON A.Value)
  => Mname -- ^ "mname" -  Is the EMS EdgeModule name
  -> Rname -- ^ "rname" -  Is the unique EMS EdgeModule Resource name
  -> Wildcard -- ^ "wildcard" -  Is the Wild card part of the URL
  -> A.Value -- ^ "body" -  Body Object
  -> EMSAPIDocumentationRequest PostResourceEndpointItem MimeJSON res MimeJSON
postResourceEndpointItem (Mname mname) (Rname rname) (Wildcard wildcard) body =
  _mkRequest "POST" ["/edgemodules/",toPath mname,"/",toPath rname,"/",toPath wildcard]
    `setBodyParam` body

data PostResourceEndpointItem 

-- | /Body Param/ "body" - Body Object
instance HasBodyParam PostResourceEndpointItem A.Value 
instance HasOptionalParam PostResourceEndpointItem XEmbarcaderoApplicationId where
  applyOptionalParam req (XEmbarcaderoApplicationId xs) =
    req `setHeader` toHeader ("X-Embarcadero-Application-Id", xs)
instance HasOptionalParam PostResourceEndpointItem XEmbarcaderoAppSecret where
  applyOptionalParam req (XEmbarcaderoAppSecret xs) =
    req `setHeader` toHeader ("X-Embarcadero-App-Secret", xs)
instance HasOptionalParam PostResourceEndpointItem XEmbarcaderoMasterSecret where
  applyOptionalParam req (XEmbarcaderoMasterSecret xs) =
    req `setHeader` toHeader ("X-Embarcadero-Master-Secret", xs)

-- | @application/json@
instance Consumes PostResourceEndpointItem MimeJSON

-- | @application/json@
instance Produces PostResourceEndpointItem MimeJSON


-- *** putResourceEndpoint

-- | @PUT \/edgemodules\/{mname}\/{rname}@
-- 
-- Invoke Resource Put Method
-- 
-- Used to invoke the PUT method of the resource from an existing EMS EdgeModule.
-- 
-- Note: Has 'Produces' instances, but no response schema
-- 
putResourceEndpoint 
  :: (Consumes PutResourceEndpoint MimeJSON, MimeRender MimeJSON A.Value)
  => Mname -- ^ "mname" -  Is the EMS EdgeModule name
  -> Rname -- ^ "rname" -  Is the unique EMS EdgeModule Resource name
  -> A.Value -- ^ "body" -  Body Object
  -> EMSAPIDocumentationRequest PutResourceEndpoint MimeJSON res MimeJSON
putResourceEndpoint (Mname mname) (Rname rname) body =
  _mkRequest "PUT" ["/edgemodules/",toPath mname,"/",toPath rname]
    `setBodyParam` body

data PutResourceEndpoint 

-- | /Body Param/ "body" - Body Object
instance HasBodyParam PutResourceEndpoint A.Value 
instance HasOptionalParam PutResourceEndpoint XEmbarcaderoApplicationId where
  applyOptionalParam req (XEmbarcaderoApplicationId xs) =
    req `setHeader` toHeader ("X-Embarcadero-Application-Id", xs)
instance HasOptionalParam PutResourceEndpoint XEmbarcaderoAppSecret where
  applyOptionalParam req (XEmbarcaderoAppSecret xs) =
    req `setHeader` toHeader ("X-Embarcadero-App-Secret", xs)
instance HasOptionalParam PutResourceEndpoint XEmbarcaderoMasterSecret where
  applyOptionalParam req (XEmbarcaderoMasterSecret xs) =
    req `setHeader` toHeader ("X-Embarcadero-Master-Secret", xs)

-- | @application/json@
instance Consumes PutResourceEndpoint MimeJSON

-- | @application/json@
instance Produces PutResourceEndpoint MimeJSON


-- *** putResourceEndpointItem

-- | @PUT \/edgemodules\/{mname}\/{rname}\/{wildcard}@
-- 
-- Invoke Resource/* Put Method
-- 
-- Used to invoke the PUT method of the resource from an existing EMS EdgeModule.
-- 
-- Note: Has 'Produces' instances, but no response schema
-- 
putResourceEndpointItem 
  :: (Consumes PutResourceEndpointItem MimeJSON, MimeRender MimeJSON A.Value)
  => Mname -- ^ "mname" -  Is the EMS EdgeModule name
  -> Rname -- ^ "rname" -  Is the unique EMS EdgeModule Resource name
  -> Wildcard -- ^ "wildcard" -  Is the Wild card part of the URL
  -> A.Value -- ^ "body" -  Body Object
  -> EMSAPIDocumentationRequest PutResourceEndpointItem MimeJSON res MimeJSON
putResourceEndpointItem (Mname mname) (Rname rname) (Wildcard wildcard) body =
  _mkRequest "PUT" ["/edgemodules/",toPath mname,"/",toPath rname,"/",toPath wildcard]
    `setBodyParam` body

data PutResourceEndpointItem 

-- | /Body Param/ "body" - Body Object
instance HasBodyParam PutResourceEndpointItem A.Value 
instance HasOptionalParam PutResourceEndpointItem XEmbarcaderoApplicationId where
  applyOptionalParam req (XEmbarcaderoApplicationId xs) =
    req `setHeader` toHeader ("X-Embarcadero-Application-Id", xs)
instance HasOptionalParam PutResourceEndpointItem XEmbarcaderoAppSecret where
  applyOptionalParam req (XEmbarcaderoAppSecret xs) =
    req `setHeader` toHeader ("X-Embarcadero-App-Secret", xs)
instance HasOptionalParam PutResourceEndpointItem XEmbarcaderoMasterSecret where
  applyOptionalParam req (XEmbarcaderoMasterSecret xs) =
    req `setHeader` toHeader ("X-Embarcadero-Master-Secret", xs)

-- | @application/json@
instance Consumes PutResourceEndpointItem MimeJSON

-- | @application/json@
instance Produces PutResourceEndpointItem MimeJSON

