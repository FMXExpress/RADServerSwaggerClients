/* 
 * EMS API Documentation
 *
 * Enterprise Mobility Services API      [Learn about EMS](https://www.embarcadero.com/products/rad-studio/enterprise-mobility-services)      EMS (Enterprise Mobility Services) offers a Mobile Enterprise Application Platform (MEAP)      TurnKey Middleware for Interconnected Distributed Apps
 *
 * OpenAPI spec version: 0.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// EdgeModuleAddedObject
    /// </summary>
    [DataContract]
    public partial class EdgeModuleAddedObject :  IEquatable<EdgeModuleAddedObject>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EdgeModuleAddedObject" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected EdgeModuleAddedObject() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="EdgeModuleAddedObject" /> class.
        /// </summary>
        /// <param name="id">id (required).</param>
        /// <param name="modulename">modulename (required).</param>
        public EdgeModuleAddedObject(string id = default(string), string modulename = default(string))
        {
            // to ensure "id" is required (not null)
            if (id == null)
            {
                throw new InvalidDataException("id is a required property for EdgeModuleAddedObject and cannot be null");
            }
            else
            {
                this.Id = id;
            }
            // to ensure "modulename" is required (not null)
            if (modulename == null)
            {
                throw new InvalidDataException("modulename is a required property for EdgeModuleAddedObject and cannot be null");
            }
            else
            {
                this.Modulename = modulename;
            }
        }
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="_id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets Modulename
        /// </summary>
        [DataMember(Name="modulename", EmitDefaultValue=false)]
        public string Modulename { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class EdgeModuleAddedObject {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Modulename: ").Append(Modulename).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as EdgeModuleAddedObject);
        }

        /// <summary>
        /// Returns true if EdgeModuleAddedObject instances are equal
        /// </summary>
        /// <param name="input">Instance of EdgeModuleAddedObject to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(EdgeModuleAddedObject input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.Modulename == input.Modulename ||
                    (this.Modulename != null &&
                    this.Modulename.Equals(input.Modulename))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.Modulename != null)
                    hashCode = hashCode * 59 + this.Modulename.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
