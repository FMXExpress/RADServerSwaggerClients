/* 
 * EMS API Documentation
 *
 * Enterprise Mobility Services API      [Learn about EMS](https://www.embarcadero.com/products/rad-studio/enterprise-mobility-services)      EMS (Enterprise Mobility Services) offers a Mobile Enterprise Application Platform (MEAP)      TurnKey Middleware for Interconnected Distributed Apps
 *
 * OpenAPI spec version: 0.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// PushDataObject
    /// </summary>
    [DataContract]
    public partial class PushDataObject :  IEquatable<PushDataObject>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PushDataObject" /> class.
        /// </summary>
        /// <param name="gcm">gcm.</param>
        /// <param name="aps">aps.</param>
        /// <param name="extras">extras.</param>
        public PushDataObject(PushDataObjectGcm gcm = default(PushDataObjectGcm), PushDataObjectAps aps = default(PushDataObjectAps), PushDataObjectExtras extras = default(PushDataObjectExtras))
        {
            this.Gcm = gcm;
            this.Aps = aps;
            this.Extras = extras;
        }
        
        /// <summary>
        /// Gets or Sets Gcm
        /// </summary>
        [DataMember(Name="gcm", EmitDefaultValue=false)]
        public PushDataObjectGcm Gcm { get; set; }

        /// <summary>
        /// Gets or Sets Aps
        /// </summary>
        [DataMember(Name="aps", EmitDefaultValue=false)]
        public PushDataObjectAps Aps { get; set; }

        /// <summary>
        /// Gets or Sets Extras
        /// </summary>
        [DataMember(Name="extras", EmitDefaultValue=false)]
        public PushDataObjectExtras Extras { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class PushDataObject {\n");
            sb.Append("  Gcm: ").Append(Gcm).Append("\n");
            sb.Append("  Aps: ").Append(Aps).Append("\n");
            sb.Append("  Extras: ").Append(Extras).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PushDataObject);
        }

        /// <summary>
        /// Returns true if PushDataObject instances are equal
        /// </summary>
        /// <param name="input">Instance of PushDataObject to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PushDataObject input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Gcm == input.Gcm ||
                    (this.Gcm != null &&
                    this.Gcm.Equals(input.Gcm))
                ) && 
                (
                    this.Aps == input.Aps ||
                    (this.Aps != null &&
                    this.Aps.Equals(input.Aps))
                ) && 
                (
                    this.Extras == input.Extras ||
                    (this.Extras != null &&
                    this.Extras.Equals(input.Extras))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Gcm != null)
                    hashCode = hashCode * 59 + this.Gcm.GetHashCode();
                if (this.Aps != null)
                    hashCode = hashCode * 59 + this.Aps.GetHashCode();
                if (this.Extras != null)
                    hashCode = hashCode * 59 + this.Extras.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
