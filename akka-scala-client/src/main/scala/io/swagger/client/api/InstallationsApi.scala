/**
 * EMS API Documentation
 * Enterprise Mobility Services API      [Learn about EMS](https://www.embarcadero.com/products/rad-studio/enterprise-mobility-services)      EMS (Enterprise Mobility Services) offers a Mobile Enterprise Application Platform (MEAP)      TurnKey Middleware for Interconnected Distributed Apps
 *
 * OpenAPI spec version: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package io.swagger.client.api

import io.swagger.client.model.ChannelName
import io.swagger.client.model.FieldInstallationObject
import io.swagger.client.model.InstallationAddObject
import io.swagger.client.model.InstallationAddedObject
import io.swagger.client.model.InstallationObject
import io.swagger.client.model.UpdateInstallationObject
import io.swagger.client.model.UpdatedInstallationObject
import io.swagger.client.core._
import io.swagger.client.core.CollectionFormats._
import io.swagger.client.core.ApiKeyLocations._

object InstallationsApi {

  /**
   *  |      Used to add a new &#x60;Installation&#x60; object to the EMS database.
   * 
   * Expected answers:
   *   code 201 : InstallationAddedObject (OK)
   *   code 404 :  (Installation already exists)
   * 
   * @param body Object to sign up a new EMS User in the EMS Server
   * @param xEmbarcaderoApplicationId 
   * @param xEmbarcaderoAppSecret 
   * @param xEmbarcaderoMasterSecret 
   */
  def addInstallation(body: InstallationAddObject, xEmbarcaderoApplicationId: Option[String] = None, xEmbarcaderoAppSecret: Option[String] = None, xEmbarcaderoMasterSecret: Option[String] = None): ApiRequest[InstallationAddedObject] =
    ApiRequest[InstallationAddedObject](ApiMethods.POST, "http://localhost:8080", "/installations", "application/json")
      .withBody(body)
      .withHeaderParam("X-Embarcadero-Application-Id", xEmbarcaderoApplicationId)
      .withHeaderParam("X-Embarcadero-App-Secret", xEmbarcaderoAppSecret)
      .withHeaderParam("X-Embarcadero-Master-Secret", xEmbarcaderoMasterSecret)
      .withSuccessResponse[InstallationAddedObject](201)
      .withErrorResponse[Unit](404)
        /**
   *  |      Used to delete an &#x60;Installation&#x60;. **id** is the unique EMS Installation identifier (IID) in the EMS database.
   * 
   * Expected answers:
   *   code 204 :  (No Content)
   *   code 404 :  (Not Found)
   * 
   * @param id A Installation ID
   * @param xEmbarcaderoApplicationId 
   * @param xEmbarcaderoAppSecret 
   * @param xEmbarcaderoMasterSecret 
   */
  def deleteInstallation(id: String, xEmbarcaderoApplicationId: Option[String] = None, xEmbarcaderoAppSecret: Option[String] = None, xEmbarcaderoMasterSecret: Option[String] = None): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.DELETE, "http://localhost:8080", "/installations/{id}", "application/json")
      .withPathParam("id", id)
      .withHeaderParam("X-Embarcadero-Application-Id", xEmbarcaderoApplicationId)
      .withHeaderParam("X-Embarcadero-App-Secret", xEmbarcaderoAppSecret)
      .withHeaderParam("X-Embarcadero-Master-Secret", xEmbarcaderoMasterSecret)
      .withSuccessResponse[Unit](204)
      .withErrorResponse[Unit](404)
        /**
   *  |       Used to retrieve the available channels to which the device has subscribed. **id** is the unique EMS Installation identifier (InstallationID) in the EMS database.
   * 
   * Expected answers:
   *   code 200 : Seq[ChannelName] (OK)
   * 
   * @param xEmbarcaderoApplicationId 
   * @param xEmbarcaderoAppSecret 
   * @param xEmbarcaderoMasterSecret 
   */
  def getChannels(xEmbarcaderoApplicationId: Option[String] = None, xEmbarcaderoAppSecret: Option[String] = None, xEmbarcaderoMasterSecret: Option[String] = None): ApiRequest[Seq[ChannelName]] =
    ApiRequest[Seq[ChannelName]](ApiMethods.GET, "http://localhost:8080", "/installations/channels", "application/json")
      .withHeaderParam("X-Embarcadero-Application-Id", xEmbarcaderoApplicationId)
      .withHeaderParam("X-Embarcadero-App-Secret", xEmbarcaderoAppSecret)
      .withHeaderParam("X-Embarcadero-Master-Secret", xEmbarcaderoMasterSecret)
      .withSuccessResponse[Seq[ChannelName]](200)
        /**
   *  |      Used to retrieve all data from a specific &#x60;Installation&#x60; (registered device). **id** is the unique EMS Installation identifier (InstallationID) in the EMS database.
   * 
   * Expected answers:
   *   code 200 : InstallationObject (OK)
   *   code 404 :  (Group not found / User not found)
   * 
   * @param id A Installation ID
   * @param xEmbarcaderoApplicationId 
   * @param xEmbarcaderoAppSecret 
   * @param xEmbarcaderoMasterSecret 
   */
  def getInstallation(id: String, xEmbarcaderoApplicationId: Option[String] = None, xEmbarcaderoAppSecret: Option[String] = None, xEmbarcaderoMasterSecret: Option[String] = None): ApiRequest[InstallationObject] =
    ApiRequest[InstallationObject](ApiMethods.GET, "http://localhost:8080", "/installations/{id}", "application/json")
      .withPathParam("id", id)
      .withHeaderParam("X-Embarcadero-Application-Id", xEmbarcaderoApplicationId)
      .withHeaderParam("X-Embarcadero-App-Secret", xEmbarcaderoAppSecret)
      .withHeaderParam("X-Embarcadero-Master-Secret", xEmbarcaderoMasterSecret)
      .withSuccessResponse[InstallationObject](200)
      .withErrorResponse[Unit](404)
        /**
   *  |      Used to retrieve all the &#x60;field names&#x60; of the EMS Installation (including the custom fields).
   * 
   * Expected answers:
   *   code 200 : Seq[FieldInstallationObject] (OK)
   * 
   * @param xEmbarcaderoApplicationId 
   * @param xEmbarcaderoAppSecret 
   * @param xEmbarcaderoMasterSecret 
   */
  def getInstallationFields(xEmbarcaderoApplicationId: Option[String] = None, xEmbarcaderoAppSecret: Option[String] = None, xEmbarcaderoMasterSecret: Option[String] = None): ApiRequest[Seq[FieldInstallationObject]] =
    ApiRequest[Seq[FieldInstallationObject]](ApiMethods.GET, "http://localhost:8080", "/installations/fields", "application/json")
      .withHeaderParam("X-Embarcadero-Application-Id", xEmbarcaderoApplicationId)
      .withHeaderParam("X-Embarcadero-App-Secret", xEmbarcaderoAppSecret)
      .withHeaderParam("X-Embarcadero-Master-Secret", xEmbarcaderoMasterSecret)
      .withSuccessResponse[Seq[FieldInstallationObject]](200)
        /**
   *  |      Used to retrieve all data from &#x60;Installation&#x60;.      Optional query param of **skip, limit, order, where** determines       size of returned array, filtered and order by.
   * 
   * Expected answers:
   *   code 200 : Seq[InstallationObject] (OK)
   * 
   * @param xEmbarcaderoApplicationId 
   * @param xEmbarcaderoAppSecret 
   * @param xEmbarcaderoMasterSecret 
   * @param skip users skipped
   * @param limit maximum number of results to return
   * @param order order ascending or descending (asc, desc)
   * @param where filter operators (lt, lte, gt, gte, eq, neq, like, nlike)
   */
  def getInstallations(xEmbarcaderoApplicationId: Option[String] = None, xEmbarcaderoAppSecret: Option[String] = None, xEmbarcaderoMasterSecret: Option[String] = None, skip: Option[Double] = None, limit: Option[Double] = None, order: Option[Double] = None, where: Option[String] = None): ApiRequest[Seq[InstallationObject]] =
    ApiRequest[Seq[InstallationObject]](ApiMethods.GET, "http://localhost:8080", "/installations", "application/json")
      .withQueryParam("skip", skip)
      .withQueryParam("limit", limit)
      .withQueryParam("order", order)
      .withQueryParam("where", where)
      .withHeaderParam("X-Embarcadero-Application-Id", xEmbarcaderoApplicationId)
      .withHeaderParam("X-Embarcadero-App-Secret", xEmbarcaderoAppSecret)
      .withHeaderParam("X-Embarcadero-Master-Secret", xEmbarcaderoMasterSecret)
      .withSuccessResponse[Seq[InstallationObject]](200)
        /**
   *  |      Used to update an &#x60;Installation&#x60;. **id** is the unique EMS Installation identifier (IID) in the EMS database.
   * 
   * Expected answers:
   *   code 200 : UpdatedInstallationObject (OK)
   *   code 404 :  (Not Found)
   * 
   * @param id A Installation ID
   * @param body Installation fields to update
   * @param xEmbarcaderoApplicationId 
   * @param xEmbarcaderoAppSecret 
   * @param xEmbarcaderoMasterSecret 
   */
  def updateInstallation(id: String, body: UpdateInstallationObject, xEmbarcaderoApplicationId: Option[String] = None, xEmbarcaderoAppSecret: Option[String] = None, xEmbarcaderoMasterSecret: Option[String] = None): ApiRequest[UpdatedInstallationObject] =
    ApiRequest[UpdatedInstallationObject](ApiMethods.PUT, "http://localhost:8080", "/installations/{id}", "application/json")
      .withBody(body)
      .withPathParam("id", id)
      .withHeaderParam("X-Embarcadero-Application-Id", xEmbarcaderoApplicationId)
      .withHeaderParam("X-Embarcadero-App-Secret", xEmbarcaderoAppSecret)
      .withHeaderParam("X-Embarcadero-Master-Secret", xEmbarcaderoMasterSecret)
      .withSuccessResponse[UpdatedInstallationObject](200)
      .withErrorResponse[Unit](404)
      

}

