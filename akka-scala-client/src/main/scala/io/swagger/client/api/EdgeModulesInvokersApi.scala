/**
 * EMS API Documentation
 * Enterprise Mobility Services API      [Learn about EMS](https://www.embarcadero.com/products/rad-studio/enterprise-mobility-services)      EMS (Enterprise Mobility Services) offers a Mobile Enterprise Application Platform (MEAP)      TurnKey Middleware for Interconnected Distributed Apps
 *
 * OpenAPI spec version: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package io.swagger.client.api

import io.swagger.client.core._
import io.swagger.client.core.CollectionFormats._
import io.swagger.client.core.ApiKeyLocations._

object EdgeModulesInvokersApi {

  /**
   * Used to invoke the DELETE method of the resource from an existing EMS EdgeModule.
   * 
   * Expected answers:
   *   code 200 :  (OK)
   * 
   * @param mname Is the EMS EdgeModule name
   * @param rname Is the unique EMS EdgeModule Resource name
   * @param xEmbarcaderoApplicationId 
   * @param xEmbarcaderoAppSecret 
   * @param xEmbarcaderoMasterSecret 
   */
  def deleteResourceEndpoint(mname: String, rname: String, xEmbarcaderoApplicationId: Option[String] = None, xEmbarcaderoAppSecret: Option[String] = None, xEmbarcaderoMasterSecret: Option[String] = None): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.DELETE, "http://localhost:8080", "/edgemodules/{mname}/{rname}", "application/json")
      .withPathParam("mname", mname)
      .withPathParam("rname", rname)
      .withHeaderParam("X-Embarcadero-Application-Id", xEmbarcaderoApplicationId)
      .withHeaderParam("X-Embarcadero-App-Secret", xEmbarcaderoAppSecret)
      .withHeaderParam("X-Embarcadero-Master-Secret", xEmbarcaderoMasterSecret)
      .withSuccessResponse[Unit](200)
        /**
   * Used to invoke the DELETE method of the resource from an existing EMS EdgeModule.
   * 
   * Expected answers:
   *   code 200 :  (OK)
   * 
   * @param mname Is the EMS EdgeModule name
   * @param rname Is the unique EMS EdgeModule Resource name
   * @param wildcard Is the Wild card part of the URL
   * @param xEmbarcaderoApplicationId 
   * @param xEmbarcaderoAppSecret 
   * @param xEmbarcaderoMasterSecret 
   */
  def deleteResourceEndpointItem(mname: String, rname: String, wildcard: String, xEmbarcaderoApplicationId: Option[String] = None, xEmbarcaderoAppSecret: Option[String] = None, xEmbarcaderoMasterSecret: Option[String] = None): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.DELETE, "http://localhost:8080", "/edgemodules/{mname}/{rname}/{wildcard}", "application/json")
      .withPathParam("mname", mname)
      .withPathParam("rname", rname)
      .withPathParam("wildcard", wildcard)
      .withHeaderParam("X-Embarcadero-Application-Id", xEmbarcaderoApplicationId)
      .withHeaderParam("X-Embarcadero-App-Secret", xEmbarcaderoAppSecret)
      .withHeaderParam("X-Embarcadero-Master-Secret", xEmbarcaderoMasterSecret)
      .withSuccessResponse[Unit](200)
        /**
   * Used to invoke the GET method of the resource from an existing EMS EdgeModule.
   * 
   * Expected answers:
   *   code 200 :  (OK)
   * 
   * @param mname Is the EMS EdgeModule name
   * @param rname Is the unique EMS EdgeModule Resource name
   * @param xEmbarcaderoApplicationId 
   * @param xEmbarcaderoAppSecret 
   * @param xEmbarcaderoMasterSecret 
   */
  def getResourceEndpoint(mname: String, rname: String, xEmbarcaderoApplicationId: Option[String] = None, xEmbarcaderoAppSecret: Option[String] = None, xEmbarcaderoMasterSecret: Option[String] = None): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.GET, "http://localhost:8080", "/edgemodules/{mname}/{rname}", "application/json")
      .withPathParam("mname", mname)
      .withPathParam("rname", rname)
      .withHeaderParam("X-Embarcadero-Application-Id", xEmbarcaderoApplicationId)
      .withHeaderParam("X-Embarcadero-App-Secret", xEmbarcaderoAppSecret)
      .withHeaderParam("X-Embarcadero-Master-Secret", xEmbarcaderoMasterSecret)
      .withSuccessResponse[Unit](200)
        /**
   * Used to invoke the GET method of the resource from an existing EMS EdgeModule.
   * 
   * Expected answers:
   *   code 200 :  (OK)
   * 
   * @param mname Is the EMS EdgeModule name
   * @param rname Is the unique EMS EdgeModule Resource name
   * @param wildcard Is the Wild card part of the URL
   * @param xEmbarcaderoApplicationId 
   * @param xEmbarcaderoAppSecret 
   * @param xEmbarcaderoMasterSecret 
   */
  def getResourceEndpointItem(mname: String, rname: String, wildcard: String, xEmbarcaderoApplicationId: Option[String] = None, xEmbarcaderoAppSecret: Option[String] = None, xEmbarcaderoMasterSecret: Option[String] = None): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.GET, "http://localhost:8080", "/edgemodules/{mname}/{rname}/{wildcard}", "application/json")
      .withPathParam("mname", mname)
      .withPathParam("rname", rname)
      .withPathParam("wildcard", wildcard)
      .withHeaderParam("X-Embarcadero-Application-Id", xEmbarcaderoApplicationId)
      .withHeaderParam("X-Embarcadero-App-Secret", xEmbarcaderoAppSecret)
      .withHeaderParam("X-Embarcadero-Master-Secret", xEmbarcaderoMasterSecret)
      .withSuccessResponse[Unit](200)
        /**
   * Used to invoke the PATCH method of the resource from an existing EMS EdgeModule.
   * 
   * Expected answers:
   *   code 200 :  (OK)
   * 
   * @param mname Is the EMS EdgeModule name
   * @param rname Is the unique EMS EdgeModule Resource name
   * @param body Body Object
   * @param xEmbarcaderoApplicationId 
   * @param xEmbarcaderoAppSecret 
   * @param xEmbarcaderoMasterSecret 
   */
  def patchResourceEndpoint(mname: String, rname: String, body: Any, xEmbarcaderoApplicationId: Option[String] = None, xEmbarcaderoAppSecret: Option[String] = None, xEmbarcaderoMasterSecret: Option[String] = None): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.PATCH, "http://localhost:8080", "/edgemodules/{mname}/{rname}", "application/json")
      .withBody(body)
      .withPathParam("mname", mname)
      .withPathParam("rname", rname)
      .withHeaderParam("X-Embarcadero-Application-Id", xEmbarcaderoApplicationId)
      .withHeaderParam("X-Embarcadero-App-Secret", xEmbarcaderoAppSecret)
      .withHeaderParam("X-Embarcadero-Master-Secret", xEmbarcaderoMasterSecret)
      .withSuccessResponse[Unit](200)
        /**
   * Used to invoke the PATCH method of the resource from an existing EMS EdgeModule.
   * 
   * Expected answers:
   *   code 200 :  (OK)
   * 
   * @param mname Is the EMS EdgeModule name
   * @param rname Is the unique EMS EdgeModule Resource name
   * @param wildcard Is the Wild card part of the URL
   * @param body Body Object
   * @param xEmbarcaderoApplicationId 
   * @param xEmbarcaderoAppSecret 
   * @param xEmbarcaderoMasterSecret 
   */
  def patchResourceEndpointItem(mname: String, rname: String, wildcard: String, body: Any, xEmbarcaderoApplicationId: Option[String] = None, xEmbarcaderoAppSecret: Option[String] = None, xEmbarcaderoMasterSecret: Option[String] = None): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.PATCH, "http://localhost:8080", "/edgemodules/{mname}/{rname}/{wildcard}", "application/json")
      .withBody(body)
      .withPathParam("mname", mname)
      .withPathParam("rname", rname)
      .withPathParam("wildcard", wildcard)
      .withHeaderParam("X-Embarcadero-Application-Id", xEmbarcaderoApplicationId)
      .withHeaderParam("X-Embarcadero-App-Secret", xEmbarcaderoAppSecret)
      .withHeaderParam("X-Embarcadero-Master-Secret", xEmbarcaderoMasterSecret)
      .withSuccessResponse[Unit](200)
        /**
   * Used to invoke the POST method of the resource from an existing EMS EdgeModule.
   * 
   * Expected answers:
   *   code 200 :  (OK)
   * 
   * @param mname Is the EMS EdgeModule name
   * @param rname Is the unique EMS EdgeModule Resource name
   * @param body Body Object
   * @param xEmbarcaderoApplicationId 
   * @param xEmbarcaderoAppSecret 
   * @param xEmbarcaderoMasterSecret 
   */
  def postResourceEndpoint(mname: String, rname: String, body: Any, xEmbarcaderoApplicationId: Option[String] = None, xEmbarcaderoAppSecret: Option[String] = None, xEmbarcaderoMasterSecret: Option[String] = None): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.POST, "http://localhost:8080", "/edgemodules/{mname}/{rname}", "application/json")
      .withBody(body)
      .withPathParam("mname", mname)
      .withPathParam("rname", rname)
      .withHeaderParam("X-Embarcadero-Application-Id", xEmbarcaderoApplicationId)
      .withHeaderParam("X-Embarcadero-App-Secret", xEmbarcaderoAppSecret)
      .withHeaderParam("X-Embarcadero-Master-Secret", xEmbarcaderoMasterSecret)
      .withSuccessResponse[Unit](200)
        /**
   * Used to invoke the POST method of the resource from an existing EMS EdgeModule.
   * 
   * Expected answers:
   *   code 200 :  (OK)
   * 
   * @param mname Is the EMS EdgeModule name
   * @param rname Is the unique EMS EdgeModule Resource name
   * @param wildcard Is the Wild card part of the URL
   * @param body Body Object
   * @param xEmbarcaderoApplicationId 
   * @param xEmbarcaderoAppSecret 
   * @param xEmbarcaderoMasterSecret 
   */
  def postResourceEndpointItem(mname: String, rname: String, wildcard: String, body: Any, xEmbarcaderoApplicationId: Option[String] = None, xEmbarcaderoAppSecret: Option[String] = None, xEmbarcaderoMasterSecret: Option[String] = None): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.POST, "http://localhost:8080", "/edgemodules/{mname}/{rname}/{wildcard}", "application/json")
      .withBody(body)
      .withPathParam("mname", mname)
      .withPathParam("rname", rname)
      .withPathParam("wildcard", wildcard)
      .withHeaderParam("X-Embarcadero-Application-Id", xEmbarcaderoApplicationId)
      .withHeaderParam("X-Embarcadero-App-Secret", xEmbarcaderoAppSecret)
      .withHeaderParam("X-Embarcadero-Master-Secret", xEmbarcaderoMasterSecret)
      .withSuccessResponse[Unit](200)
        /**
   * Used to invoke the PUT method of the resource from an existing EMS EdgeModule.
   * 
   * Expected answers:
   *   code 200 :  (OK)
   * 
   * @param mname Is the EMS EdgeModule name
   * @param rname Is the unique EMS EdgeModule Resource name
   * @param body Body Object
   * @param xEmbarcaderoApplicationId 
   * @param xEmbarcaderoAppSecret 
   * @param xEmbarcaderoMasterSecret 
   */
  def putResourceEndpoint(mname: String, rname: String, body: Any, xEmbarcaderoApplicationId: Option[String] = None, xEmbarcaderoAppSecret: Option[String] = None, xEmbarcaderoMasterSecret: Option[String] = None): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.PUT, "http://localhost:8080", "/edgemodules/{mname}/{rname}", "application/json")
      .withBody(body)
      .withPathParam("mname", mname)
      .withPathParam("rname", rname)
      .withHeaderParam("X-Embarcadero-Application-Id", xEmbarcaderoApplicationId)
      .withHeaderParam("X-Embarcadero-App-Secret", xEmbarcaderoAppSecret)
      .withHeaderParam("X-Embarcadero-Master-Secret", xEmbarcaderoMasterSecret)
      .withSuccessResponse[Unit](200)
        /**
   * Used to invoke the PUT method of the resource from an existing EMS EdgeModule.
   * 
   * Expected answers:
   *   code 200 :  (OK)
   * 
   * @param mname Is the EMS EdgeModule name
   * @param rname Is the unique EMS EdgeModule Resource name
   * @param wildcard Is the Wild card part of the URL
   * @param body Body Object
   * @param xEmbarcaderoApplicationId 
   * @param xEmbarcaderoAppSecret 
   * @param xEmbarcaderoMasterSecret 
   */
  def putResourceEndpointItem(mname: String, rname: String, wildcard: String, body: Any, xEmbarcaderoApplicationId: Option[String] = None, xEmbarcaderoAppSecret: Option[String] = None, xEmbarcaderoMasterSecret: Option[String] = None): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.PUT, "http://localhost:8080", "/edgemodules/{mname}/{rname}/{wildcard}", "application/json")
      .withBody(body)
      .withPathParam("mname", mname)
      .withPathParam("rname", rname)
      .withPathParam("wildcard", wildcard)
      .withHeaderParam("X-Embarcadero-Application-Id", xEmbarcaderoApplicationId)
      .withHeaderParam("X-Embarcadero-App-Secret", xEmbarcaderoAppSecret)
      .withHeaderParam("X-Embarcadero-Master-Secret", xEmbarcaderoMasterSecret)
      .withSuccessResponse[Unit](200)
      

}

