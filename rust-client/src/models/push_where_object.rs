/* 
 * EMS API Documentation
 *
 * Enterprise Mobility Services API      [Learn about EMS](https://www.embarcadero.com/products/rad-studio/enterprise-mobility-services)      EMS (Enterprise Mobility Services) offers a Mobile Enterprise Application Platform (MEAP)      TurnKey Middleware for Interconnected Distributed Apps
 *
 * OpenAPI spec version: 0.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct PushWhereObject {
  #[serde(rename = "deviceType")]
  device_type: Option<String>,
  #[serde(rename = "deviceToken")]
  device_token: Option<::models::PushWhereObjectDeviceToken>
}

impl PushWhereObject {
  pub fn new() -> PushWhereObject {
    PushWhereObject {
      device_type: None,
      device_token: None
    }
  }

  pub fn set_device_type(&mut self, device_type: String) {
    self.device_type = Some(device_type);
  }

  pub fn with_device_type(mut self, device_type: String) -> PushWhereObject {
    self.device_type = Some(device_type);
    self
  }

  pub fn device_type(&self) -> Option<&String> {
    self.device_type.as_ref()
  }

  pub fn reset_device_type(&mut self) {
    self.device_type = None;
  }

  pub fn set_device_token(&mut self, device_token: ::models::PushWhereObjectDeviceToken) {
    self.device_token = Some(device_token);
  }

  pub fn with_device_token(mut self, device_token: ::models::PushWhereObjectDeviceToken) -> PushWhereObject {
    self.device_token = Some(device_token);
    self
  }

  pub fn device_token(&self) -> Option<&::models::PushWhereObjectDeviceToken> {
    self.device_token.as_ref()
  }

  pub fn reset_device_token(&mut self) {
    self.device_token = None;
  }

}



