/* 
 * EMS API Documentation
 *
 * Enterprise Mobility Services API      [Learn about EMS](https://www.embarcadero.com/products/rad-studio/enterprise-mobility-services)      EMS (Enterprise Mobility Services) offers a Mobile Enterprise Application Platform (MEAP)      TurnKey Middleware for Interconnected Distributed Apps
 *
 * OpenAPI spec version: 0.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct VersionObject {
  #[serde(rename = "version")]
  version: Option<String>,
  #[serde(rename = "server")]
  server: Option<String>
}

impl VersionObject {
  pub fn new() -> VersionObject {
    VersionObject {
      version: None,
      server: None
    }
  }

  pub fn set_version(&mut self, version: String) {
    self.version = Some(version);
  }

  pub fn with_version(mut self, version: String) -> VersionObject {
    self.version = Some(version);
    self
  }

  pub fn version(&self) -> Option<&String> {
    self.version.as_ref()
  }

  pub fn reset_version(&mut self) {
    self.version = None;
  }

  pub fn set_server(&mut self, server: String) {
    self.server = Some(server);
  }

  pub fn with_server(mut self, server: String) -> VersionObject {
    self.server = Some(server);
    self
  }

  pub fn server(&self) -> Option<&String> {
    self.server.as_ref()
  }

  pub fn reset_server(&mut self) {
    self.server = None;
  }

}



