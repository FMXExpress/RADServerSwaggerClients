/* 
 * EMS API Documentation
 *
 * Enterprise Mobility Services API      [Learn about EMS](https://www.embarcadero.com/products/rad-studio/enterprise-mobility-services)      EMS (Enterprise Mobility Services) offers a Mobile Enterprise Application Platform (MEAP)      TurnKey Middleware for Interconnected Distributed Apps
 *
 * OpenAPI spec version: 0.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct MetaGroupObject {
  #[serde(rename = "creator")]
  creator: String,
  #[serde(rename = "created")]
  created: String,
  #[serde(rename = "updated")]
  updated: Option<String>
}

impl MetaGroupObject {
  pub fn new(creator: String, created: String) -> MetaGroupObject {
    MetaGroupObject {
      creator: creator,
      created: created,
      updated: None
    }
  }

  pub fn set_creator(&mut self, creator: String) {
    self.creator = creator;
  }

  pub fn with_creator(mut self, creator: String) -> MetaGroupObject {
    self.creator = creator;
    self
  }

  pub fn creator(&self) -> &String {
    &self.creator
  }


  pub fn set_created(&mut self, created: String) {
    self.created = created;
  }

  pub fn with_created(mut self, created: String) -> MetaGroupObject {
    self.created = created;
    self
  }

  pub fn created(&self) -> &String {
    &self.created
  }


  pub fn set_updated(&mut self, updated: String) {
    self.updated = Some(updated);
  }

  pub fn with_updated(mut self, updated: String) -> MetaGroupObject {
    self.updated = Some(updated);
    self
  }

  pub fn updated(&self) -> Option<&String> {
    self.updated.as_ref()
  }

  pub fn reset_updated(&mut self) {
    self.updated = None;
  }

}



